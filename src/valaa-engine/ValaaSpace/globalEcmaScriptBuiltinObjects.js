import { createNativeIdentifier } from "~/valaa-script";

// TODO(iridian): Some/a lot of these built-in objects require custom implementations to deal with
// Vrapper's that are passed in as parameters. Alternatively we need to implement native proxy
// objects for them; this might not be such a bad idea anyway to improve scripting system
// performance (can run VS as native JS).
export default {
  Array,
  ArrayBuffer,
  Boolean,
  DataView,
  Date,
  Error,
  EvalError,
  Float32Array,
  Float64Array,
  Function,
//  Generator,
//  GeneratorFunction,
  Infinity,
  Int16Array,
  Int32Array,
  Int8Array,
//  InternalError,
  Intl,
//  Iterator,
  JSON,
  Map,
  Math,
  NaN,
  Number,
  Object,
//  ParallelArray,
  Promise,
//  Proxy,
  RangeError,
  ReferenceError,
//  Reflect,
  RegExp,
  Set,
  String,
  Symbol,
  SyntaxError,
  TypeError,
//  TypedArray,
  URIError,
  Uint16Array,
  Uint32Array,
  Uint8Array,
  Uint8ClampedArray,
  WeakMap,
  WeakSet,
  decodeURI,
  decodeURIComponent,
  encodeURI,
  encodeURIComponent,
//  eval,
  isFinite,
  isNaN,
//  null,
  parseFloat,
  parseInt,
  undefined: createNativeIdentifier(undefined),
//  uneval,
};
