[
  {
    "@id": "https://valospace.org/index",
    "@context": {
      "@base": "https://valospace.org/index#",
      "sbomdoc": "https://valospace.org/sbomdoc#",
      "revdoc": "https://valospace.org/revdoc#",
      "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
      "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
      "xsd": "http://www.w3.org/2001/XMLSchema#",
      "owl": "http://www.w3.org/2002/07/owl#",
      "dc": "http://purl.org/dc/elements/1.1/",
      "vdoc": "https://valospace.org/vdoc#",
      "vdoc:content": {
        "@id": "https://valospace.org/vdoc#content",
        "@container": "@list",
        "@type": "@id"
      },
      "vdoc:words": {
        "@id": "https://valospace.org/vdoc#words",
        "@container": "@list",
        "@type": "@id"
      },
      "vdoc:entries": {
        "@id": "https://valospace.org/vdoc#entries",
        "@container": "@list",
        "@type": "@id"
      },
      "vdoc:headers": {
        "@id": "https://valospace.org/vdoc#headers",
        "@container": "@list",
        "@type": "@id"
      },
      "vdoc:cell": {
        "@id": "https://valospace.org/vdoc#cell",
        "@container": "@list",
        "@type": "@id"
      }
    },
    "dc:title": "Valospace reference",
    "vdoc:tags": [
      "PRIMARY",
      "INTRODUCTION",
      "ONTOLOGY",
      "VALONAUT"
    ],
    "revdoc:package": "@valos/kernel",
    "revdoc:prefix": "valos",
    "revdoc:prefixIRI": "https://valospace.org/#",
    "revdoc:version": "0.35.0-prerelease.22",
    "respecConfig": {
      "subtitle": "0.35.0-prerelease.22",
      "specStatus": "unofficial",
      "editors": [
        {
          "name": "Iridian Kiiskinen",
          "url": "https://valaatech.github.io/fabric/authors/iridian",
          "github": "http://github.com/valospace"
        }
      ],
      "authors": [],
      "shortName": "valos"
    },
    "documents": {
      "@id": "documents",
      "sbom": {
        "@id": "https://valospace.org/sbom",
        "tags": [
          "PRIMARY",
          "SBOM"
        ],
        "subProfiles": [],
        "title": "@valos/kernel@0.35.0-prerelease.21 Software Bill of Materials",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "This document is an autogenerated ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "CycloneDX"
                  ],
                  "vdoc:ref": "https://cyclonedx.org/"
                },
                " ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "SBoM document"
                  ],
                  "vdoc:ref": "https://www.owasp.org/index.php/Component_Analysis#Software_Bill-of-Materials_.28SBOM.29"
                }
              ]
            }
          ]
        },
        "introduction": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "Configure @valos/type-vault-sbom.introduction section using",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "VDoc source graph syntax"
                  ],
                  "vdoc:ref": "@valos/vdoc#source_graph"
                },
                "\nto define the content of this section."
              ]
            }
          ]
        },
        "package": "@valos/kernel",
        "version": "0.35.0-prerelease.21"
      },
      "engine": {
        "@id": "https://valospace.org/engine",
        "tags": [],
        "subProfiles": [],
        "title": "@valos/engine",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "This document is a revdoc template document 'engine' created by\nwrite-revdoc."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "Edit me - this is the first payload chapter. Abstract and SOTD are\nessential ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "ReSpec boilerplate"
                  ],
                  "vdoc:ref": "https://github.com/w3c/respec/wiki/ReSpec-Editor's-Guide#essential-w3c-boilerplate"
                }
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "See ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "ReVDoc tutorial"
                  ],
                  "vdoc:ref": "@valos/revdoc/tutorial"
                },
                " for\ninstructions on how to write revdoc source documents."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "See also ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "ReVdoc specification"
                  ],
                  "vdoc:ref": "@valos/revdoc"
                },
                " and ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "VDoc specification"
                  ],
                  "vdoc:ref": "@valos/vdoc"
                },
                " for reference\ndocumentation."
              ]
            }
          ]
        },
        "package": "@valos/engine",
        "version": "0.35.0-prerelease.22"
      },
      "inspire": {
        "@id": "https://valospace.org/inspire",
        "tags": [],
        "subProfiles": [],
        "title": "inspire",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "This document is a revdoc template document 'inspire' created by\nwrite-revdoc."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "Edit me - this is the first payload chapter. Abstract and SOTD are\nessential ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "ReSpec boilerplate"
                  ],
                  "vdoc:ref": "https://github.com/w3c/respec/wiki/ReSpec-Editor's-Guide#essential-w3c-boilerplate"
                }
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "See ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "ReVDoc tutorial"
                  ],
                  "vdoc:ref": "@valos/revdoc/tutorial"
                },
                " for\ninstructions on how to write revdoc source documents."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "See also ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "ReVdoc specification"
                  ],
                  "vdoc:ref": "@valos/revdoc"
                },
                " and ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "VDoc specification"
                  ],
                  "vdoc:ref": "@valos/vdoc"
                },
                " for reference\ndocumentation."
              ]
            }
          ]
        },
        "package": "@valos/inspire",
        "version": "0.35.0-prerelease.22"
      },
      "inspire/revela": {
        "@id": "https://valospace.org/inspire/revela",
        "tags": [
          "INTRODUCTORY",
          "ONTOLOGY",
          "TESTDOC"
        ],
        "subProfiles": [],
        "title": "revela.json format specification",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "revela.json (pronounced: ",
                {
                  "vdoc:em": true,
                  "vdoc:content": [
                    "revelation"
                  ]
                },
                ") is a JSON\nconfiguration file in which all \"!!!\" key values (",
                {
                  "vdoc:em": true,
                  "vdoc:content": [
                    "spreads"
                  ]
                },
                ")\nare evaluated and their results then spread and merged on top of the\nsurrounding object."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "The evaluation allows for VPath operations, most notably importing\nrelative config files and accessing their subsections. Together the\nevaluation, spread and merge allow for fine-grained ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "DRY"
                  ],
                  "vdoc:ref": "https://en.wikipedia.org/wiki/Don%27t_repeat_yourself"
                },
                "\nfor various valos fabric config files."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "revdoc:Example",
              "dc:title": "trivial revelation patch",
              "vdoc:content": [
                {
                  "@type": "vdoc:Paragraph",
                  "vdoc:content": [
                    [
                      "we expect",
                      {
                        "vdoc:blockquote": true,
                        "vdoc:content": [
                          {
                            "@type": "vdoc:CharacterData",
                            "vdoc:content": [
                              " lazyPatchRevelations(gatewayMock, { a: [1] }, { a: [2] })"
                            ]
                          }
                        ]
                      }
                    ],
                    "toEqual",
                    {
                      "vdoc:blockquote": true,
                      "vdoc:content": [
                        {
                          "@type": "vdoc:CharacterData",
                          "vdoc:content": [
                            " ({ a: [1, 2] })"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "@type": "revdoc:Example",
              "dc:title": "spread of a simple relative import",
              "vdoc:content": [
                {
                  "@type": "vdoc:Paragraph",
                  "vdoc:content": [
                    [
                      "we expect",
                      {
                        "vdoc:blockquote": true,
                        "vdoc:content": [
                          {
                            "@type": "vdoc:CharacterData",
                            "vdoc:content": [
                              " lazyPatchRevelations(gatewayMock, {}, { \"!!!\": \"./path\" })"
                            ]
                          }
                        ]
                      }
                    ],
                    "toMatchObject",
                    {
                      "vdoc:blockquote": true,
                      "vdoc:content": [
                        {
                          "@type": "vdoc:CharacterData",
                          "vdoc:content": [
                            " ({ requireKey: \"/site/revelation/path\", someField: 1 })"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "@type": "revdoc:Example",
              "dc:title": "spread of an explicit site root import followed by field access",
              "vdoc:content": [
                {
                  "@type": "vdoc:Paragraph",
                  "vdoc:content": [
                    [
                      "we expect",
                      {
                        "vdoc:blockquote": true,
                        "vdoc:content": [
                          {
                            "@type": "vdoc:CharacterData",
                            "vdoc:content": [
                              " lazyPatchRevelations(gatewayMock, \"\", {\n  \"!!!\": [\"/path\", \"requireKey\"],\n})"
                            ]
                          }
                        ]
                      }
                    ],
                    "toEqual",
                    {
                      "vdoc:blockquote": true,
                      "vdoc:content": [
                        {
                          "@type": "vdoc:CharacterData",
                          "vdoc:content": [
                            "\"/site/path\""
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "@type": "revdoc:Example",
              "dc:title": "spread of a URI import followed by pick-array append",
              "vdoc:content": [
                {
                  "@type": "vdoc:Paragraph",
                  "vdoc:content": [
                    [
                      "we expect",
                      {
                        "vdoc:blockquote": true,
                        "vdoc:content": [
                          {
                            "@type": "vdoc:CharacterData",
                            "vdoc:content": [
                              " lazyPatchRevelations(gatewayMock,\n    [0], {\n      \"!!!\": [[\"$https:foobar.com/path\"], [\"*:$\",\n        [\".:fetchedField\"],\n        [\"@.:fetchOptions@.:input@@\"],\n      ]],\n    },\n    undefined,\n    [\"last\"])"
                            ]
                          }
                        ]
                      }
                    ],
                    "toEqual",
                    {
                      "vdoc:blockquote": true,
                      "vdoc:content": [
                        {
                          "@type": "vdoc:CharacterData",
                          "vdoc:content": [
                            " [0, 1, \"https://foobar.com/path\", \"last\"]"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "@type": "revdoc:Example",
              "dc:title": "nested import & invoke spread to resolve all spreads",
              "vdoc:content": [
                {
                  "@type": "vdoc:Paragraph",
                  "vdoc:content": [
                    [
                      "we expect",
                      {
                        "vdoc:blockquote": true,
                        "vdoc:content": [
                          {
                            "@type": "vdoc:CharacterData",
                            "vdoc:content": [
                              " lazyPatchRevelations(gatewayMock, {}, {\n  out: {\n    \"!!!\": {\n      prefixes: {\n        \"/test/v0\": {\n          name: \"test\",\n          \"test-lib\": {\n            preset: 10, overridden: 10, sessionDuration: 0,\n            view: { focus: \"focus to be overwritten\", nulled: \"nulled to be overwritten\" },\n            unboundAndUnsegmented: [\"$un:bound\"],\n          },\n        },\n      },\n    },\n    prefixes: {\n      \"/test/v0\": {\n        \"!!!\": [\"@\", [\"!:test-lib\"], [\"!$valk:invoke:callMe\", {\n          view: {\n            focus: \"valaa-aws://example.org/deployment?id=f0c5-f0c5\",\n            nulled: null,\n          },\n          identity: { \"!!!\": [\"./config\", \"requireKey\"] },\n          sessionDuration: 86400,\n          unboundButSegmented: [\"$also:unbound\"],\n        }]],\n        \"test-lib\": { overridden: 20 },\n      },\n    }\n  }\n})"
                            ]
                          }
                        ]
                      }
                    ],
                    "toEqual",
                    {
                      "vdoc:blockquote": true,
                      "vdoc:content": [
                        {
                          "@type": "vdoc:CharacterData",
                          "vdoc:content": [
                            " ({\n  out: {\n    prefixes: {\n      \"/test/v0\": {\n        name: \"test\",\n        \"test-lib\": {\n          preset: 10, overridden: 20, sessionDuration: 86400,\n          view: { focus: \"valaa-aws://example.org/deployment?id=f0c5-f0c5\", nulled: null },\n          identity: \"/site/revelation/config\",\n          unboundAndUnsegmented: [\"$un:bound\"],\n          unboundButSegmented: [\"$\", \"also\", \"unbound\"],\n        }\n      }\n    }\n  }\n})"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        "ontologyAbstract": {
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                {
                  "vdoc:em": true,
                  "vdoc:content": [
                    "revela"
                  ]
                },
                " ontology specifies the verbs specific to revela.json\nfiles."
              ]
            }
          ]
        },
        "package": "@valos/inspire",
        "version": "0.35.0-prerelease.22"
      },
      "raem": {
        "@id": "https://valospace.org/raem",
        "tags": [
          "PRIMARY",
          "INTRODUCTORY",
          "ONTOLOGY",
          "LIBRARY"
        ],
        "subProfiles": [],
        "title": "ValOS Resources And Events Model (ValOS-RAEM) API, schema and ontology",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "This library provides the definitions and reference implementation\nfor the fundamental ",
                {
                  "@type": "vdoc:CharacterData",
                  "vdoc:content": [
                    "ValOS Resources"
                  ]
                },
                " and ",
                {
                  "@type": "vdoc:CharacterData",
                  "vdoc:content": [
                    "ValOS Events"
                  ]
                },
                "\nsystems."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "This library provides the definitions and reference implementations\nfor the fundamental ",
                {
                  "@type": "vdoc:CharacterData",
                  "vdoc:content": [
                    "ValOS Resources"
                  ]
                },
                " and ",
                {
                  "@type": "vdoc:CharacterData",
                  "vdoc:content": [
                    "ValOS Events"
                  ]
                },
                "\nsystems."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                {
                  "vdoc:quote": true,
                  "vdoc:content": [
                    [
                      "A ValOS Resource ",
                      {
                        "@type": "vdoc:CharacterData",
                        "vdoc:content": [
                          "resource"
                        ]
                      },
                      " represents a well-defined part of\n  the world. It has a well-defined state at each particular moment in time."
                    ]
                  ]
                }
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                {
                  "vdoc:quote": true,
                  "vdoc:content": [
                    [
                      "A ValOS Event ",
                      {
                        "@type": "vdoc:CharacterData",
                        "vdoc:content": [
                          "event"
                        ]
                      },
                      " represents a dynamic change to a\n  resource by describing the change from previous to subsequent resource\n  states at a particular time."
                    ]
                  ]
                }
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "The interplay of these distinct yet interwoven systems forms the\nfoundation of the Valaa Open System."
              ]
            }
          ]
        },
        "ontologyAbstract": {
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "@valos/raem ontology specifies the Valospace core types and properties\ndirectly to the @valos/kernel namespace."
              ]
            }
          ]
        },
        "package": "@valos/raem",
        "version": "0.35.0-prerelease.22"
      },
      "raem/VPath/VPath": {
        "@id": "https://valospace.org/raem/VPath/VPath",
        "tags": [],
        "subProfiles": [],
        "title": "ValOS Path",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "ValOS Paths ('VPaths') are recursively structured general purpose\nstrings. They have a simple grammar making them readily URI embeddable."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "A step below JSON in generality they are the fundamental\nprimitive used by valos to implement resource identifiers, valospace\nqueries, deterministic JSON serialization, an intermediate language\nfor computation, a configuration language, JSON-LD interactions and\nmore."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "VPaths have a formalized mechanism for making parameterized use of\ncontext-specific definitions. This enables integrations to semantic\nweb. This context-specific yet formally semantic system forms the\ncornerstone of valos security architecture."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "\nA subset of vpaths called 'vrids' contain a fixed starting point and\nidentify valospace resources."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "VPaths contain 'context terms' which refer to definitions provided by\nthe surrounding context, usually as references to some external\nontology. This allows VPath semantics to be extended in domain\nspecific but reusable manner."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "The primary example of a vpath context is the JSON-LD @context of a ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "ValOS event chronicle"
                  ],
                  "vdoc:ref": "@valos/sourcerer/valos-event-log"
                },
                "\nwhich provides the semantics for all vpaths that appear inside the\nchronicle.\n    "
              ]
            }
          ]
        },
        "package": "@valos/raem",
        "version": "0.35.0-prerelease.22"
      },
      "revdoc": {
        "@id": "https://valospace.org/revdoc",
        "tags": [
          "PRIMARY",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "ReVDoc - ReSpec document VDoc extension",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "This document specifies ReVDoc, a ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "VDoc extension"
                  ],
                  "vdoc:ref": "@valos/vdoc#extension"
                },
                "\nfor extracting and emitting ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "ReSpec documents"
                  ],
                  "vdoc:ref": "https://github.com/w3c/respec"
                },
                "."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "ReVDoc is a VDoc extension which can produce ReSpec documents."
              ]
            }
          ]
        },
        "ontologyAbstract": {
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "ReVDoc ontology provides vocabulary and definitions which are tailored\nfor emitting ReSpec html output documents."
              ]
            }
          ]
        },
        "package": "@valos/revdoc",
        "version": "0.35.0-prerelease.22"
      },
      "revdoc/tutorial": {
        "@id": "https://valospace.org/revdoc/tutorial",
        "tags": [],
        "subProfiles": [],
        "title": "ReVDoc Tutorial",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "This document is a revdoc template document 'tutorial' created by\nwrite-revdoc."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "Edit me - this is the first payload chapter. Abstract and SOTD are\nessential ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "ReSpec boilerplate"
                  ],
                  "vdoc:ref": "https://github.com/w3c/respec/wiki/ReSpec-Editor's-Guide#essential-w3c-boilerplate"
                },
                "."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "See ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "ReVDoc tutorial"
                  ],
                  "vdoc:ref": "@valos/revdoc/tutorial"
                },
                " for\ninstructions on how to write revdoc source documents."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "See also ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "ReVdoc specification"
                  ],
                  "vdoc:ref": "@valos/revdoc"
                },
                " and ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "VDoc specification"
                  ],
                  "vdoc:ref": "@valos/vdoc"
                },
                " for reference documentation."
              ]
            }
          ]
        },
        "package": "@valos/revdoc",
        "version": "0.35.0-prerelease.22"
      },
      "sbomdoc": {
        "@id": "https://valospace.org/sbomdoc",
        "tags": [
          "PRIMARY",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "SBoMDoc - Software Bill of Materials VDoc extension",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "This document specifies SBomDoc, a ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "VDoc extension"
                  ],
                  "vdoc:ref": "@valos/vdoc#extension"
                },
                "\nfor extracting and emitting ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "CycloneDX BOM documents"
                  ],
                  "vdoc:ref": "https://cyclonedx.org/"
                },
                "\nin various formats."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "SBoMDoc is a VDoc extension which uses CycloneDX namespaces and can\nemit BOM documents in various formats."
              ]
            }
          ]
        },
        "ontologyAbstract": {
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "SBoMDoc ontology provides vocabulary and definitions which are\ntailored for representing CycloneDX SBoM analysis semantic content."
              ]
            }
          ]
        },
        "package": "@valos/sbomdoc",
        "version": "0.35.0-prerelease.22"
      },
      "script": {
        "@id": "https://valospace.org/script",
        "tags": [
          "PRIMARY",
          "INTRODUCTORY",
          "ONTOLOGY",
          "LIBRARY"
        ],
        "subProfiles": [],
        "title": "ValOS Script API, schema",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "This library provides the definitions and reference implementation\nfor valoscript, the valospace ECMAScript dialect."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "Valoscript extends ECMAScript 5 object model transparently for\nmanipulating valospace resources. The valoscript interpreter creates ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "events"
                  ],
                  "vdoc:ref": "@valos/raem#event"
                },
                " from all valospace resource\nmodification side-effects and groups all such side effects into\ntransactions. Valoscript retains ECMAScript 5 syntax and semantics."
              ]
            }
          ]
        },
        "ontologyAbstract": {
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "@valos/script ontology specifies the Valospace core types and properties\ndirectly to the @valos/kernel namespace. "
              ]
            }
          ]
        },
        "package": "@valos/script",
        "version": "0.35.0-prerelease.22"
      },
      "sourcerer": {
        "@id": "https://valospace.org/sourcerer",
        "tags": [
          "PRIMARY",
          "INTRODUCTORY",
          "ONTOLOGY",
          "LIBRARY"
        ],
        "subProfiles": [],
        "title": "ValOS Sourcerer API, schema",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "This library provides the definitions and reference implementation\nof the ValOS sourcerer architecture which is used to route ",
                {
                  "@type": "vdoc:CharacterData",
                  "vdoc:content": [
                    "ValOS event streams"
                  ]
                },
                "."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "vdoc:Chapter",
          "vdoc:content": []
        },
        "ontologyAbstract": {
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "@valos/sourcerer ontology specifies the Valospace core types and\nproperties directly to the @valos/kernel namespace. "
              ]
            }
          ]
        },
        "package": "@valos/sourcerer",
        "version": "0.35.0-prerelease.22"
      },
      "sourcerer/valos-event-log": {
        "@id": "https://valospace.org/sourcerer/valos-event-log",
        "tags": [],
        "subProfiles": [],
        "title": "ValOS Event Log",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "ValOS Event Log is an ordered, numbered sequence of JSON-LD documents.\nEach document represents a single event. Together these events\nincrementally, exclusively and deterministically specify the state\nchanges of a single valospace partition from its initial empty state to\nthe current state after the most recent event."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "TODO."
              ]
            }
          ]
        },
        "package": "@valos/sourcerer",
        "version": "0.35.0-prerelease.22"
      },
      "sourcerer/VState": {
        "@id": "https://valospace.org/sourcerer/VState",
        "tags": [],
        "subProfiles": [],
        "title": "ValOS state serialization format",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "ValOS state format specification for serializing valospace state into\na JSON-LD document with a well-defined underlying semantic ontology."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "JSON-LD is the primary state format. Some of this information is lost\nwhen it is expanded as triples.\n"
              ]
            },
            {
              "@id": "state_example"
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "\nTODO."
              ]
            }
          ]
        },
        "package": "@valos/sourcerer",
        "version": "0.35.0-prerelease.22"
      },
      "twindoc": {
        "@id": "https://valospace.org/twindoc",
        "tags": [
          "PRIMARY",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "TwinDoc - Valospace Hypertwin VDoc extension",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "This document specifies TwinDoc, a ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "VDoc extension"
                  ],
                  "vdoc:ref": "@valos/vdoc#extension"
                },
                "\nwhich specifies an isomorphism and synchronization transformations\nbetween VDoc documents and valospace resources."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "More specifically TwinDoc allows for the serialization and\ndeserialization of an arbitrary selection of valospace resources\ninto a VDoc document array and back even if the source resources\nare not a representation of a VDoc document nor use any VDoc core\nor extension ontologies."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "TwinDoc provides both full isomorphic synchronization as well as\nincremental, additive updates between VDoc documents and valospace\nresources.\nThe fully isomoprhic extraction and emission transformations to\nvalospace resources provide lossless roundtrips to both directions:",
                {
                  "vdoc:content": [
                    {
                      "@type": "vdoc:NumberedList",
                      "vdoc:entries": [
                        [
                          "emit + extract: a roundtrip starting from VDocLD into valospace back into VDocLD"
                        ],
                        {
                          "@type": "vdoc:Paragraph",
                          "vdoc:content": [
                            "extract + emit: a roundtrip starting from valospace into VDocLD back into valospace"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "TwinDoc also specifies incremental transformations which are given\na diff base in addition to the source and which compute a diffset and\nthen merge the resulting diffset to the pre-existing transformation\ntarget. This not only gives performance advantages but also makes it\npossible to have the final document be a combination of several\npartial primary sources."
              ]
            }
          ]
        },
        "ontologyAbstract": {
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "TwinDoc ontology provides vocabulary for defining hypertwin mappings\nand configurations; actual hypertwin content is represented using the\nvalos core ontologies and possible extension content ontologies."
              ]
            }
          ]
        },
        "package": "@valos/twindoc",
        "version": "0.35.0-prerelease.22"
      },
      "type-vault/AssortedTutorials": {
        "@id": "https://valospace.org/type-vault/AssortedTutorials",
        "tags": [
          "PRIMARY",
          "HOW_TO"
        ],
        "subProfiles": [],
        "title": "Assorted tutorials",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            "This document is a collection of tutorials and possibly other notes",
            " created by Jaradacl based on the tasks given. (During first few days at least)"
          ]
        },
        "introduction": {},
        "package": "@valos/type-vault",
        "version": "0.35.0-prerelease.22"
      },
      "vdoc": {
        "@id": "https://valospace.org/vdoc",
        "tags": [
          "PRIMARY",
          "ONTOLOGY"
        ],
        "subProfiles": [],
        "title": "VDoc - ValOS document interchange specification",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "This document specifies VDoc, a ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "a JSON-LD"
                  ],
                  "vdoc:ref": "https://www.w3.org/TR/json-ld11/"
                },
                "-based documentation\nhuman-machine-valospace interchange format."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                {
                  "revdoc:dfn": "#vdoc",
                  "vdoc:content": [
                    {
                      "vdoc:strong": true,
                      "vdoc:content": [
                        {
                          "@type": "vdoc:Reference",
                          "vdoc:content": [
                            "VDoc"
                          ],
                          "vdoc:ref": "#vdoc"
                        }
                      ]
                    },
                    " is an extensible JSON-LD interchange\n  specification for extracting documents from varying sources,\n  passing the now-machine-manipulable interchange document around\n  and subsequently producing documents of specific formats such\n  as Valospace resources, markdown, ReSpec HTML and browser and\n  ansi-colored console outputs."
                  ]
                }
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "Motivation for this specification is to provide the foundation for\ndocument ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "Valospace hypertwins"
                  ],
                  "vdoc:ref": "@valos/hypertwin"
                },
                " by\nsupporting the ValOS resources as an emission target. This allows all\nkinds of documents to be accessible from within Valospace with minimal\nadditional tooling.\nThis is not made an explicit design goal unto itself; instead the\ndesign goals are chosen to be generic in a way that satisfies this goal\nas the original author believes this leads to better design."
              ]
            }
          ]
        },
        "ontologyAbstract": {
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "VDoc core ontology specifies the vocabulary for the human facing\ndocument structure by means of primitives which are sufficiently\ncommon and meaningful across all types of documents. These primitives\ninclude constructs such as chapters, titles, lists, tables,\ncross-references, etc."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "VDoc core ontology explicitly does not specify any semantic\nmeanings outside the document structure itself."
              ]
            }
          ]
        },
        "package": "@valos/vdoc",
        "version": "0.35.0-prerelease.22"
      },
      "web-spindle": {
        "@id": "https://valospace.org/web-spindle",
        "tags": [],
        "subProfiles": [],
        "title": "Web API spindle",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "Web API spindle extends the gateway with a http(s) service endpoint\nwhich maps valospace resources to a RESTful API using a reusable\ndeclarative route mapping definition JSON-LD document."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "Once a well-defined mapping definition for some use case is created and\ndocumented by a technician then all valonauts are able to create\nconforming resource structures fully inside the valospace. After that\na service provider can be commissioned to expose those resources via\nsome internet endpoint using the mapping definition."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "As is traditional the web API spindle is configured via a set of route\npatterns which are matched against incoming request IRIs."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "The mapping definition is JSON-LD document (created by a technician)\nwhich describes a set of routes and their mapping vpaths to valospace\nresources. These paths typically originate from a single, configurable\n",
                {
                  "vdoc:em": true,
                  "vdoc:content": [
                    "service index"
                  ]
                },
                " valospace resource."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "A well-defined and documented mapping definition for some use case can\nbe reused. A valonaut can create a conforming valospace service index\nand its surrounding resource structure and then request for a service\nfrom a ",
                {
                  "vdoc:em": true,
                  "vdoc:content": [
                    "web API provider"
                  ]
                },
                " by providing only the mapping\ndefinition, the service index and any necessary security credentials."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "The route definition format is ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "JSON schema"
                  ],
                  "vdoc:ref": "https://json-schema.org/"
                },
                " which is as expected used to describe the route request and response\ndata types. These route specs can optionally exposed via an ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "OpenAPI 3.0.0"
                  ],
                  "vdoc:ref": "https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md"
                },
                " (or newer) route). In addition to route format specification the\ndefinition schema includes the ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "declarative mapping definitions"
                  ],
                  "vdoc:ref": "#section_mapping_definition"
                },
                " from the route requests to valospace resources and eventually back to\nresponses."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "The sub-library ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "schema-builder"
                  ],
                  "vdoc:ref": "@valos/web-spindle/schema-builder"
                },
                "\ncontains the convenience functions that can be used to build the schema\ndescription types and routes and also emit the plain data description\nobjects which the web API spindle can then consume."
              ]
            }
          ]
        },
        "package": "@valos/web-spindle",
        "version": "0.35.0-prerelease.22"
      },
      "web-spindle/schema-builder": {
        "@id": "https://valospace.org/web-spindle/schema-builder",
        "tags": [],
        "subProfiles": [],
        "title": "Web API Schema Builder TestDoc",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "Schema builder is a javascript library for exporting a site\nconfiguration that can be consumed by the Web API spindle. This config\nis a fully declarative ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "JSON schema"
                  ],
                  "vdoc:ref": "http://json-schema.org/"
                },
                "-based format which not just describes the external API routes and\ntypes but also defines their valospace projections using embedded ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "vpath"
                  ],
                  "vdoc:ref": "@valos/raem/VPath"
                },
                "."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "This library is primarily intended to be used from inside a\n",
                {
                  "vdoc:em": true,
                  "vdoc:content": [
                    "spindle configuration library"
                  ]
                },
                " which is invoked from inside\na ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "revela.json"
                  ],
                  "vdoc:ref": "@valos/inspire/revela"
                },
                " gateway to emit\nthe JSON configuration."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "The four schema builder concepts are:"
              ]
            },
            {
              "@type": "vdoc:BulletList",
              "vdoc:entries": [
                [
                  {
                    "@type": "vdoc:Reference",
                    "vdoc:content": [
                      "Site configuration"
                    ],
                    "vdoc:ref": "#section_site_configuration"
                  },
                  " is the\n  JSON output of this library, consumable by Web API spindle."
                ],
                {
                  "@type": "vdoc:Paragraph",
                  "vdoc:content": [
                    {
                      "@type": "vdoc:Reference",
                      "vdoc:content": [
                        "Type and property schemas"
                      ],
                      "vdoc:ref": "#section_schemas"
                    },
                    " describe\n  layouts of Web API and valospace resources and properties. These are\n  used for GET result body contents, POST, PATCH and PUT request body\n  fields. When exported in the site configuration these are transformed\n  into shared schema objects."
                  ]
                },
                {
                  "@type": "vdoc:Paragraph",
                  "vdoc:content": [
                    {
                      "@type": "vdoc:Reference",
                      "vdoc:content": [
                        "Routes definitions"
                      ],
                      "vdoc:ref": "#section_routes"
                    },
                    " are the traditional\n  tool to define the request entry points and to descrbibe their\n  parameters. Routes tie into valospace resources via gate projections\n  which are embedded inside primary type schemas."
                  ]
                },
                {
                  "@type": "vdoc:Paragraph",
                  "vdoc:content": [
                    {
                      "@type": "vdoc:Reference",
                      "vdoc:content": [
                        "Projections and reflections"
                      ],
                      "vdoc:ref": "#section_projections"
                    },
                    " are ",
                    {
                      "@type": "vdoc:Reference",
                      "vdoc:content": [
                        "VPaths"
                      ],
                      "vdoc:ref": "@valos/raem/VPath"
                    },
                    " that are embedded in the gates\n  and types respectively and which define paths into and between\n  valospace resources, respectively"
                  ]
                }
              ]
            }
          ]
        },
        "package": "@valos/web-spindle",
        "version": "0.35.0-prerelease.22"
      },
      "kernel": {
        "@id": "https://valospace.org/kernel",
        "tags": [
          "PRIMARY",
          "DOMAIN",
          "ONTOLOGY",
          "TECHNICIAN"
        ],
        "subProfiles": [],
        "title": "@valos/kernel domain content reference",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "@valos/kernel domain  includes all core infrastructure components of ValOS -\nthe Valaa Open System."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "These components are hosted at the ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "npmjs repository within @valos namespace"
                  ],
                  "vdoc:ref": "https://www.npmjs.com/search?q=%40valos"
                },
                "."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "These components are developed at the ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "valos git repository"
                  ],
                  "vdoc:ref": "https://github.com/valaatech/kernel"
                },
                "."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "ValOS ecosystem revolves around various roles. This document is\na reference document of the ValOS fabric systems and structures\nand is directed for technicians. Check out the brief\ndescription and introductions of the other roles as well."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "Valma"
                  ],
                  "vdoc:ref": "Valma"
                },
                " itself is a collection of tools for interacting\nwith the ValOS ecosystem, most notable of which is ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    [
                      {
                        "vdoc:em": true,
                        "vdoc:content": [
                          "vlm"
                        ]
                      },
                      " the command line script invoker"
                    ]
                  ],
                  "vdoc:ref": "@/valma"
                },
                "."
              ]
            },
            {
              "vdoc:lookup": "documents",
              "@type": "vdoc:Table",
              "vdoc:headers": {
                "vdoc:entries": [
                  {
                    "@type": "vdoc:Header",
                    "vdoc:cell": {
                      "vdoc:strong": true,
                      "vdoc:content": [
                        {
                          "@type": "vdoc:Reference",
                          "vdoc:content": [
                            "vdoc:selectKey"
                          ],
                          "vdoc:ref": "vdoc:selectKey"
                        }
                      ]
                    },
                    "vdoc:content": [
                      "Your role:"
                    ]
                  },
                  {
                    "@type": "vdoc:Header",
                    "vdoc:cell": {
                      "vdoc:strong": true,
                      "vdoc:content": [
                        {
                          "vdoc:em": true,
                          "vdoc:content": [
                            {
                              "@type": "vdoc:Reference",
                              "vdoc:content": [
                                {
                                  "vdoc:selectField": "title"
                                }
                              ],
                              "vdoc:ref": [
                                "vdoc:selectKey",
                                "#introduction"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "vdoc:content": [
                      "Your answer..."
                    ]
                  },
                  {
                    "vdoc:cell": "introduction",
                    "@type": "vdoc:Header",
                    "vdoc:content": {
                      "vdoc:em": true,
                      "vdoc:content": [
                        "Introduction:"
                      ]
                    },
                    "vdoc:wide": true,
                    "vdoc:tall": true
                  },
                  {
                    "@type": "vdoc:Header",
                    "vdoc:content": {
                      "vdoc:em": true,
                      "vdoc:content": [
                        "Aliases:"
                      ]
                    },
                    "vdoc:wide": true,
                    "vdoc:cell": {
                      "vdoc:em": true,
                      "vdoc:content": [
                        {
                          "@type": "vdoc:Reference",
                          "vdoc:content": [
                            {
                              "vdoc:words": {
                                "vdoc:selectField": "subProfiles"
                              }
                            }
                          ],
                          "vdoc:ref": [
                            "vdoc:selectKey",
                            "#section_profiles"
                          ]
                        }
                      ]
                    }
                  }
                ]
              },
              "vdoc:entries": [
                "technician",
                "valonaut",
                "voyager"
              ]
            }
          ]
        },
        "ontologyAbstract": {
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "@valos/kernel ontology provides vocabulary and definitions of the\nValOS core concepts."
              ]
            }
          ]
        },
        "package": "@valos/kernel",
        "version": "0.35.0-prerelease.21"
      },
      "removed-from": {
        "@id": "https://valospace.org/removed-from",
        "tags": [
          "ONTOLOGY",
          "TECHNICIAN"
        ],
        "subProfiles": [],
        "title": "@valos/kernel removed-from field reference",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "Ontology of the secondary `removed-from` fields of the primary\nvalospace fields which have them (ie. those which statefully track\nentries that have been removed from them)."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "Some container fields maintain a hidden list of entries that have been\nremoved from them, f.ex. for expressing removals from ghost fields\nwhich are empty as they inherit their entries from the prototype."
              ]
            }
          ]
        },
        "ontologyAbstract": {
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "Valospace removed-from ontology provides vocabulary and definitions of\nthe primary ValOS resources removed-from fields."
              ]
            }
          ]
        },
        "package": "@valos/kernel",
        "version": "0.35.0-prerelease.21"
      },
      "@valos/kernel": {
        "@id": "https://valospace.org/index",
        "tags": [
          "PRIMARY",
          "INTRODUCTION",
          "ONTOLOGY",
          "VALONAUT"
        ],
        "subProfiles": [],
        "title": "Valospace reference",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "Overview of the valospace APIs and ontologies."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "ValOS ecosystem revolves around various roles. This document is\na reference document of valospace systems and structures and is\ndirected for more experienced valonauts. Check out the brief description\nand introductions of the other roles as well."
              ]
            },
            {
              "vdoc:lookup": "documents",
              "@type": "vdoc:Table",
              "vdoc:headers": {
                "vdoc:entries": [
                  {
                    "@type": "vdoc:Header",
                    "vdoc:cell": {
                      "vdoc:strong": true,
                      "vdoc:content": [
                        {
                          "@type": "vdoc:Reference",
                          "vdoc:content": [
                            "vdoc:selectKey"
                          ],
                          "vdoc:ref": "vdoc:selectKey"
                        }
                      ]
                    },
                    "vdoc:content": [
                      "Your role:"
                    ]
                  },
                  {
                    "@type": "vdoc:Header",
                    "vdoc:cell": {
                      "vdoc:strong": true,
                      "vdoc:content": [
                        {
                          "vdoc:em": true,
                          "vdoc:content": [
                            {
                              "@type": "vdoc:Reference",
                              "vdoc:content": [
                                {
                                  "vdoc:selectField": "title"
                                }
                              ],
                              "vdoc:ref": [
                                "vdoc:selectKey",
                                "#introduction"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "vdoc:content": [
                      "Your answer..."
                    ]
                  },
                  {
                    "vdoc:cell": "introduction",
                    "@type": "vdoc:Header",
                    "vdoc:content": {
                      "vdoc:em": true,
                      "vdoc:content": [
                        "Introduction:"
                      ]
                    },
                    "vdoc:wide": true,
                    "vdoc:tall": true
                  },
                  {
                    "@type": "vdoc:Header",
                    "vdoc:content": {
                      "vdoc:em": true,
                      "vdoc:content": [
                        "Aliases:"
                      ]
                    },
                    "vdoc:wide": true,
                    "vdoc:cell": {
                      "vdoc:em": true,
                      "vdoc:content": [
                        {
                          "@type": "vdoc:Reference",
                          "vdoc:content": [
                            {
                              "vdoc:words": {
                                "vdoc:selectField": "subProfiles"
                              }
                            }
                          ],
                          "vdoc:ref": [
                            "vdoc:selectKey",
                            "#section_profiles"
                          ]
                        }
                      ]
                    }
                  }
                ]
              },
              "vdoc:entries": [
                "technician",
                "valonaut",
                "voyager"
              ]
            }
          ]
        },
        "ontologyAbstract": {
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "Valospace ontology provides vocabulary and definitions of the primary\nValOS resources."
              ]
            }
          ]
        },
        "package": "@valos/kernel",
        "version": "0.35.0-prerelease.21"
      },
      "technician": {
        "@id": "https://valospace.org/technician",
        "tags": [
          "PRIMARY",
          "ROLE"
        ],
        "subProfiles": [
          "contributor",
          "developer",
          "administrator",
          "devops",
          "hacker",
          "etc"
        ],
        "title": "\"I am a ValOS technician, I want to enable valonauts and expand valospace\"",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "This document is the first introduction for ValOS technicians -\nthe primary infrastructure developers and operators - to the ValOS\necosystem and its infrastructure toolchains and workflows."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "As a technician you develop and operate the ",
                {
                  "revdoc:dfn": "#fabric",
                  "vdoc:content": [
                    {
                      "vdoc:strong": true,
                      "vdoc:content": [
                        {
                          "@type": "vdoc:Reference",
                          "vdoc:content": [
                            "ValOS fabric"
                          ],
                          "vdoc:ref": "#fabric"
                        }
                      ]
                    },
                    ", ",
                    "the globally distributed web-like infrastructure of servers,\n    services and components which underlies the Valospace"
                  ]
                },
                "."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "You use ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "vlm"
                  ],
                  "vdoc:ref": "@/valma"
                },
                " and employ your existing,\nlikely professional knowledge of JavaScript, Node.js, DevOps,\nbackend, library and other software development skills."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "You create new open source and/or proprietary node packages. These\npermanently create new fabric functionalities and ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "expand"
                  ],
                  "vdoc:ref": "expand"
                },
                " the Valospace by integrating it to old world systems."
              ]
            }
          ]
        },
        "package": "@valos/kernel",
        "version": "0.35.0-prerelease.21"
      },
      "valonaut": {
        "@id": "https://valospace.org/valonaut",
        "tags": [
          "PRIMARY",
          "ROLE"
        ],
        "subProfiles": [
          "everyone",
          "personal",
          "student",
          "prototypist",
          "etc"
        ],
        "title": "\"I am a valonaut, I want to create and share interactive content\"",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "This document is the first introduction for valonauts - the primary\ncontent creators - to the ValOS ecosystem and its core tools."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "As a valonaut you create, share and deploy web content and\ninteractive applications fully from inside ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "Valospace"
                  ],
                  "vdoc:ref": "Valospace"
                },
                "."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "You use a web editor called ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "Zero"
                  ],
                  "vdoc:ref": "Zero"
                },
                " and with it employ\ntraditional web technologies; HTML5, CSS and the Javascript\ndialect ",
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "valoscript"
                  ],
                  "vdoc:ref": "@valos/script"
                }
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "The skills you learn to do this are like cycling or writing - they\nare used to support your other interests. While you don't need to\nbecome a professional you certainly can!"
              ]
            }
          ]
        },
        "package": "@valos/kernel",
        "version": "0.35.0-prerelease.21"
      },
      "voyager": {
        "@id": "https://valospace.org/voyager",
        "tags": [
          "PRIMARY",
          "ROLE"
        ],
        "subProfiles": [
          "enthusiast",
          "entrepreneur",
          "evangelist",
          "investor",
          "business_owner",
          "sales_rep",
          "etc"
        ],
        "title": "\"I am a ValOS voyager, I want to discover ValOS and enlighten others\"",
        "abstract": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "This document is the first introduction for ValOS voyagers - the first\nadopters, entrepreneurs and evangelists - to the ValOS ecosystem, its\nphilosophy and its ultimate goals."
              ]
            }
          ]
        },
        "introduction": {
          "@type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "As a voyager you have stakes that matter. Whether you were to\ninvest on a ValOS collaborator as a financier, to adopt ValOS as\ntechnology as an executive or just to commit your personal time and\nenergy on a ValOS project you need to ",
                {
                  "vdoc:em": true,
                  "vdoc:content": [
                    "see"
                  ]
                },
                " forward."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "To make sound decisions and to position yourself proactively you\nneed to understand the big picture and philosophy of the ValOS\necosystem. Only then you can enlighten others."
              ]
            },
            {
              "@type": "vdoc:Paragraph",
              "vdoc:content": [
                "You use tailored but real-world ValOS demo setups to illustrate\nhow ValOS a solution could be configured to meet the needs at hand.\nYour audience can be your customer, your team or even just\nyourself."
              ]
            }
          ]
        },
        "package": "@valos/kernel",
        "version": "0.35.0-prerelease.21"
      }
    },
    "prefixes": {
      "@id": "prefixes",
      "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
      "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
      "xsd": "http://www.w3.org/2001/XMLSchema#",
      "owl": "http://www.w3.org/2002/07/owl#",
      "dc": "http://purl.org/dc/elements/1.1/",
      "valos-kernel": "https://valospace.org/kernel#",
      "valos": "https://valospace.org/#",
      "valos-raem": "https://valospace.org/raem#"
    },
    "vocabulary": {
      "@id": "vocabulary",
      "Resource": {
        "@type": "valos-raem:Type",
        "revdoc:brief": "base resource interface",
        "rdfs:subClassOf": "rdfs:Resource",
        "rdfs:comment": "The class of resources which can appear as a subject in valospace\nresource and event graphs. The domain of all transient and generated\nfields which are available even for unsourced bodies."
      },
      "id": {
        "@type": "valos-raem:GeneratedField",
        "rdfs:domain": "valos:Resource",
        "rdfs:range": "xsd:string",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:cardinality": 1
        },
        "valos-raem:expressor": "$valos-raem:resolveId",
        "rdfs:comment": "The immutable string representation of the VRID of this resource."
      },
      "rawId": {
        "@type": "valos-raem:AliasField",
        "revdoc:deprecatedInFavorOf": "valos:id",
        "valos-raem:aliasOf": "valos:id",
        "rdfs:subPropertyOf": "valos:id",
        "rdfs:domain": "valos:Resource",
        "rdfs:range": "xsd:string",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:cardinality": 1
        },
        "rdfs:comment": "The immutable string representation of the VRID of this resource."
      },
      "vrid": {
        "@type": "valos-raem:TransientField",
        "rdfs:domain": "valos:Resource",
        "rdfs:range": "rdfs:List",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:cardinality": 1
        },
        "valos-raem:expressor": "$valos-raem:resolveVRIDTransient",
        "rdfs:comment": "The immutable, segmented object representation of the VRID of this\nresource."
      },
      "typeName": {
        "@type": "valos-raem:GeneratedField",
        "rdfs:domain": "valos:Resource",
        "rdfs:range": "xsd:string",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:cardinality": 1
        },
        "valos-raem:expressor": "$valos-raem:resolveDominantTypeName",
        "rdfs:comment": "The dominant type name of this resource"
      },
      "prototype": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:domain": "valos:Resource",
        "rdfs:range": "valos:Resource",
        "valos-raem:coupledField": "valos:derivations",
        "rdfs:comment": "The prototypes of this resource. All field lookups for which there is\nno associated value set and whose field descriptors don't have\nownDefaultValue are forwarded to the prototype."
      },
      "derivations": {
        "@type": "valos-raem:CoupledField",
        "rdfs:domain": "valos:Resource",
        "rdfs:range": "valos:Resource",
        "valos-raem:coupledField": "valos:prototype",
        "valos-raem:preventsDestroy": true,
        "valos-raem:ownDefaultValue": [],
        "rdfs:comment": "An unordered set of resources which have this resource as their\nvalos:prototype."
      },
      "ownFields": {
        "@type": "valos-raem:TransientField",
        "rdfs:domain": "valos:Resource",
        "rdfs:range": "valos:Resource",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:expressor": "$valos-raem:resolveOwnFieldsTransient",
        "rdfs:comment": "A transient version of this object as if prototype was undefined.\nAll property accesses will only return field values which are directly\nowned by this resource."
      },
      "inheritors": {
        "@type": "valos-raem:CoupledField",
        "rdfs:subPropertyOf": "valos:derivations",
        "rdfs:domain": "valos:Resource",
        "rdfs:range": "valos:Resource",
        "valos-raem:coupledField": "valos:inheritancePrototype",
        "valos-raem:preventsDestroy": true,
        "valos-raem:ownDefaultValue": [],
        "rdfs:comment": "An unordered set of resources which have this resource as their\nvalos:inheritancePrototype."
      },
      "instances": {
        "@type": "valos-raem:CoupledField",
        "rdfs:subPropertyOf": "valos:derivations",
        "rdfs:domain": "valos:Resource",
        "rdfs:range": "valos:Resource",
        "valos-raem:coupledField": "valos:instancePrototype",
        "valos-raem:preventsDestroy": true,
        "valos-raem:ownDefaultValue": [],
        "rdfs:comment": "An unordered set of resources which have this resource as their\ndirect valos:instancePrototype."
      },
      "ghostPrototype": {
        "@type": "valos-raem:GeneratedField",
        "rdfs:subPropertyOf": "valos:prototype",
        "rdfs:domain": "valos:Resource",
        "rdfs:range": "valos:Resource",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:expressor": "$valos-raem:resolveGhostPrototype",
        "valos-raem:coupledField": "valos:ghosts",
        "rdfs:comment": "Ghost prototype of this ghost resource. The ghost prototype is the\nbase resource from which this ghost was created during some primary\ninstantiation.\nThis instantiation (which happens on prototype and results in an\ninstance of it) also ghost-instantiates all the direct and indirect\nownlings of the prototype as ghost ownlings in the instance. The\ninstance is called the *ghost host* of all these ghosts. Likewise, the\ninstance prototype is called the ghost host prototype, and the\n(grand-)ownlings of this ghost host prototype are the ghost prototypes\nof the corresponding ghosts (ie. this field).} ."
      },
      "ghosts": {
        "@type": "valos-raem:CoupledField",
        "rdfs:subPropertyOf": "valos:derivations",
        "rdfs:domain": "valos:Resource",
        "rdfs:range": "valos:Resource",
        "valos-raem:coupledField": "valos:ghostPrototype",
        "valos-raem:preventsDestroy": true,
        "valos-raem:ownDefaultValue": [],
        "rdfs:comment": "An unordered set of all (materialized) ghosts which have this resource\nas their valos:ghostPrototype. See @valos/raem#section_ghost_instancing\nfor why immaterial ghosts are not listed."
      },
      "materializedGhosts": {
        "@type": "valos-raem:AliasField",
        "revdoc:deprecatedInFavorOf": "valos:ghosts",
        "valos-raem:aliasOf": "valos:ghosts",
        "rdfs:subPropertyOf": "valos:ghosts",
        "rdfs:domain": "valos:Resource",
        "rdfs:range": "valos:Resource",
        "valos-raem:coupledField": "valos:ghostPrototype",
        "valos-raem:preventsDestroy": true,
        "valos-raem:ownDefaultValue": []
      },
      "unnamedCouplings": {
        "@type": "valos-raem:CoupledField",
        "rdfs:domain": "valos:Resource",
        "rdfs:range": "valos:Resource",
        "valos-raem:isOwnerOf": true,
        "valos-raem:coupledField": "",
        "rdfs:comment": "Referrers with a missing coupledField referring this resource"
      },
      "ghostHost": {
        "@type": "valos-raem:GeneratedField",
        "rdfs:domain": "valos:Resource",
        "rdfs:range": "valos:Resource",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:expressor": "$valos-raem:resolveGhostHost",
        "rdfs:comment": "The instance resource which brought this ghost into being. This\ninstance is equivalent to the innermost ancestor of this ghost which is\nnot a ghost itself."
      },
      "ghostOwner": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:domain": "valos:Resource",
        "rdfs:range": "valos:Resource",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:isOwnedBy": true,
        "valos-raem:coupledField": "valos:ghostOwnlings",
        "valos-raem:ownDefaultValue": null,
        "valos-raem:allowTransientFieldToBeSingular": true,
        "rdfs:comment": "The instance resource which owns this materialized ghost or null if\nthis ghost is immaterial.\nNote that materialized ghosts will have a two own fields: the\nghostOwner and the regular owner (or one of its aliases). The\nremoval of either of these owning field relationships will\nimmaterialize, not destroy, the ghost."
      },
      "ghostOwnlings": {
        "@type": "valos-raem:CoupledField",
        "rdfs:domain": "valos:Resource",
        "rdfs:range": "valos:Resource",
        "valos-raem:isOwnerOf": true,
        "valos-raem:coupledField": "valos:ghostOwner",
        "valos-raem:ownDefaultValue": [],
        "rdfs:comment": "Materialized ghost resources which have this instance as their ghost\nhost."
      },
      "Bvob": {
        "@type": "valos-raem:Type",
        "revdoc:brief": "Binary ValOS Object type",
        "rdfs:subClassOf": "valos:Resource",
        "rdfs:comment": "The dominant type class of resources which are immutably associated\nwith an octet-stream of fixed length. Bvob resources have a hash of\nthat octet-stream, prefixed with the hash algorithm, as their VGRID."
      },
      "hashAlgorithm": {
        "@type": "valos-raem:GeneratedField",
        "rdfs:domain": "valos:Bvob",
        "rdfs:range": "xsd:string",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:cardinality": 1
        },
        "valos-raem:expressor": "$valos-raem:resolveContextTerm:@!$$valos:vrid:1:1@",
        "rdfs:comment": "The hash algorithm used to create the content hash of this Bvob"
      },
      "contentHash": {
        "@type": "valos-raem:GeneratedField",
        "rdfs:domain": "valos:Bvob",
        "rdfs:range": "xsd:string",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:cardinality": 1
        },
        "valos-raem:expressor": "!$$valos:vrid:1:3",
        "rdfs:comment": "The content hash of the octet-stream associated with this Bvob"
      },
      "contentLength": {
        "@type": "valos-raem:GeneratedField",
        "rdfs:domain": "valos:Bvob",
        "rdfs:range": "xsd:nonNegativeInteger",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:cardinality": 1
        },
        "valos-raem:expressor": "$valos-raem:resolveContentLength",
        "rdfs:comment": "The number of octets in the octet-stream associated with this Bvob."
      },
      "contentReferrers": {
        "@type": "valos-raem:CoupledField",
        "rdfs:domain": "valos:Bvob",
        "rdfs:range": "valos:Extant",
        "valos-raem:defaultCoupledField": "valos:content",
        "rdfs:comment": "The unordered set of valos:content references to this Bvob from\nwithin this view of the world."
      },
      "Absent": {
        "@type": "valos-raem:Type",
        "revdoc:brief": "absent resource type",
        "rdfs:subClassOf": "valos:Resource",
        "rdfs:comment": "The dominant type class of absent valospace resources. An absent\nresource doesn't have a known representation in this view of the world,\nbuts its existence is inferred due to existing references to it.\n\nThe transition from Absent to and from other dominant types is the\nonly possible runtime type change and happens dynamically based on\nthe partition sourcery and banishment."
      },
      "Extant": {
        "@type": "valos-raem:Type",
        "revdoc:brief": "extant and present resource interface",
        "rdfs:subClassOf": "valos:Resource",
        "rdfs:comment": "The class of valospace resources that are present and extant in this\nview of the world. An extant resource has all of its fields and\nproperties available and it can thus be manipulated."
      },
      "owner": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:domain": "valos:Extant",
        "rdfs:range": "valos:Extant",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:isOwnedBy": true,
        "valos-raem:defaultCoupledField": "valos:ownlings",
        "rdfs:comment": "The owner of this extant resource."
      },
      "name": {
        "@type": "valos-raem:EventLoggedField",
        "valos-raem:expressor": "$valos-raem:resolveVPath",
        "valos-raem:impressor": "$valos-raem:impressViaVPath",
        "rdfs:domain": "valos:Extant",
        "rdfs:range": [
          "xsd:string",
          "valos-raem:VParam"
        ],
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "rdfs:comment": "The primary ValOS name of this extant resource. This name is a local\nidentifier to differentiate the resource from other resources within\nthe same context. Idiomatically this context is all resources of\na particular type which are owned by the same resource."
      },
      "inheritancePrototype": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": "valos:prototype",
        "rdfs:domain": "valos:Extant",
        "rdfs:range": "valos:Resource",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:coupledField": "valos:inheritors",
        "rdfs:comment": "The inheritance prototype of this extant resource. This represents the\ntraditional prototypical inheritance where inherited field values are\nnot remapped in any way."
      },
      "instancePrototype": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": "valos:prototype",
        "rdfs:domain": "valos:Extant",
        "rdfs:range": "valos:Resource",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:coupledField": "valos:instances",
        "rdfs:comment": "The instance prototype of this extant resource. This represents\nvalos 'ghost instantiation' where all recursively owned resources of\nthe instancePrototype are also inherited as 'ghosts' under this extant\nresource."
      },
      "ownlings": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:domain": "valos:Extant",
        "rdfs:range": "rdfs:List",
        "valos-raem:isOwnerOf": true,
        "valos-raem:coupledField": "valos:owner",
        "rdfs:comment": "The ordered list of all resources owned by this extant resource. This\nlist is a union of all fields with a valos-raem:isOwnerOf in their\nontology definition."
      },
      "unnamedOwnlings": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": "valos:ownlings",
        "rdfs:domain": "valos:Extant",
        "rdfs:range": "valos:Extant",
        "valos-raem:isOwnerOf": true,
        "valos-raem:coupledField": "valos:owner",
        "rdfs:comment": "The ordered list of all resources owned by this extant resource which\nare not contained in another valos-raem:isOwnerOf field list."
      },
      "isFrozen": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:domain": "valos:Extant",
        "rdfs:range": "xsd:boolean",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:cardinality": 1
        },
        "valos-raem:isDuplicateable": false,
        "valos-raem:ownDefaultValue": false,
        "rdfs:comment": "Indicates whether this extant resource is frozen. A frozen resource\nnor any of its ownlings cannot have any of their primary fields be\nmodified.\nSetting isFrozen to true is (by design) an irreversible operation."
      },
      "NonExistent": {
        "@type": "valos-raem:Type",
        "revdoc:brief:": "non-existent resource type",
        "rdfs:subClassOf": "valos:Resource",
        "rdfs:comment": "The dominant type class of resources which should be present but are\nnot. This is typically because they have been destroyed or because they\nhave never existed in the first place.\n\nOnly provides the transient fields of the Resource interface."
      },
      "nameAlias": {
        "@type": "valos-raem:AliasField",
        "valos-raem:aliasOf": "valos:name",
        "rdfs:subPropertyOf": "valos:name",
        "rdfs:domain": "valos:Extant",
        "rdfs:range": "xsd:string",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "rdfs:comment": "The primary name of this resource. It is globally non-unique but often\ncontext-dependently unique.\n\nThis is an alias of valos:name for circumventing conflicts with the\nnative javascript property 'name' in certain execution contexts"
      },
      "prototypeAlias": {
        "@type": "valos-raem:AliasField",
        "valos-raem:aliasOf": "valos:prototype",
        "rdfs:subPropertyOf": "valos:prototype",
        "rdfs:domain": "valos:Extant",
        "rdfs:range": "valos:Resource",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "rdfs:comment": "The prototype of this resource.\n\nThis is an alias for valos:prototype to bypass conflicts with native\njavascript property 'prototype' in certain execution contexts."
      },
      "ScopeProperty": {
        "@type": "valos-raem:Type",
        "revdoc:brief": "scope property type",
        "rdfs:subClassOf": [
          "valos:Resource",
          "valos:Extant",
          "rdf:Statement"
        ],
        "rdfs:comment": "The dominant type class of resources representing properties with a\nlocally unique name inside an owning Scope namespace resource.\n\nAdditionally a ScopeProperty represents the core hypertwin building\nblock as an rdf:Statement reification of hypertwinned triples."
      },
      "scope": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": "valos:owner",
        "rdfs:domain": "valos:ScopeProperty",
        "rdfs:range": "valos:Scope",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:isOwnedBy": true,
        "valos-raem:coupledField": "valos:properties",
        "rdfs:comment": "The scope resource (and owner) of this ScopeProperty."
      },
      "value": {
        "@type": "valos-raem:EventLoggedField",
        "valos-raem:expressor": "$valos-raem:resolveVPath",
        "valos-raem:impressor": "$valos-raem:impressViaVPath",
        "rdfs:domain": "valos:ScopeProperty",
        "rdfs:range": [
          "xsd:string",
          "valos-raem:VPath"
        ],
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "rdfs:comment": "The value of this ScopeProperty."
      },
      "twinspace": {
        "@type": "valos-raem:GeneratedField",
        "rdfs:domain": "valos:ScopeProperty",
        "rdfs:range": "rdfs:Resource",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:expressor": "$valos-script:resolveTwinspace",
        "rdfs:comment": "The twinspace of this ScopeProperty. Equates to the expanded prefix\nof the valos:name of this ScopeProperty using the context of this\npartition. Additionally if the local part of the valos:name is an empty\nstring then the valos:value of this ScopeProperty defines\nthe twinspace id of the scope resource for this twinspace."
      },
      "subject": {
        "@type": "valos-raem:GeneratedField",
        "rdfs:subPropertyOf": "rdf:subject",
        "rdfs:domain": "valos:ScopeProperty",
        "rdfs:range": "rdfs:Resource",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:expressor": "$valos-script:resolveTwinSubject",
        "rdfs:comment": "The subject of this ScopeProperty when interpreted as a reified\nrdf:Statement. Equates to the twinspace id of the scope resource using\nthe valos:twinspace of this ScopeProperty."
      },
      "predicate": {
        "@type": "valos-raem:GeneratedField",
        "rdfs:subPropertyOf": "rdf:predicate",
        "rdfs:domain": "valos:ScopeProperty",
        "rdfs:range": "rdfs:Resource",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:expressor": "$$valos:name",
        "rdfs:comment": "The predicate of this ScopeProperty when interpreted as a reified\nrdf:Statement. Equates to the IRI expansion of valos:name of this\nScopeProperty using the context of this partition."
      },
      "object": {
        "@type": "valos-raem:GeneratedField",
        "rdfs:subPropertyOf": "rdf:object",
        "valos-raem:aliasOf": "valos:value",
        "rdfs:domain": "valos:ScopeProperty",
        "rdfs:range": "rdfs:Resource",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:expressor": "$valos-script:resolveTwinObject",
        "rdfs:comment": "The object of this ScopeProperty when interpreted as a reified\nrdf:Statement. If the valos:value refers to a scope which has this\ntwinspace id defined (ie. it owns a property with twinspace id as a\nname), then this field will be expressed as that twinspace id.\nOtherwise equals to the valos:value itself.\n"
      },
      "Scope": {
        "@type": "valos-raem:Type",
        "rdfs:subClassOf": [
          "valos:Resource",
          "valos:Extant"
        ],
        "revdoc:brief": "property scope interface",
        "rdfs:comment": "The class of valospace resources which can have scoped properties."
      },
      "properties": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": "valos:ownlings",
        "rdfs:domain": "valos:Scope",
        "rdfs:range": "rdfs:List",
        "valos-raem:isOwnerOf": true,
        "valos-raem:coupledField": "valos:scope",
        "rdfs:comment": "The ordered list of ScopeProperty resources of this scope"
      },
      "SourcerableNode": {
        "@type": "valos-raem:Type",
        "rdfs:subClassOf": "valos:Resource",
        "revdoc:brief": "sourcerable node interface",
        "rdfs:comment": "The class of sourcerable valospace nodes which either are already\nsourcered or are unsourcered but have references to them from extant\nresources.\n\nThis interface is the domain of all transient and generated fields\nwhich are available even for unsourcered node resources."
      },
      "partitionRoot": {
        "@type": "valos-raem:GeneratedField",
        "rdfs:domain": "valos:SourcerableNode",
        "rdfs:range": "valos:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:expressor": "$valos-sourcerer:resolvePartitionRoot",
        "rdfs:comment": "The partition root node of this sourcerable (ie. the nearest ancestor,\npossibly this sourcerable itself self which has a non-null\nvalos:authorityURI)."
      },
      "partitionURL": {
        "@type": "valos-raem:GeneratedField",
        "rdfs:domain": "valos:SourcerableNode",
        "rdfs:range": "xsd:anyURI",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:expressor": "$valos-sourcerer:resolvePartitionURL",
        "rdfs:comment": "The partition URL of the event log that contain this potentially\nabsent sourcerable as is known by the current view of the world."
      },
      "url": {
        "@type": "valos-raem:GeneratedField",
        "rdfs:domain": "valos:SourcerableNode",
        "rdfs:range": "xsd:anyURI",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:cardinality": 1
        },
        "valos-raem:expressor": [
          "$valk:add:@!$V:partitionURL@",
          [
            ":",
            "#"
          ],
          ":@!$V:id@"
        ],
        "rdfs:comment": "The authoritative URL string of this sourcerable in the current view\nof the world. Always equivalent to a catenation of\n<valos:partitionURL> \"#\" <valos:id>\nof this resource"
      },
      "partition": {
        "@type": "valos-raem:AliasField",
        "revdoc:deprecatedInFavorOf": "valos:partitionRoot",
        "valos-raem:aliasOf": "valos:partitionRoot",
        "rdfs:subPropertyOf": "valos:partitionRoot",
        "rdfs:domain": "valos:SourcerableNode",
        "rdfs:range": "valos:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:expressor": "$valos-sourcerer:resolvePartitionRoot",
        "rdfs:comment": "The partition root node of this sourcerable, ie. the nearest ancestor\n(possibly self) with a non-null valos:authorityURI."
      },
      "partitionURI": {
        "@type": "valos-raem:AliasField",
        "revdoc:deprecatedInFavorOf": "valos:partitionURL",
        "valos-raem:aliasOf": "valos:partitionURL",
        "rdfs:subPropertyOf": "valos:partitionURL",
        "rdfs:domain": "valos:SourcerableNode",
        "rdfs:range": "xsd:anyURI",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "rdfs:comment": "Deprecated in favor of 'partitionURL'. This field is by definition\nalways a locator so its name should reflect it."
      },
      "UnsourceredNode": {
        "@type": "valos-raem:Type",
        "revdoc:brief": "absent, sourceable node type",
        "rdfs:subClassOf": [
          "valos:Resource",
          "valos:SourcerableNode"
        ],
        "rdfs:comment": "The dominant type class of absent but sourcerable valospace nodes. An\nabsent resource doesn't have a known representation in this view of the\nworld because it is inside an unsourcered Partition.\n\nThe transition from UnsourceredNode to and from other dominant types is\nthe only possible runtime type change for SourcerableNodes and happens\ndynamically based on the partition sourcery and banishment."
      },
      "NonExistentNode": {
        "@type": "valos-raem:Type",
        "rdfs:subClassOf": [
          "valos:Resource",
          "valos:SourcerableNode"
        ],
        "revdoc:brief": "non-existent node type",
        "rdfs:comment": "The dominant type class of sourcered resources which should be present\nbut are not. This typically because they have been destroyed or because\nthey never existed in the first place.\n\nOnly provides the transient fields of the SourcerableNode and Resource\ninterfaces."
      },
      "SourceredNode": {
        "@type": "valos-raem:Type",
        "revdoc:brief": "sourcered node interface",
        "rdfs:subClassOf": [
          "valos:Resource",
          "valos:Extant",
          "valos:Scope",
          "valos:SourcerableNode"
        ],
        "rdfs:comment": "The class of sourcered (ie. extant) valospace nodes. A node can act as\na partition root resource, as the source and target of Relation nodes,\nas the folder of Media nodes and as the parent of Entity nodes.\nAs these aforementioned types are also the primary sourcered nodes\nthemselves they form the main structure of global valospace resource\ngraph."
      },
      "container": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": "valos:owner",
        "rdfs:domain": "valos:SourceredNode",
        "rdfs:range": "valos:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:isOwnedBy": true,
        "valos-raem:coupledField": "valos:nodes",
        "rdfs:comment": "The container (and owner) node of this sourcered node."
      },
      "nodes": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": "valos:ownlings",
        "rdfs:domain": "valos:SourceredNode",
        "rdfs:range": "rdfs:List",
        "valos-raem:isOwnerOf": true,
        "valos-raem:coupledField": "valos:container",
        "rdfs:comment": "The ordered list of all nodes directly contained by this sourcered\nnode."
      },
      "authorityURI": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:domain": "valos:SourceredNode",
        "rdfs:range": "xsd:anyURI",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:isDuplicateable": false,
        "valos-raem:ownDefaultValue": null,
        "rdfs:comment": "The authority URL of this sourcered partition root node. If this field\nis null then this sourcered node is not a root node. Setting this field\nmakes this resource the root of a new partition root (if allowed). The\npartition URL is generated based on this as per the rules specified by\nthe authority URL schema.\nIf the partition root node is frozen the whole partition is permanently\nfrozen."
      },
      "createdAt": {
        "@type": "valos-raem:GeneratedField",
        "rdfs:domain": "valos:SourceredNode",
        "rdfs:range": "xsd:double",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:expressor": "$valos-sourcerer:resolveCreatedAt",
        "rdfs:comment": "The creation UNIX epoch time of this node. This is defined as the\nlog aspect timestamp of the CREATED event which impressed this node\ninto being."
      },
      "modifiedAt": {
        "@type": "valos-raem:GeneratedField",
        "rdfs:domain": "valos:SourceredNode",
        "rdfs:range": "xsd:double",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:expressor": "$valos-sourcerer:resolveModifiedAt",
        "rdfs:comment": "The latest modification UNIX epoch time of this node. This is defined\nas the log aspect timestamp of the most recent event with a direct\nimpression on this Media resource."
      },
      "partitionAuthorityURI": {
        "@type": "valos-raem:AliasField",
        "revdoc:deprecatedInFavorOf": "valos:authorityURI",
        "valos-raem:aliasOf": "valos:authorityURI",
        "rdfs:subPropertyOf": "valos:authorityURI",
        "rdfs:domain": "valos:SourceredNode",
        "rdfs:range": "xsd:string",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        }
      },
      "directory": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": "valos:container",
        "rdfs:domain": [
          "valos:Entity",
          "valos:Media"
        ],
        "rdfs:range": "valos:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:isOwnedBy": true,
        "valos-raem:coupledField": "valos:entries",
        "rdfs:comment": "The directory (and owner) node of this sourcered node."
      },
      "entries": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": "valos:nodes",
        "rdfs:domain": "valos:SourceredNode",
        "rdfs:range": "rdfs:List",
        "valos-raem:isOwnerOf": true,
        "valos-raem:coupledField": "valos:directory",
        "rdfs:comment": "The ordered list of entries of this sourcered node when seen as\na directory."
      },
      "Entity": {
        "@type": "valos-raem:Type",
        "revdoc:brief": "primary resource tree node type",
        "rdfs:subClassOf": [
          "valos:Resource",
          "valos:Extant",
          "valos:Scope",
          "valos:SourcerableNode",
          "valos:SourceredNode"
        ],
        "rdfs:comment": "The class of valospace resources which act as the main valospace tree\nhierarchy building block. With Relation and Media it forms the group of\nthree primary node types. As a Scope it can have scriptable properties,\nwhich entities expose to all child resources as their lexical scripting\nnamespace.\n\nThe set of valospace tree hierarchies is defined via triple pattern:\n\n  SELECT ?root ?parent ?node WHERE {\n    ?node valos:parent ?parent .\n    ?parent valos:parent* ?root .\n    NOT EXISTS ( ?root valos:parent ?rootParent )\n  }\n\nThis implies that only Entity resources can be nodes but any primary\nnode can act as a root resource.\n"
      },
      "parent": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": "valos:directory",
        "rdfs:domain": "valos:Entity",
        "rdfs:range": "valos:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:isOwnedBy": true,
        "valos-raem:coupledField": "valos:entities",
        "rdfs:comment": "The parent (and directory, owner) node of this entity."
      },
      "entities": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": "valos:entries",
        "rdfs:domain": "valos:SourceredNode",
        "rdfs:range": "rdfs:List",
        "valos-raem:isOwnerOf": true,
        "valos-raem:coupledField": "valos:parent",
        "rdfs:comment": "The ordered list of entities contained in this sourcered node."
      },
      "Media": {
        "@type": "valos-raem:Type",
        "revdoc:brief": "file media node type",
        "rdfs:subClassOf": [
          "valos:Resource",
          "valos:Extant",
          "valos:Scope",
          "valos:SourcerableNode",
          "valos:SourceredNode"
        ],
        "rdfs:comment": "The class of valospace resources which represent interpretable media\nand can be associated with mutable binary content and accompanying\nmetadata. With Relation and Media it forms the group of three primary\nnode types.\n"
      },
      "folder": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": "valos:directory",
        "rdfs:domain": "valos:Media",
        "rdfs:range": "valos:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:isOwnedBy": true,
        "valos-raem:coupledField": "valos:medias",
        "rdfs:comment": "The folder (and directory, owner) node of this media."
      },
      "medias": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": "valos:entries",
        "rdfs:domain": "valos:SourceredNode",
        "rdfs:range": "rdfs:List",
        "valos-raem:isOwnerOf": true,
        "valos-raem:coupledField": "valos:folder",
        "rdfs:comment": "The ordered list of medias contained in this sourcered node when seen\nas a folder"
      },
      "sourceURL": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:domain": "valos:Media",
        "rdfs:range": "xsd:anyURI",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "rdfs:comment": "The unreliable source URL of this Media. This URL is dereferenced\nwhen the Media content is accessed and as such is subject to all\nfailure considerations associated with its protocol."
      },
      "content": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": "rdf:object",
        "rdfs:domain": "valos:Media",
        "rdfs:range": "valos:Bvob",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:coupledField": "valos:contentReferrers",
        "rdfs:comment": "The infrastructure-backed octet-stream content of this Media."
      },
      "Relation": {
        "@type": "valos-raem:Type",
        "rdfs:subClassOf": [
          "valos:Resource",
          "valos:Extant",
          "valos:Scope",
          "valos:SourcerableNode",
          "valos:SourceredNode"
        ],
        "revdoc:brief": "directed relationship node type",
        "rdfs:comment": "The class of valospace resources which represent directed,\nmany-to-many relationships between nodes.\nWith Entity and Media it forms the group of three primary node types.\nAs a Scope it can have scriptable properties. Relation being\na SourceredNode itself allows for nested and recursive relationship\nstructures."
      },
      "connector": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": "valos:container",
        "rdfs:domain": "valos:Relation",
        "rdfs:range": "valos:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:isOwnedBy": true,
        "valos-raem:coupledField": "valos:connectedRelations",
        "rdfs:comment": "The connector (and container, owner) node of this relation.\nTypically also either the source or the target but possibly neither."
      },
      "connectedRelations": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": "valos:nodes",
        "rdfs:domain": "valos:SourceredNode",
        "rdfs:range": "rdfs:List",
        "valos-raem:isOwnerOf": true,
        "valos-raem:coupledField": "valos:connector",
        "rdfs:comment": "The ordered list of relations that are connected (and contained,\nowned) _by_ this sourcered node. This includes both\nconnectedInRelations and connectedOutRelations (ie. incoming and\noutgoing relations which are also connected by this sourcered node) but\nalso relations which only have this sourcered node as their connector\nbut not as source or target."
      },
      "source": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": "rdf:subject",
        "rdfs:domain": "valos:Relation",
        "rdfs:range": "valos:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:coupledField": "valos:outRelations",
        "rdfs:comment": "The source node of this relation."
      },
      "outRelations": {
        "@type": "valos-raem:CoupledField",
        "rdfs:subPropertyOf": "valos:nodes",
        "rdfs:domain": "valos:SourcerableNode",
        "rdfs:range": "rdfs:List",
        "valos-raem:coupledField": "valos:source",
        "rdfs:comment": "The unordered list of outgoing relations with this sourcerable\n(but possibly absent) node as their source (note that sourcerable and\nsource are completely separate concepts here)."
      },
      "target": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": "rdf:object",
        "rdfs:domain": "valos:Relation",
        "rdfs:range": "valos:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:coupledField": "valos:inRelations",
        "rdfs:comment": "The target node of this relation."
      },
      "inRelations": {
        "@type": "valos-raem:CoupledField",
        "rdfs:subPropertyOf": "valos:nodes",
        "rdfs:domain": "valos:SourcerableNode",
        "rdfs:range": "rdfs:List",
        "valos-raem:coupledField": "valos:target",
        "rdfs:comment": "The unordered list of incoming relations with this sourcerable\n(but possibly absent) node as their target."
      },
      "pairedSource": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": "valos:source",
        "rdfs:domain": "valos:Relation",
        "rdfs:range": "valos:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:coupledField": "valos:pairedOutRelations",
        "rdfs:comment": "The paired source node of this relation (paired denotes that the\ncoupled field 'pairedOutRelations' is an event logged field)."
      },
      "pairedOutRelations": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": "valos:outgoingRelations",
        "rdfs:domain": "valos:SourceredNode",
        "rdfs:range": "rdfs:List",
        "valos-raem:coupledField": "valos:pairedSource",
        "rdfs:comment": "The ordered list of outgoing relations paired to this sourcered node."
      },
      "pairedTarget": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": "valos:target",
        "rdfs:domain": "valos:Relation",
        "rdfs:range": "valos:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:coupledField": "valos:pairedInRelations",
        "rdfs:comment": "The paired target node of this relation (the coupled field\n'pairedInRelations' is an event logged field)."
      },
      "pairedInRelations": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": "valos:incomingRelations",
        "rdfs:domain": "valos:SourceredNode",
        "rdfs:range": "rdfs:List",
        "valos-raem:coupledField": "valos:pairedTarget",
        "rdfs:comment": "The ordered list of incoming relations paired to this sourcered node."
      },
      "connectedSource": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": [
          "valos:connector",
          "valos:pairedSource"
        ],
        "rdfs:domain": "valos:Relation",
        "rdfs:range": "valos:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:isOwnedBy": true,
        "valos-raem:coupledField": "valos:connectedOutRelations",
        "rdfs:comment": "The source and also the connector node of this relation."
      },
      "connectedOutRelations": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": [
          "valos:connectedRelations",
          "valos:pairedOutRelations"
        ],
        "rdfs:domain": "valos:SourceredNode",
        "rdfs:range": "rdfs:List",
        "valos-raem:isOwnerOf": true,
        "valos-raem:coupledField": "valos:connectedSource",
        "rdfs:comment": "The ordered list of outgoing relations contained in (and owned by)\nthis sourcered node."
      },
      "connectedTarget": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": [
          "valos:connector",
          "valos:pairedTarget"
        ],
        "rdfs:domain": "valos:Relation",
        "rdfs:range": "valos:SourceredNode",
        "restriction": {
          "@type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos-raem:isOwnedBy": true,
        "valos-raem:coupledField": "valos:connectedInRelations",
        "rdfs:comment": "The target and also the connector node of this relation."
      },
      "connectedInRelations": {
        "@type": "valos-raem:EventLoggedField",
        "rdfs:subPropertyOf": [
          "valos:connectedRelations",
          "valos:pairedInRelations"
        ],
        "rdfs:domain": "valos:SourceredNode",
        "rdfs:range": "rdfs:List",
        "valos-raem:isOwnerOf": true,
        "valos-raem:coupledField": "valos:connectedTarget",
        "rdfs:comment": "The ordered list of incoming relations contained in (and owned by)\nthis sourcered node."
      },
      "relations": {
        "@type": "valos-raem:AliasField",
        "revdoc:deprecatedInFavorOf": "valos:connectedRelations",
        "valos-raem:aliasOf": "valos:connectedRelations",
        "rdfs:subPropertyOf": "valos:connectedRelations",
        "rdfs:domain": "valos:SourceredNode",
        "rdfs:range": "rdfs:List",
        "valos-raem:isOwnerOf": true,
        "valos-raem:coupledField": "valos:connector",
        "rdfs:comment": "A deprecation of valos:connectedRelations; the ordered list of\nrelations contained within this sourcered node when seen as a graph.\nDo note that the semantics have changed: connectedRelations can now\nalso contain relations which have this sourcered node as their the\ntarget (instead of source) or as neither source nor target.\nThe set of just outgoing relations is 'outgoingRelations' and the set\nof owned outgoing relations is 'connectedOutRelations'."
      },
      "outgoingRelations": {
        "@type": "valos-raem:AliasField",
        "revdoc:deprecatedInFavorOf": "valos:outRelations",
        "valos-raem:aliasOf": "valos:outRelations",
        "rdfs:subPropertyOf": "valos:outRelations",
        "rdfs:domain": "valos:SourcerableNode",
        "rdfs:range": "rdfs:List",
        "valos-raem:coupledField": "valos:source",
        "rdfs:comment": "The unordered list of outgoing relations with this sourcerable\n(but possibly absent) node as their source (note that sourcerable and\nsource are completely separate concepts here)."
      },
      "incomingRelations": {
        "@type": "valos-raem:AliasField",
        "revdoc:deprecatedInFavorOf": "valos:inRelations",
        "valos-raem:aliasOf": "valos:inRelations",
        "rdfs:subPropertyOf": "valos:inRelations",
        "rdfs:domain": "valos:SourcerableNode",
        "rdfs:range": "rdfs:List",
        "valos-raem:coupledField": "valos:target",
        "rdfs:comment": "The unordered list of incoming relations with this sourcerable\n(but possibly absent) node as their target."
      }
    },
    "context": {
      "@id": "context",
      "restriction": {
        "@reverse": "owl:onProperty"
      },
      "valos:vrid": {
        "@id": "https://valospace.org/#vrid",
        "@container": "@list",
        "@type": "@id"
      },
      "valos:prototype": {
        "@id": "https://valospace.org/#prototype",
        "@type": "@id"
      },
      "valos:derivations": {
        "@id": "https://valospace.org/#derivations",
        "@type": "@id"
      },
      "valos:ownFields": {
        "@id": "https://valospace.org/#ownFields",
        "@type": "@id"
      },
      "valos:inheritors": {
        "@id": "https://valospace.org/#inheritors",
        "@type": "@id"
      },
      "valos:instances": {
        "@id": "https://valospace.org/#instances",
        "@type": "@id"
      },
      "valos:ghostPrototype": {
        "@id": "https://valospace.org/#ghostPrototype",
        "@type": "@id"
      },
      "valos:ghosts": {
        "@id": "https://valospace.org/#ghosts",
        "@type": "@id"
      },
      "valos:materializedGhosts": {
        "@id": "https://valospace.org/#materializedGhosts",
        "@type": "@id"
      },
      "valos:unnamedCouplings": {
        "@id": "https://valospace.org/#unnamedCouplings",
        "@type": "@id"
      },
      "valos:ghostHost": {
        "@id": "https://valospace.org/#ghostHost",
        "@type": "@id"
      },
      "valos:ghostOwner": {
        "@id": "https://valospace.org/#ghostOwner",
        "@type": "@id"
      },
      "valos:ghostOwnlings": {
        "@id": "https://valospace.org/#ghostOwnlings",
        "@type": "@id"
      },
      "valos:contentReferrers": {
        "@id": "https://valospace.org/#contentReferrers",
        "@type": "@id"
      },
      "valos:owner": {
        "@id": "https://valospace.org/#owner",
        "@type": "@id"
      },
      "valos:name": {
        "@id": "https://valospace.org/#name",
        "@type": "@id"
      },
      "valos:inheritancePrototype": {
        "@id": "https://valospace.org/#inheritancePrototype",
        "@type": "@id"
      },
      "valos:instancePrototype": {
        "@id": "https://valospace.org/#instancePrototype",
        "@type": "@id"
      },
      "valos:ownlings": {
        "@id": "https://valospace.org/#ownlings",
        "@container": "@list",
        "@type": "@id"
      },
      "valos:unnamedOwnlings": {
        "@id": "https://valospace.org/#unnamedOwnlings",
        "@type": "@id"
      },
      "valos:prototypeAlias": {
        "@id": "https://valospace.org/#prototypeAlias",
        "@type": "@id"
      },
      "valos:scope": {
        "@id": "https://valospace.org/#scope",
        "@type": "@id"
      },
      "valos:value": {
        "@id": "https://valospace.org/#value",
        "@type": "@id"
      },
      "valos:properties": {
        "@id": "https://valospace.org/#properties",
        "@container": "@list",
        "@type": "@id"
      },
      "valos:partitionRoot": {
        "@id": "https://valospace.org/#partitionRoot",
        "@type": "@id"
      },
      "valos:partition": {
        "@id": "https://valospace.org/#partition",
        "@type": "@id"
      },
      "valos:container": {
        "@id": "https://valospace.org/#container",
        "@type": "@id"
      },
      "valos:nodes": {
        "@id": "https://valospace.org/#nodes",
        "@container": "@list",
        "@type": "@id"
      },
      "valos:directory": {
        "@id": "https://valospace.org/#directory",
        "@type": "@id"
      },
      "valos:entries": {
        "@id": "https://valospace.org/#entries",
        "@container": "@list",
        "@type": "@id"
      },
      "valos:parent": {
        "@id": "https://valospace.org/#parent",
        "@type": "@id"
      },
      "valos:entities": {
        "@id": "https://valospace.org/#entities",
        "@container": "@list",
        "@type": "@id"
      },
      "valos:folder": {
        "@id": "https://valospace.org/#folder",
        "@type": "@id"
      },
      "valos:medias": {
        "@id": "https://valospace.org/#medias",
        "@container": "@list",
        "@type": "@id"
      },
      "valos:content": {
        "@id": "https://valospace.org/#content",
        "@type": "@id"
      },
      "valos:connector": {
        "@id": "https://valospace.org/#connector",
        "@type": "@id"
      },
      "valos:connectedRelations": {
        "@id": "https://valospace.org/#connectedRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "valos:source": {
        "@id": "https://valospace.org/#source",
        "@type": "@id"
      },
      "valos:outRelations": {
        "@id": "https://valospace.org/#outRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "valos:target": {
        "@id": "https://valospace.org/#target",
        "@type": "@id"
      },
      "valos:inRelations": {
        "@id": "https://valospace.org/#inRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "valos:pairedSource": {
        "@id": "https://valospace.org/#pairedSource",
        "@type": "@id"
      },
      "valos:pairedOutRelations": {
        "@id": "https://valospace.org/#pairedOutRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "valos:pairedTarget": {
        "@id": "https://valospace.org/#pairedTarget",
        "@type": "@id"
      },
      "valos:pairedInRelations": {
        "@id": "https://valospace.org/#pairedInRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "valos:connectedSource": {
        "@id": "https://valospace.org/#connectedSource",
        "@type": "@id"
      },
      "valos:connectedOutRelations": {
        "@id": "https://valospace.org/#connectedOutRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "valos:connectedTarget": {
        "@id": "https://valospace.org/#connectedTarget",
        "@type": "@id"
      },
      "valos:connectedInRelations": {
        "@id": "https://valospace.org/#connectedInRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "valos:relations": {
        "@id": "https://valospace.org/#relations",
        "@container": "@list",
        "@type": "@id"
      },
      "valos:outgoingRelations": {
        "@id": "https://valospace.org/#outgoingRelations",
        "@container": "@list",
        "@type": "@id"
      },
      "valos:incomingRelations": {
        "@id": "https://valospace.org/#incomingRelations",
        "@container": "@list",
        "@type": "@id"
      }
    },
    "abstract": {
      "@id": "abstract",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "@type": "vdoc:Paragraph",
          "vdoc:content": [
            "Overview of the valospace APIs and ontologies."
          ]
        }
      ]
    },
    "sotd": {
      "@id": "sotd",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "@type": "vdoc:Paragraph",
          "vdoc:content": [
            "This document is part of the vault workspace ",
            {
              "@type": "revdoc:Package",
              "vdoc:content": [
                {
                  "vdoc:em": true,
                  "vdoc:content": [
                    "@valos/kernel"
                  ]
                }
              ],
              "vdoc:ref": "@valos/kernel"
            },
            "\n(of domain ",
            {
              "@type": "revdoc:Package",
              "vdoc:content": [
                {
                  "vdoc:em": true,
                  "vdoc:content": [
                    "@valos/kernel"
                  ]
                }
              ],
              "vdoc:ref": "@valos/kernel"
            },
            ") which has the description:\n`ValOS common infrastructure tools and libraries monorepository`."
          ]
        }
      ]
    },
    "introduction": {
      "@id": "introduction",
      "@type": "vdoc:Chapter",
      "dc:title": {
        "vdoc:em": true,
        "vdoc:content": [
          "\"Greetings, I am Valma, the ValOS Mediator. Who are you?\""
        ]
      },
      "vdoc:content": [
        {
          "@type": "vdoc:Paragraph",
          "vdoc:content": [
            "ValOS ecosystem revolves around various roles. This document is\na reference document of valospace systems and structures and is\ndirected for more experienced valonauts. Check out the brief description\nand introductions of the other roles as well."
          ]
        },
        {
          "vdoc:lookup": "documents",
          "@type": "vdoc:Table",
          "vdoc:headers": {
            "vdoc:entries": [
              {
                "@type": "vdoc:Header",
                "vdoc:cell": {
                  "vdoc:strong": true,
                  "vdoc:content": [
                    {
                      "@type": "vdoc:Reference",
                      "vdoc:content": [
                        "vdoc:selectKey"
                      ],
                      "vdoc:ref": "vdoc:selectKey"
                    }
                  ]
                },
                "vdoc:content": [
                  "Your role:"
                ]
              },
              {
                "@type": "vdoc:Header",
                "vdoc:cell": {
                  "vdoc:strong": true,
                  "vdoc:content": [
                    {
                      "vdoc:em": true,
                      "vdoc:content": [
                        {
                          "@type": "vdoc:Reference",
                          "vdoc:content": [
                            {
                              "vdoc:selectField": "title"
                            }
                          ],
                          "vdoc:ref": [
                            "vdoc:selectKey",
                            "#introduction"
                          ]
                        }
                      ]
                    }
                  ]
                },
                "vdoc:content": [
                  "Your answer..."
                ]
              },
              {
                "vdoc:cell": "introduction",
                "@type": "vdoc:Header",
                "vdoc:content": {
                  "vdoc:em": true,
                  "vdoc:content": [
                    "Introduction:"
                  ]
                },
                "vdoc:wide": true,
                "vdoc:tall": true
              },
              {
                "@type": "vdoc:Header",
                "vdoc:content": {
                  "vdoc:em": true,
                  "vdoc:content": [
                    "Aliases:"
                  ]
                },
                "vdoc:wide": true,
                "vdoc:cell": {
                  "vdoc:em": true,
                  "vdoc:content": [
                    {
                      "@type": "vdoc:Reference",
                      "vdoc:content": [
                        {
                          "vdoc:words": {
                            "vdoc:selectField": "subProfiles"
                          }
                        }
                      ],
                      "vdoc:ref": [
                        "vdoc:selectKey",
                        "#section_profiles"
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "vdoc:entries": [
            "technician",
            "valonaut",
            "voyager"
          ]
        }
      ]
    },
    "ontology": {
      "@id": "ontology",
      "dc:title": "Valospace ontology, prefix https://valospace.org/#, preferred label 'valos'",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "@id": "section_ontology_abstract"
        },
        {
          "@id": "section_prefixes"
        },
        {
          "@id": "section_types"
        },
        {
          "@id": "section_fields"
        },
        {
          "@id": "section_vocabulary_other"
        },
        {
          "@id": "section_context"
        }
      ]
    },
    "section_ontology_abstract": {
      "@id": "section_ontology_abstract",
      "vdoc:content": [
        {
          "@type": "vdoc:Paragraph",
          "vdoc:content": [
            "Valospace ontology provides vocabulary and definitions of the primary\nValOS resources."
          ]
        }
      ]
    },
    "section_prefixes": {
      "@id": "section_prefixes",
      "@type": "vdoc:Chapter",
      "dc:title": [
        {
          "vdoc:em": true,
          "vdoc:content": [
            "valos"
          ]
        },
        " IRI prefixes"
      ],
      "vdoc:content": [
        {
          "vdoc:lookup": "prefixes",
          "@type": "vdoc:Table",
          "vdoc:headers": [
            {
              "vdoc:cell": "vdoc:selectKey",
              "@type": "vdoc:Header",
              "vdoc:content": [
                "Prefix"
              ]
            },
            {
              "vdoc:cell": "vdoc:selectValue",
              "@type": "vdoc:Header",
              "vdoc:content": [
                "IRI"
              ]
            }
          ]
        }
      ]
    },
    "section_types": {
      "@id": "section_types",
      "@type": "vdoc:Chapter",
      "dc:title": [
        {
          "vdoc:em": true,
          "vdoc:content": [
            "valos"
          ]
        },
        " ",
        {
          "@type": "vdoc:Reference",
          "vdoc:content": [
            "valos-raem:Type"
          ],
          "vdoc:ref": "@valos/raem#Type"
        },
        " vocabulary"
      ],
      "vdoc:content": [
        {
          "vdoc:lookup": "vocabulary",
          "@type": "vdoc:Table",
          "vdoc:headers": {
            "vdoc:entries": [
              {
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:label"
                ],
                "vdoc:cell": {
                  "vdoc:resourceId": "vdoc:selectKey",
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    {
                      "vdoc:em": true,
                      "vdoc:content": [
                        "vdoc:selectKey"
                      ]
                    }
                  ],
                  "vdoc:ref": [
                    "#",
                    "vdoc:selectKey"
                  ]
                }
              },
              {
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "revdoc:brief"
                ],
                "vdoc:cell": {
                  "vdoc:strong": true,
                  "vdoc:content": [
                    {
                      "vdoc:selectField": "revdoc:brief"
                    }
                  ]
                }
              },
              {
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:subClassOf"
                ],
                "vdoc:cell": {
                  "vdoc:words": {
                    "vdoc:selectField": "rdfs:subClassOf"
                  }
                }
              },
              {
                "vdoc:cell": "rdfs:comment",
                "@type": "vdoc:Header",
                "vdoc:content": {
                  "vdoc:em": true,
                  "vdoc:content": [
                    "rdfs:comment"
                  ]
                },
                "vdoc:wide": true
              }
            ]
          },
          "vdoc:entries": [
            "Resource",
            "Bvob",
            "Absent",
            "Extant",
            "NonExistent",
            "ScopeProperty",
            "Scope",
            "SourcerableNode",
            "UnsourceredNode",
            "NonExistentNode",
            "SourceredNode",
            "Entity",
            "Media",
            "Relation"
          ]
        }
      ]
    },
    "section_fields": {
      "@id": "section_fields",
      "@type": "vdoc:Chapter",
      "dc:title": [
        {
          "vdoc:em": true,
          "vdoc:content": [
            "valos"
          ]
        },
        " ",
        {
          "@type": "vdoc:Reference",
          "vdoc:content": [
            "valos-raem:Field"
          ],
          "vdoc:ref": "@valos/raem#Field"
        },
        " vocabulary"
      ],
      "vdoc:content": [
        {
          "vdoc:lookup": "vocabulary",
          "@type": "vdoc:Table",
          "vdoc:headers": {
            "vdoc:entries": [
              {
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:label"
                ],
                "vdoc:cell": {
                  "vdoc:resourceId": "vdoc:selectKey",
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    {
                      "vdoc:em": true,
                      "vdoc:content": [
                        "vdoc:selectKey"
                      ]
                    }
                  ],
                  "vdoc:ref": [
                    "#",
                    "vdoc:selectKey"
                  ]
                }
              },
              {
                "vdoc:cell": "rdfs:domain",
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:domain"
                ]
              },
              {
                "vdoc:cell": "rdfs:range",
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:range"
                ]
              },
              {
                "vdoc:cell": "@type",
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "rdf:type"
                ]
              },
              {
                "vdoc:cell": "rdfs:subPropertyOf",
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:subPropertyOf"
                ]
              },
              {
                "vdoc:cell": "valos-raem:coupledField",
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "valos-raem:coupledField"
                ]
              },
              {
                "vdoc:cell": "rdfs:comment",
                "@type": "vdoc:Header",
                "vdoc:content": {
                  "vdoc:em": true,
                  "vdoc:content": [
                    "rdfs:comment"
                  ]
                },
                "vdoc:wide": true
              }
            ]
          },
          "vdoc:entries": [
            "id",
            "rawId",
            "vrid",
            "typeName",
            "prototype",
            "derivations",
            "ownFields",
            "inheritors",
            "instances",
            "ghostPrototype",
            "ghosts",
            "materializedGhosts",
            "unnamedCouplings",
            "ghostHost",
            "ghostOwner",
            "ghostOwnlings",
            "hashAlgorithm",
            "contentHash",
            "contentLength",
            "contentReferrers",
            "owner",
            "name",
            "inheritancePrototype",
            "instancePrototype",
            "ownlings",
            "unnamedOwnlings",
            "isFrozen",
            "nameAlias",
            "prototypeAlias",
            "scope",
            "value",
            "twinspace",
            "subject",
            "predicate",
            "object",
            "properties",
            "partitionRoot",
            "partitionURL",
            "url",
            "partition",
            "partitionURI",
            "container",
            "nodes",
            "authorityURI",
            "createdAt",
            "modifiedAt",
            "partitionAuthorityURI",
            "directory",
            "entries",
            "parent",
            "entities",
            "folder",
            "medias",
            "sourceURL",
            "content",
            "connector",
            "connectedRelations",
            "source",
            "outRelations",
            "target",
            "inRelations",
            "pairedSource",
            "pairedOutRelations",
            "pairedTarget",
            "pairedInRelations",
            "connectedSource",
            "connectedOutRelations",
            "connectedTarget",
            "connectedInRelations",
            "relations",
            "outgoingRelations",
            "incomingRelations"
          ]
        }
      ]
    },
    "section_vocabulary_other": {
      "@id": "section_vocabulary_other",
      "@type": "vdoc:Chapter",
      "dc:title": [
        {
          "vdoc:em": true,
          "vdoc:content": [
            "valos"
          ]
        },
        " remaining vocabulary"
      ],
      "vdoc:content": [
        {
          "vdoc:lookup": "vocabulary",
          "@type": "vdoc:Table",
          "vdoc:headers": {
            "vdoc:entries": [
              {
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:label"
                ],
                "vdoc:cell": {
                  "vdoc:resourceId": "vdoc:selectKey",
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    {
                      "vdoc:em": true,
                      "vdoc:content": [
                        "vdoc:selectKey"
                      ]
                    }
                  ],
                  "vdoc:ref": [
                    "#",
                    "vdoc:selectKey"
                  ]
                }
              },
              {
                "vdoc:cell": "@type",
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "rdf:type"
                ]
              },
              {
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:subClassOf"
                ],
                "vdoc:cell": {
                  "vdoc:words": {
                    "vdoc:selectField": "rdfs:subClassOf"
                  }
                }
              },
              {
                "vdoc:cell": "rdfs:comment",
                "@type": "vdoc:Header",
                "vdoc:content": {
                  "vdoc:em": true,
                  "vdoc:content": [
                    "rdfs:comment"
                  ]
                },
                "vdoc:wide": true
              }
            ]
          },
          "vdoc:entries": []
        }
      ]
    },
    "section_context": {
      "@id": "section_context",
      "dc:title": "JSON-LD context term definitions",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "vdoc:lookup": "context",
          "@type": "vdoc:Table",
          "vdoc:headers": [
            {
              "vdoc:cell": "vdoc:selectKey",
              "@type": "vdoc:Header",
              "vdoc:content": [
                "Term"
              ]
            },
            {
              "vdoc:cell": "vdoc:selectValue",
              "@type": "vdoc:Header",
              "vdoc:content": [
                "Definition"
              ]
            },
            {
              "vdoc:cell": "@id",
              "@type": "vdoc:Header",
              "vdoc:content": [
                "@id"
              ]
            },
            {
              "vdoc:cell": "@type",
              "@type": "vdoc:Header",
              "vdoc:content": [
                "@type"
              ]
            },
            {
              "vdoc:cell": "@container",
              "@type": "vdoc:Header",
              "vdoc:content": [
                "@container"
              ]
            }
          ]
        }
      ]
    },
    "@type": "revdoc:Document",
    "vdoc:content": [
      {
        "@id": "abstract"
      },
      {
        "@id": "sotd"
      },
      {
        "@id": "introduction"
      },
      {
        "@id": "ontology"
      }
    ]
  }
]