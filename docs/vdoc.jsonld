[
  {
    "@id": "https://valospace.org/vdoc",
    "@context": {
      "@base": "https://valospace.org/vdoc#",
      "sbomdoc": "https://valospace.org/sbomdoc#",
      "revdoc": "https://valospace.org/revdoc#",
      "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
      "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
      "xsd": "http://www.w3.org/2001/XMLSchema#",
      "owl": "http://www.w3.org/2002/07/owl#",
      "dc": "http://purl.org/dc/elements/1.1/",
      "vdoc": "https://valospace.org/vdoc#",
      "vdoc:content": {
        "@id": "https://valospace.org/vdoc#content",
        "@container": "@list",
        "@type": "@id"
      },
      "vdoc:words": {
        "@id": "https://valospace.org/vdoc#words",
        "@container": "@list",
        "@type": "@id"
      },
      "vdoc:entries": {
        "@id": "https://valospace.org/vdoc#entries",
        "@container": "@list",
        "@type": "@id"
      },
      "vdoc:headers": {
        "@id": "https://valospace.org/vdoc#headers",
        "@container": "@list",
        "@type": "@id"
      },
      "vdoc:cell": {
        "@id": "https://valospace.org/vdoc#cell",
        "@container": "@list",
        "@type": "@id"
      }
    },
    "dc:title": "VDoc - ValOS document interchange specification",
    "vdoc:tags": [
      "PRIMARY",
      "ONTOLOGY"
    ],
    "revdoc:package": "@valos/vdoc",
    "revdoc:prefix": "vdoc",
    "revdoc:prefixIRI": "https://valospace.org/vdoc#",
    "revdoc:version": "0.35.0-prerelease.12",
    "respecConfig": {
      "subtitle": "0.35.0-prerelease.12",
      "specStatus": "unofficial",
      "editors": [
        {
          "name": "Iridian Kiiskinen",
          "url": "https://valaatech.github.io/fabric/authors/iridian",
          "github": "http://github.com/valospace"
        }
      ],
      "shortName": "vdoc",
      "alternateFormats": [
        {
          "label": "VDoc",
          "uri": "vdoc.jsonld"
        }
      ]
    },
    "abstract": {
      "@id": "abstract",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        "This document specifies VDoc, a ",
        {
          "@type": "vdoc:Reference",
          "vdoc:content": [
            "a JSON-LD"
          ],
          "vdoc:ref": "https://www.w3.org/TR/json-ld11/"
        },
        "-based documentation human-machine-valospace interchange format."
      ]
    },
    "sotd": {
      "@id": "sotd",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        "This document has not been reviewed. This is a draft document\n    and may be updated, replaced or obsoleted by other documents at\n    any time.",
        null,
        "This document is part of the ",
        {
          "@type": "vdoc:Reference",
          "vdoc:content": [
            "ValOS core specification"
          ],
          "vdoc:ref": "@valos/kernel"
        },
        ".",
        null,
        "The format is implemented and supported by ",
        {
          "@type": "revdoc:Package",
          "vdoc:content": [
            {
              "vdoc:em": true,
              "vdoc:content": [
                "@valos/vdoc"
              ]
            }
          ],
          "vdoc:ref": "@valos/vdoc"
        },
        " npm package."
      ]
    },
    "introduction": {
      "@id": "introduction",
      "dc:title": "Introduction",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "revdoc:dfn": "#vdoc",
          "vdoc:content": [
            {
              "vdoc:strong": true,
              "vdoc:content": [
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "VDoc"
                  ],
                  "vdoc:ref": "#vdoc"
                }
              ]
            },
            " is an extensible JSON-LD interchange\n      specification for extracting documents from varying sources,\n      passing the now-machine-manipulable interchange document around\n      and subsequently producing documents of specific formats such\n      as Valospace resources, markdown, ReSpec HTML and browser and\n      ansi-colored console outputs."
          ]
        },
        null,
        "Motivation for this specification is to provide the foundation\n    for document ",
        {
          "@type": "vdoc:Reference",
          "vdoc:content": [
            "Valospace hypertwins"
          ],
          "vdoc:ref": "@valos/hypertwin"
        },
        " by supporting the ValOS resources as an emission target. This\n    allows all kinds of documents to be accessible from within\n    Valospace with minimal additional tooling. This is not made\n    an explicit design goal unto itself; instead the design goals are\n    chosen to be generic in a way that satisfies this goal as the\n    original author believes this leads to better design."
      ]
    },
    "goals_and_non_goals": {
      "@id": "goals_and_non_goals",
      "dc:title": "Goals and non-goals",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        "VDoc design goals are:",
        {
          "@id": "design_goals"
        },
        "Design non-goals are:",
        {
          "@id": "design_non_goals"
        },
        "To satisfy the goals VDoc chooses ",
        {
          "@type": "vdoc:Reference",
          "vdoc:content": [
            "JSON-LD 1.1"
          ],
          "vdoc:ref": "https://www.w3.org/TR/json-ld11/"
        },
        " as the primary interchange format and as a consequence RDF as\n      the underlying document object model.",
        null,
        "Additionally VDoc provides extensibility via custom ",
        {
          "@type": "vdoc:Reference",
          "vdoc:content": [
            "VDoc extensions"
          ],
          "vdoc:ref": "#extension"
        },
        " which can introduce\n      domain-specific namespaces and ontologies, extraction and\n      emission transformation operations and document output formats."
      ]
    },
    "design_goals": {
      "@id": "design_goals",
      "@type": "vdoc:NumberedList",
      "vdoc:entries": [
        {
          "@id": "robustly_writable"
        },
        {
          "@id": "programmatically_manipulable"
        },
        {
          "@id": "semantically_modeled"
        },
        {
          "@id": "contextually_extensible"
        }
      ]
    },
    "robustly_writable": {
      "@id": "robustly_writable",
      "vdoc:content": [
        "Manual writing VDoc should be robust and must rely on minimal\n        number of intuitive rules. The more there is to remember the\n        higher the threshold to writing docs."
      ]
    },
    "programmatically_manipulable": {
      "@id": "programmatically_manipulable",
      "vdoc:content": [
        "VDoc should be programmatically manipulable with minimal\n        boilerplate. Complex array and other wrapper nestings make\n        introspection and comprehension harder for a less than\n        dedicated developer."
      ]
    },
    "semantically_modeled": {
      "@id": "semantically_modeled",
      "vdoc:content": [
        "VDoc should have semantic structure with a globally\n        referenceable underlying model. Documents should be combinable\n        and allowed to evolve; identifying document parts by their\n        position in a document is brittle."
      ]
    },
    "contextually_extensible": {
      "@id": "contextually_extensible",
      "vdoc:content": [
        "VDoc should be contextually extensible. Formats often have\n        details which resist universalization but must still be\n        accessible during document emission."
      ]
    },
    "design_non_goals": {
      "@id": "design_non_goals",
      "@type": "vdoc:NumberedList",
      "vdoc:entries": [
        {
          "@id": "no_unified_ontology"
        },
        {
          "@id": "no_complete_model"
        }
      ]
    },
    "no_unified_ontology": {
      "@id": "no_unified_ontology",
      "vdoc:content": [
        "VDoc does not attempt at providing a unified ontology.\n        Documentation formats are contextual and often evolve. Common\n        structures may be represented in unified manner using existing\n        ontologies where possible but providing an interchange ontology\n        is outside the scope of this document."
      ]
    },
    "no_complete_model": {
      "@id": "no_complete_model",
      "vdoc:content": [
        "Documentation formats are contextual. Not all information\n        needs to survive the roundtrip via the underlying unified\n        model and back. As a corollary a specific format generator can\n        know about other formats explicitly and consume their\n        contextual data."
      ]
    },
    "document_flow": {
      "@id": "document_flow",
      "dc:title": "Document phases and transformations",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        "VDoc defines the central document flow in terms of three\n      document phases:",
        {
          "@id": "document_phases"
        },
        "VDoc defines two transformations between the phases:",
        {
          "@id": "document_transformations"
        },
        "In addition to these phases and transformations VDoc makes use of ",
        {
          "@type": "vdoc:Reference",
          "vdoc:content": [
            "JSON-LD 1.1 format"
          ],
          "vdoc:ref": "https://www.w3.org/TR/json-ld11/"
        },
        ", its ",
        {
          "@type": "vdoc:Reference",
          "vdoc:content": [
            "API and algorithms"
          ],
          "vdoc:ref": "https://www.w3.org/TR/json-ld11-api/"
        },
        " and (maybe) ",
        {
          "@type": "vdoc:Reference",
          "vdoc:content": [
            "its framing"
          ],
          "vdoc:ref": "https://www.w3.org/TR/json-ld11-framing/"
        },
        " for providing a mapping from VDocLD to RDF model."
      ]
    },
    "document_phases": {
      "@id": "document_phases",
      "@type": "vdoc:NumberedList",
      "vdoc:entries": [
        [
          {
            "revdoc:dfn": "#source_graph",
            "vdoc:content": [
              {
                "vdoc:strong": true,
                "vdoc:content": [
                  {
                    "@type": "vdoc:Reference",
                    "vdoc:content": [
                      "Source graph"
                    ],
                    "vdoc:ref": "#source_graph"
                  }
                ]
              },
              " is a cyclic graph of\n        native objects with some of its sub-graphs matching some of the ",
              {
                "@type": "vdoc:Reference",
                "vdoc:content": [
                  "VDoc extraction rules"
                ],
                "vdoc:ref": "#extension_extraction_rules"
              },
              "."
            ]
          },
          " It can be manually hand-written, programmatically generated\n      or even dynamically introspected."
        ],
        [
          {
            "revdoc:dfn": "#vdocld",
            "vdoc:content": [
              {
                "vdoc:strong": true,
                "vdoc:content": [
                  {
                    "@type": "vdoc:Reference",
                    "vdoc:content": [
                      "VDocLD"
                    ],
                    "vdoc:ref": "#vdocld"
                  }
                ]
              },
              " is a JSON-LD construct and the\n        primary VDoc interchange format. It is a normalized, complete\n        and self-contained structure with potentially multiple\n        different format-specific @context(s)."
            ]
          }
        ],
        [
          {
            "revdoc:dfn": "#extension_output",
            "vdoc:content": [
              {
                "vdoc:strong": true,
                "vdoc:content": [
                  {
                    "@type": "vdoc:Reference",
                    "vdoc:content": [
                      "Emission output"
                    ],
                    "vdoc:ref": "#extension_output"
                  }
                ]
              },
              " is a format specific\n        output that is produced by ",
              {
                "@type": "vdoc:Reference",
                "vdoc:content": [
                  "emission"
                ],
                "vdoc:ref": "#emission"
              },
              " from a VDocLD and format specific set of emission parameters."
            ]
          }
        ]
      ]
    },
    "document_transformations": {
      "@id": "document_transformations",
      "@type": "vdoc:NumberedList",
      "vdoc:entries": [
        [
          {
            "revdoc:dfn": "#extraction",
            "vdoc:content": [
              {
                "vdoc:strong": true,
                "vdoc:content": [
                  {
                    "@type": "vdoc:Reference",
                    "vdoc:content": [
                      "Extraction"
                    ],
                    "vdoc:ref": "#extraction"
                  }
                ]
              },
              " transforms a source graph into\n        a VDocLD by applying the idempotent ",
              {
                "@type": "vdoc:Reference",
                "vdoc:content": [
                  "VDoc extraction rules"
                ],
                "vdoc:ref": "#extension_extraction_rules"
              },
              " until the output no longer changes."
            ]
          },
          "Due to idempotence the source graph can wildly different or\n      arbitrarily close to the resulting VDocLD; in fact a VDocLD is\n      always its own source graph."
        ],
        [
          {
            "revdoc:dfn": "#emission",
            "vdoc:content": [
              {
                "vdoc:strong": true,
                "vdoc:content": [
                  {
                    "@type": "vdoc:Reference",
                    "vdoc:content": [
                      "Emission"
                    ],
                    "vdoc:ref": "#emission"
                  }
                ]
              },
              " is a format specific transformation\n        which emits the ",
              {
                "@type": "vdoc:Reference",
                "vdoc:content": [
                  "format specific output"
                ],
                "vdoc:ref": "#output_format"
              },
              " from VDocLD."
            ]
          }
        ]
      ]
    },
    "vdocld": {
      "@id": "vdocld",
      "dc:title": "VDocLD - primary interchange format",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        "VDocLD is a JSON-LD document with a well-formed tree\n      structure consisting of three types of nodes, corresponding to\n      the first, second and remaining levels of the tree:",
        {
          "@id": "node_types"
        },
        "There can be multiple first-level document nodes in a single\n      VDocLD (as per JSON-LD). ",
        {
          "revdoc:dfn": "#root_node",
          "vdoc:content": [
            {
              "vdoc:strong": true,
              "vdoc:content": [
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "The tree root node"
                  ],
                  "vdoc:ref": "#root_node"
                }
              ]
            },
            " is the singular,\n        implicit '0th-level' VDocLD node without semantics defined by\n        VDoc itself."
          ]
        },
        {
          "@id": "node_keys"
        },
        {
          "@id": "document_node"
        },
        {
          "@id": "resource_node"
        },
        {
          "@id": "element_node"
        }
      ]
    },
    "node_types": {
      "@id": "node_types",
      "@type": "vdoc:NumberedList",
      "vdoc:entries": [
        [
          {
            "revdoc:dfn": "#document_node",
            "vdoc:content": [
              {
                "vdoc:strong": true,
                "vdoc:content": [
                  {
                    "@type": "vdoc:Reference",
                    "vdoc:content": [
                      "Document node"
                    ],
                    "vdoc:ref": "#document_node"
                  }
                ]
              },
              " is an always-first-level\n        node identified by a ",
              {
                "@type": "vdoc:Reference",
                "vdoc:content": [
                  "a global document IRI"
                ],
                "vdoc:ref": "#document_iri"
              },
              "as its ",
              {
                "@type": "vdoc:Reference",
                "vdoc:content": [
                  "JSON-LD @id"
                ],
                "vdoc:ref": "https://www.w3.org/TR/json-ld11/#node-identifiers"
              },
              "."
            ]
          },
          " Links to document nodes in bold and italics."
        ],
        [
          {
            "revdoc:dfn": "#resource_node",
            "vdoc:content": [
              {
                "vdoc:strong": true,
                "vdoc:content": [
                  {
                    "@type": "vdoc:Reference",
                    "vdoc:content": [
                      "Resource node"
                    ],
                    "vdoc:ref": "#resource_node"
                  }
                ]
              },
              " is an always-second-level\n        node which is directly accessible from the first-level document\n        via its document relative ",
              {
                "@type": "vdoc:Reference",
                "vdoc:content": [
                  "resource identifier"
                ],
                "vdoc:ref": "#resource_id"
              },
              "as the dictionary key."
            ]
          },
          " Links to resource nodese are in italics."
        ],
        [
          {
            "revdoc:dfn": "#element_node",
            "vdoc:content": [
              {
                "vdoc:strong": true,
                "vdoc:content": [
                  {
                    "@type": "vdoc:Reference",
                    "vdoc:content": [
                      "Element node"
                    ],
                    "vdoc:ref": "#element_node"
                  }
                ]
              },
              " is a third-or-more-level\n        node. It might be anonymous and lacks a stable and unique\n        identifiers. It MAY have a locally unique identifier. If the\n        element node and all its parent element nodes have locally\n        unique identifier then the ordered set of those identifiers\n        can be considered a document local unique identifier of the\n        element node, similar to ",
              {
                "@type": "vdoc:Reference",
                "vdoc:content": [
                  "the resource identifier"
                ],
                "vdoc:ref": "#resource_id"
              }
            ]
          }
        ]
      ]
    },
    "node_keys": {
      "@id": "node_keys",
      "dc:title": "Node keys",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        "The keys of the VDocLD nodes have four categories\n        depending on whether the key is an IRI or not and whether an\n        IRI key has semantics defined VDoc or extension format\n        specifications:",
        {
          "@id": "node_key_categories"
        }
      ]
    },
    "node_key_categories": {
      "@id": "node_key_categories",
      "@type": "vdoc:NumberedList",
      "vdoc:entries": [
        [
          {
            "revdoc:dfn": "#vdoc_key",
            "vdoc:content": [
              {
                "vdoc:strong": true,
                "vdoc:content": [
                  {
                    "@type": "vdoc:Reference",
                    "vdoc:content": [
                      "VDoc node key"
                    ],
                    "vdoc:ref": "#vdoc_key"
                  }
                ]
              },
              " is any IRI which matches\n          a VDoc ontology context term. Its semantics are defined by\n          this specification."
            ]
          }
        ],
        [
          {
            "revdoc:dfn": "#extension_key",
            "vdoc:content": [
              {
                "vdoc:strong": true,
                "vdoc:content": [
                  {
                    "@type": "vdoc:Reference",
                    "vdoc:content": [
                      "Extension node key"
                    ],
                    "vdoc:ref": "#extension_key"
                  }
                ]
              },
              " is any IRI which\n          matches an extension ontology context term. Its semantics\n          are defined by the corresponding extension specification"
            ]
          }
        ],
        [
          {
            "revdoc:dfn": "#generic_key",
            "vdoc:content": [
              {
                "vdoc:strong": true,
                "vdoc:content": [
                  {
                    "@type": "vdoc:Reference",
                    "vdoc:content": [
                      "Generic IRI key"
                    ],
                    "vdoc:ref": "#generic_key"
                  }
                ]
              },
              " is any IRI key lacking\n          recognized ontology. It has no semantics in addition to what\n          JSON-LD specifies."
            ]
          }
        ],
        [
          {
            "revdoc:dfn": "#identifier_key",
            "vdoc:content": [
              {
                "vdoc:strong": true,
                "vdoc:content": [
                  {
                    "@type": "vdoc:Reference",
                    "vdoc:content": [
                      "Identifier key"
                    ],
                    "vdoc:ref": "#identifier_key"
                  }
                ]
              },
              " is any non-IRI key.\n          The semantics of an identifier key is defined by the node."
            ]
          }
        ]
      ]
    },
    "document_node": {
      "@id": "document_node",
      "dc:title": "Document nodes",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "revdoc:dfn": "#document_iri",
          "vdoc:content": [
            {
              "vdoc:strong": true,
              "vdoc:content": [
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "The document IRI"
                  ],
                  "vdoc:ref": "#document_iri"
                }
              ]
            },
            " is a global\n        identifier of a document. It must not have a fragment part."
          ]
        },
        "All ",
        {
          "@type": "vdoc:Reference",
          "vdoc:content": [
            "identifier keys"
          ],
          "vdoc:ref": "#identifier_key"
        },
        " of a\n      document node must have a resource node as their value."
      ]
    },
    "resource_node": {
      "@id": "resource_node",
      "dc:title": "Resource nodes",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "revdoc:dfn": "#resource_id",
          "vdoc:content": [
            {
              "vdoc:strong": true,
              "vdoc:content": [
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "The resource identifier"
                  ],
                  "vdoc:ref": "#resource_id"
                }
              ]
            },
            " is a string using\n      character set restricted to valid javascript identifiers, is\n      unique within a document and which identifies a resource node\n      inside that document."
          ]
        },
        "When the resource identifier is appended to ",
        {
          "@type": "vdoc:Reference",
          "vdoc:content": [
            "the document IRI"
          ],
          "vdoc:ref": "#document_iri"
        },
        " as an IRI fragment part the resource node has a stable,\n      global identity over time."
      ]
    },
    "element_node": {
      "@id": "element_node",
      "dc:title": "Element nodes",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        "Element nodes are structural document building blocks which\n      lack a stable identity even within the document."
      ]
    },
    "transformations_spec": {
      "@id": "transformations_spec",
      "dc:title": "Transformations convert documents to and from VDocLD",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "@id": "extraction_transformation"
        },
        {
          "@id": "emission_transformation"
        }
      ]
    },
    "extraction_transformation": {
      "@id": "extraction_transformation",
      "dc:title": "Extraction transforms source graphs into VDocLD",
      "@type": "vdoc:Chapter",
      "vdoc:content": []
    },
    "emission_transformation": {
      "@id": "emission_transformation",
      "dc:title": "Emission transforms VDocLD into output targets",
      "@type": "vdoc:Chapter",
      "vdoc:content": []
    },
    "extension": {
      "@id": "extension",
      "dc:title": "Extensions provide new ontologies and transformations",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        "A VDoc extension is a specification which can extend the VDoc\n      specification in different ways in the different transformation\n      stages. An extension has two main parts; the extension ontology\n      introduces new vocabulary for the VDoc interchange format itself\n      and the extension transformations introduces new algorithms for\n      extracting and emitting said vocabulary.",
        null,
        "Multiple VDoc extensions can co-exist; extensions must be\n      specified in a manner that a VDoc document itself and all\n      transformation operations are well-defined and deterministic even\n      if multiple extensions are used at the same time. There are two\n      primary mechanisms to reach this goal: global dns-registration\n      based ontology base IRI's and and extension ordering primacy\n      during transformations.",
        {
          "@id": "extension_ontology"
        },
        {
          "@id": "extension_transformations"
        }
      ]
    },
    "extension_ontology": {
      "@id": "extension_ontology",
      "dc:title": "VDoc extension ontology",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        "VDoc extension ontology is the combination of the extension",
        {
          "vdoc:content": [
            {
              "@type": "vdoc:NumberedList",
              "vdoc:entries": [
                [
                  "namespace preferred prefix and its associated prefixIRI"
                ],
                [
                  "depended ontologies with their prefix definitions"
                ],
                [
                  "extension RDF vocabulary"
                ],
                [
                  "JSON-LD context term definitions"
                ]
              ]
            }
          ]
        },
        "Together these fully specify the semantics of an extension\n        ontology. More specifically the ontologies of all extensions\n        listed in the @context section of a VDoc JSON-LD document fully\n        define all the semantics of that particular document itself.",
        {
          "@id": "extension_prefixes"
        },
        {
          "@id": "extension_vocabulary"
        },
        {
          "@id": "extension_context"
        }
      ]
    },
    "extension_prefixes": {
      "@id": "extension_prefixes",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        "Mappings from short, document-local strings into a globally unique IRIs."
      ]
    },
    "extension_vocabulary": {
      "@id": "extension_vocabulary",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        "A collection of RDF classes, properties and other names, all\n          of which have the ontology prefixIRI as a prefix."
      ]
    },
    "extension_context": {
      "@id": "extension_context",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        "A collection of JSON-LD context term definitions."
      ]
    },
    "extension_transformations": {
      "@id": "extension_transformations",
      "dc:title": "VDoc extension transformations: extraction and emission",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        "An extension can specify an arbitrary number of extraction\n        and emission transformation algorithms and rules from various\n        source graphs via the VDoc interchange format into various\n        output formats.",
        {
          "@id": "extension_extraction_rules"
        },
        {
          "@id": "extension_extractee_apis"
        },
        {
          "@id": "extension_output"
        },
        {
          "@id": "extension_emission"
        }
      ]
    },
    "extension_extraction_rules": {
      "@id": "extension_extraction_rules",
      "dc:title": "Extraction transformation rules",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        "Extraction rules specify how a source graph is interpreted as\n        mutations (usually additions) to a given target VDocLD document.\n        An extraction rule consists of two parts:",
        {
          "vdoc:content": [
            {
              "@type": "vdoc:BulletList",
              "vdoc:entries": [
                [
                  {
                    "revdoc:dfn": "#extraction_key_pattern",
                    "vdoc:content": [
                      {
                        "vdoc:strong": true,
                        "vdoc:content": [
                          {
                            "@type": "vdoc:Reference",
                            "vdoc:content": [
                              "key pattern matcher"
                            ],
                            "vdoc:ref": "#extraction_key_pattern"
                          }
                        ]
                      },
                      " is\n              matched against each source graph node dictionary key to\n              see if the key matches the rule and to parse the\n              extraction rule parameters"
                    ]
                  }
                ],
                [
                  {
                    "revdoc:dfn": "#extraction_action",
                    "vdoc:content": [
                      {
                        "vdoc:strong": true,
                        "vdoc:content": [
                          {
                            "@type": "vdoc:Reference",
                            "vdoc:content": [
                              "extraction action"
                            ],
                            "vdoc:ref": "#extraction_action"
                          }
                        ]
                      },
                      " specifies\n              how the extraction rule parameters and ",
                      {
                        "@type": "vdoc:Reference",
                        "vdoc:content": [
                          "extraction context"
                        ],
                        "vdoc:ref": "extraction context"
                      },
                      " is interpreted as a set of mutations on the current\n              target VDocLD document node"
                    ]
                  }
                ]
              ]
            }
          ]
        },
        {
          "revdoc:dfn": "#extraction_context",
          "vdoc:content": [
            {
              "vdoc:strong": true,
              "vdoc:content": [
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "Extraction context"
                  ],
                  "vdoc:ref": "#extraction_context"
                }
              ]
            },
            " is\n            defined as a collection of ",
            {
              "@type": "vdoc:Reference",
              "vdoc:content": [
                "rule key"
              ],
              "vdoc:ref": "rule key"
            },
            ", ",
            {
              "@type": "vdoc:Reference",
              "vdoc:content": [
                "source graph parent node"
              ],
              "vdoc:ref": "source graph parent node"
            },
            ", ",
            {
              "@type": "vdoc:Reference",
              "vdoc:content": [
                "source graph node value"
              ],
              "vdoc:ref": "source graph node value"
            },
            ", ",
            {
              "@type": "vdoc:Reference",
              "vdoc:content": [
                "target document parent node"
              ],
              "vdoc:ref": "target document parent node"
            },
            " and ",
            {
              "@type": "vdoc:Reference",
              "vdoc:content": [
                "target document value"
              ],
              "vdoc:ref": "target document value"
            }
          ]
        },
        "Typical extraction rule creates a new Node, adds it to target\n        document parent (directly or as a reference depending on the ",
        {
          "@type": "vdoc:Reference",
          "vdoc:content": [
            "Node type"
          ],
          "vdoc:ref": "#node_type"
        },
        ") and adds the source node\n        value to some specific property of the new Node."
      ]
    },
    "extension_extractee_apis": {
      "@id": "extension_extractee_apis",
      "dc:title": "Extraction extractee tool APIs",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        "An extension MAY specify an extractee API as a collection\n        of ",
        {
          "@type": "vdoc:Reference",
          "vdoc:content": [
            "WebIDL interfaces"
          ],
          "vdoc:ref": "https://www.w3.org/TR/WebIDL-1/"
        },
        "for constructing of extension extraction source graphs. By doing\n        this the native implementations gain the benefits of integrated\n        toolchains:",
        {
          "vdoc:content": [
            {
              "@type": "vdoc:BulletList",
              "vdoc:entries": [
                [
                  "Improved discoverability via integrated documentation and code\n          completion"
                ],
                [
                  "Implicitly well-formed primitives and structures where\n          possible, validation of input where not"
                ],
                [
                  "Improved readability of the document in contexts where the\n          primary document source graph is expressed in native code"
                ]
              ]
            }
          ]
        },
        "Altogether the extraction APIs are intended to lower the\n        threshold of adoption of new extensions and as such make the\n        introduction of new extensions easier."
      ]
    },
    "extension_output": {
      "@id": "extension_output",
      "dc:title": "Emission outputs",
      "@type": "vdoc:Chapter",
      "vdoc:content": []
    },
    "extension_emission": {
      "@id": "extension_emission",
      "dc:title": "Emission transformation",
      "@type": "vdoc:Chapter",
      "vdoc:content": []
    },
    "ontology": {
      "@id": "ontology",
      "dc:title": "VDoc Core ontology",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "@id": "section_ontology_abstract"
        },
        {
          "@id": "section_prefixes"
        },
        {
          "@id": "section_classes"
        },
        {
          "@id": "section_properties"
        },
        {
          "@id": "section_html_element_properties"
        },
        {
          "@id": "section_vocabulary_other"
        },
        {
          "@id": "section_context"
        }
      ]
    },
    "prefixes": {
      "@id": "prefixes",
      "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
      "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
      "xsd": "http://www.w3.org/2001/XMLSchema#",
      "owl": "http://www.w3.org/2002/07/owl#",
      "dc": "http://purl.org/dc/elements/1.1/",
      "vdoc": "https://valospace.org/vdoc#"
    },
    "vocabulary": {
      "@id": "vocabulary",
      "Class": {
        "@type": [
          "vdoc:Class",
          "valos-kernel:Class"
        ],
        "rdfs:subClassOf": "rdfs:Class",
        "rdfs:comment": "The class of classes which are defined by vdoc or a vdoc extension"
      },
      "Property": {
        "@type": [
          "vdoc:Class",
          "valos-kernel:Class"
        ],
        "rdfs:subClassOf": "rdf:Property",
        "rdfs:comment": "The class of properties which are defined by vdoc or a vdoc extension"
      },
      "Node": {
        "@type": "vdoc:Class",
        "rdfs:comment": "A document tree Node"
      },
      "resourceId": {
        "@type": "vdoc:Property",
        "rdfs:domain": "vdoc:Node",
        "rdfs:range": "xsd:string",
        "rdfs:comment": "The resource identifier of a resource node"
      },
      "content": {
        "@type": "vdoc:Property",
        "rdfs:domain": "vdoc:Node",
        "rdfs:range": "rdfs:List",
        "rdfs:comment": "The primary visible content of a Node"
      },
      "words": {
        "@type": "vdoc:Property",
        "rdfs:subPropertyOf": "vdoc:content",
        "rdfs:domain": "vdoc:Node",
        "rdfs:range": "rdfs:List",
        "rdfs:comment": "A visible list of visually separate words"
      },
      "entries": {
        "@type": "vdoc:Property",
        "rdfs:subPropertyOf": "vdoc:content",
        "rdfs:domain": "vdoc:Node",
        "rdfs:range": "rdfs:List",
        "rdfs:comment": "A visible list of vertically or horizontally segmented entries"
      },
      "lookup": {
        "@type": "vdoc:Property",
        "rdfs:domain": "vdoc:Node",
        "rdfs:range": "rdfs:Resource",
        "rdfs:comment": "A reference to a lookup structure for string literal entries"
      },
      "wide": {
        "@type": "vdoc:Property",
        "rdfs:domain": "vdoc:Node",
        "rdfs:range": "rdfs:Resource",
        "rdfs:comment": "Marks the node content as being wide"
      },
      "tall": {
        "@type": "vdoc:Property",
        "rdfs:domain": "vdoc:Node",
        "rdfs:range": "rdfs:Resource",
        "rdfs:comment": "Marks the node content as being tall"
      },
      "Chapter": {
        "@type": "vdoc:Class",
        "rdfs:subClassOf": "vdoc:Node",
        "rdfs:comment": "A titled, possibly numbered chapter document node"
      },
      "BulletList": {
        "@type": "vdoc:Class",
        "rdfs:subClassOf": "vdoc:Node",
        "rdfs:comment": "A bullet list document node"
      },
      "NumberedList": {
        "@type": "vdoc:Class",
        "rdfs:subClassOf": "vdoc:Node",
        "rdfs:comment": "A numbered list document node"
      },
      "Table": {
        "@type": "vdoc:Class",
        "rdfs:subClassOf": "vdoc:Node",
        "rdfs:comment": "A two-dimensional table document node"
      },
      "Header": {
        "@type": "vdoc:Class",
        "rdfs:subClassOf": "vdoc:Node",
        "rdfs:comment": "A table cross-entry-section header node"
      },
      "headers": {
        "@type": "vdoc:Property",
        "rdfs:domain": "vdoc:Table",
        "rdfs:range": "rdfs:List",
        "rdfs:comment": "A list of table cross-entry-section headers"
      },
      "cell": {
        "@type": "vdoc:Property",
        "rdfs:domain": "vdoc:Header",
        "rdfs:range": "rdfs:List",
        "rdfs:comment": "The template for building cell content using content selectors"
      },
      "ContentSelector": {
        "@type": "vdoc:Class",
        "rdfs:comment": "The class of selectors with explicit meaning for selecting content"
      },
      "selectKey": {
        "@type": "vdoc:ContentSelector",
        "rdfs:comment": "A content selector literal denoting the entry lookup key"
      },
      "selectValue": {
        "@type": "vdoc:ContentSelector",
        "rdfs:comment": "A content selector literal denoting the whole entry value"
      },
      "selectField": {
        "@type": "vdoc:Property",
        "rdfs:domain": "rdfs:Resource",
        "rdfs:range": "rdfs:Literal",
        "rdfs:comment": "A content selector for the entry field denoted by the object of this triple"
      },
      "CharacterData": {
        "@type": "vdoc:Class",
        "rdfs:subClassOf": "vdoc:Node",
        "rdfs:comment": "A character data document node"
      },
      "language": {
        "@type": "vdoc:Property",
        "rdfs:domain": "vdoc:CharacterData",
        "rdfs:range": "rdfs:Resource",
        "rdfs:comment": "The language of the character data content"
      },
      "Reference": {
        "@type": "vdoc:Class",
        "rdfs:subClassOf": "vdoc:Node",
        "rdfs:comment": "A reference document node"
      },
      "ContextPath": {
        "@type": "vdoc:Class",
        "rdfs:subClassOf": "vdoc:Node",
        "rdfs:comment": "A context-based path document node"
      },
      "context": {
        "@type": "vdoc:Property",
        "rdfs:domain": "vdoc:ContextPath",
        "rdfs:range": "rdfs:Resource",
        "rdfs:comment": "Non-visible context base (absolute or relative to current base)"
      },
      "ContextBase": {
        "@type": "vdoc:Class",
        "rdfs:subClassOf": "vdoc:ContextPath",
        "rdfs:comment": "A context base setting document node"
      },
      "HTMLElementProperty": {
        "@type": "vdoc:Class",
        "rdfs:subClassOf": "vdoc:Property",
        "rdfs:comment": "The class of vdoc properties which directly inherit the semantics of a specific HTML5 element"
      },
      "elementName": {
        "@type": "vdoc:Property",
        "rdfs:domain": "vdoc:HTMLElementProperty",
        "rdfs:range": "xsd:string",
        "rdfs:comment": "The name of the html element associated with this property"
      },
      "em": {
        "@type": "vdoc:HTMLElementProperty",
        "rdfs:domain": "vdoc:Node",
        "rdfs:range": "rdfs:Resource",
        "vdoc:elementName": "em",
        "vdoc:elementSpec": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-em-element",
        "rdfs:comment": "Node content is <em>emphasised</em>"
      },
      "strong": {
        "@type": "vdoc:HTMLElementProperty",
        "rdfs:domain": "vdoc:Node",
        "rdfs:range": "rdfs:Resource",
        "vdoc:elementName": "strong",
        "vdoc:elementSpec": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-strong-element",
        "rdfs:comment": "Node content is <strong>strong</strong>"
      },
      "ins": {
        "@type": "vdoc:HTMLElementProperty",
        "rdfs:domain": "vdoc:Node",
        "rdfs:range": "rdfs:Resource",
        "vdoc:elementName": "ins",
        "vdoc:elementSpec": "https://html.spec.whatwg.org/multipage/edits.html#the-ins-element",
        "rdfs:comment": "Node content is an <ins>insertion</ins>"
      },
      "del": {
        "@type": "vdoc:HTMLElementProperty",
        "rdfs:domain": "vdoc:Node",
        "rdfs:range": "rdfs:Resource",
        "vdoc:elementName": "del",
        "vdoc:elementSpec": "https://html.spec.whatwg.org/multipage/edits.html#the-del-element",
        "rdfs:comment": "Node content is <del>deleted</del>"
      },
      "quote": {
        "@type": "vdoc:HTMLElementProperty",
        "rdfs:domain": "vdoc:Node",
        "rdfs:range": "rdfs:Resource",
        "vdoc:elementName": "quote",
        "vdoc:elementSpec": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-q-element",
        "rdfs:comment": "Node content is <q>quoted</q>"
      },
      "blockquote": {
        "@type": "vdoc:HTMLElementProperty",
        "rdfs:domain": "vdoc:Node",
        "rdfs:range": "rdfs:Resource",
        "vdoc:elementName": "blockquote",
        "vdoc:elementSpec": "https://html.spec.whatwg.org/multipage/grouping-content.html#the-blockquote-element",
        "rdfs:comment": "Node content is <blockquote>block quoted</blockquote>"
      }
    },
    "context": {
      "@id": "context",
      "vdoc:content": {
        "@id": "https://valospace.org/vdoc#content",
        "@container": "@list",
        "@type": "@id"
      },
      "vdoc:words": {
        "@id": "https://valospace.org/vdoc#words",
        "@container": "@list",
        "@type": "@id"
      },
      "vdoc:entries": {
        "@id": "https://valospace.org/vdoc#entries",
        "@container": "@list",
        "@type": "@id"
      },
      "vdoc:headers": {
        "@id": "https://valospace.org/vdoc#headers",
        "@container": "@list",
        "@type": "@id"
      },
      "vdoc:cell": {
        "@id": "https://valospace.org/vdoc#cell",
        "@container": "@list",
        "@type": "@id"
      }
    },
    "section_ontology_abstract": {
      "@id": "section_ontology_abstract",
      "vdoc:content": [
        "VDoc core ontology specifies the vocabulary for the human facing\n      document structure by means of primitives which are sufficiently\n      common and meaningful across all types of documents.\n      These primitives include constructs such as chapters, titles,\n      lists, tables, cross-references, etc.",
        "VDoc core ontology explicitly does not specify any semantic\n      meanings outside the document structure itself."
      ]
    },
    "section_prefixes": {
      "@id": "section_prefixes",
      "dc:title": "VDoc Core IRI prefixes",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "vdoc:lookup": "prefixes",
          "@type": "vdoc:Table",
          "vdoc:headers": [
            {
              "vdoc:cell": "vdoc:selectKey",
              "@type": "vdoc:Header",
              "vdoc:content": [
                "Prefix"
              ]
            },
            {
              "vdoc:cell": "vdoc:selectValue",
              "@type": "vdoc:Header",
              "vdoc:content": [
                "IRI"
              ]
            }
          ]
        }
      ]
    },
    "section_classes": {
      "@id": "section_classes",
      "dc:title": "<em>vdoc:* a vdoc:Class</em> vocabulary",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "vdoc:lookup": "vocabulary",
          "@type": "vdoc:Table",
          "vdoc:headers": {
            "vdoc:entries": [
              {
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:label"
                ],
                "vdoc:cell": {
                  "vdoc:resourceId": "vdoc:selectKey",
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    {
                      "vdoc:em": true,
                      "vdoc:content": [
                        "vdoc:selectKey"
                      ]
                    }
                  ],
                  "vdoc:ref": [
                    "#",
                    "vdoc:selectKey"
                  ]
                }
              },
              {
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:subClassOf"
                ],
                "vdoc:cell": {
                  "vdoc:words": {
                    "vdoc:selectField": "rdfs:subClassOf"
                  }
                }
              },
              {
                "vdoc:cell": "rdfs:comment",
                "@type": "vdoc:Header",
                "vdoc:content": {
                  "vdoc:em": true,
                  "vdoc:content": [
                    "rdfs:comment"
                  ]
                },
                "vdoc:wide": true
              }
            ]
          },
          "vdoc:entries": [
            "Class",
            "Property",
            "Node",
            "Chapter",
            "BulletList",
            "NumberedList",
            "Table",
            "Header",
            "ContentSelector",
            "CharacterData",
            "Reference",
            "ContextPath",
            "ContextBase",
            "HTMLElementProperty"
          ]
        }
      ]
    },
    "section_properties": {
      "@id": "section_properties",
      "dc:title": "<em>vdoc:* a vdoc:Property</em> vocabulary",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "vdoc:lookup": "vocabulary",
          "@type": "vdoc:Table",
          "vdoc:headers": {
            "vdoc:entries": [
              {
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:label"
                ],
                "vdoc:cell": {
                  "vdoc:resourceId": "vdoc:selectKey",
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    {
                      "vdoc:em": true,
                      "vdoc:content": [
                        "vdoc:selectKey"
                      ]
                    }
                  ],
                  "vdoc:ref": [
                    "#",
                    "vdoc:selectKey"
                  ]
                }
              },
              {
                "vdoc:cell": "rdfs:subPropertyOf",
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:subPropertyOf"
                ]
              },
              {
                "vdoc:cell": "rdfs:domain",
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:domain"
                ]
              },
              {
                "vdoc:cell": "rdfs:range",
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:range"
                ]
              },
              {
                "vdoc:cell": "rdfs:comment",
                "@type": "vdoc:Header",
                "vdoc:content": {
                  "vdoc:em": true,
                  "vdoc:content": [
                    "rdfs:comment"
                  ]
                },
                "vdoc:wide": true
              }
            ]
          },
          "vdoc:entries": [
            "resourceId",
            "content",
            "words",
            "entries",
            "lookup",
            "wide",
            "tall",
            "headers",
            "cell",
            "selectField",
            "language",
            "context",
            "elementName"
          ]
        }
      ]
    },
    "section_html_element_properties": {
      "@id": "section_html_element_properties",
      "dc:title": "<em>vdoc: a vdoc:HTMLElementProperty</em> vocabulary",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        "Properties instanced from ",
        {
          "@type": "vdoc:Reference",
          "vdoc:content": [
            "vdoc:HTMLElementProperty"
          ],
          "vdoc:ref": "#HTMLElementProperty"
        },
        " inherit HTML5 element semantics directly. Only those HTMl5 elements\nwith structural semantic meaning are exposed via VDoc core ontology.",
        null,
        {
          "vdoc:lookup": "vocabulary",
          "@type": "vdoc:Table",
          "vdoc:headers": {
            "vdoc:entries": [
              {
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:label"
                ],
                "vdoc:cell": {
                  "vdoc:resourceId": "vdoc:selectKey",
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    {
                      "vdoc:em": true,
                      "vdoc:content": [
                        "vdoc:selectKey"
                      ]
                    }
                  ],
                  "vdoc:ref": [
                    "#",
                    "vdoc:selectKey"
                  ]
                }
              },
              {
                "vdoc:cell": "rdfs:subPropertyOf",
                "@type": "vdoc:Header",
                "vdoc:content": []
              },
              {
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "HTML5 element"
                ],
                "vdoc:cell": {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    {
                      "vdoc:selectField": "vdoc:elementName"
                    }
                  ],
                  "vdoc:ref": {
                    "vdoc:selectField": "vdoc:elementSpec"
                  }
                }
              },
              {
                "vdoc:cell": "rdfs:domain",
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:domain"
                ]
              },
              {
                "vdoc:cell": "rdfs:range",
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:range"
                ]
              },
              {
                "vdoc:cell": "rdfs:comment",
                "@type": "vdoc:Header",
                "vdoc:content": {
                  "vdoc:em": true,
                  "vdoc:content": [
                    "rdfs:comment"
                  ]
                },
                "vdoc:wide": true
              }
            ]
          },
          "vdoc:entries": [
            "em",
            "strong",
            "ins",
            "del",
            "quote",
            "blockquote"
          ]
        }
      ]
    },
    "section_vocabulary_other": {
      "@id": "section_vocabulary_other",
      "dc:title": "<em>vdoc:*</em> other vocabulary",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "vdoc:lookup": "vocabulary",
          "@type": "vdoc:Table",
          "vdoc:headers": {
            "vdoc:entries": [
              {
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:label"
                ],
                "vdoc:cell": {
                  "vdoc:resourceId": "vdoc:selectKey",
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    {
                      "vdoc:em": true,
                      "vdoc:content": [
                        "vdoc:selectKey"
                      ]
                    }
                  ],
                  "vdoc:ref": [
                    "#",
                    "vdoc:selectKey"
                  ]
                }
              },
              {
                "vdoc:cell": "@type",
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "rdf:type"
                ]
              },
              {
                "@type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:subClassOf"
                ],
                "vdoc:cell": {
                  "vdoc:words": {
                    "vdoc:selectField": "rdfs:subClassOf"
                  }
                }
              },
              {
                "vdoc:cell": "rdfs:comment",
                "@type": "vdoc:Header",
                "vdoc:content": {
                  "vdoc:em": true,
                  "vdoc:content": [
                    "rdfs:comment"
                  ]
                },
                "vdoc:wide": true
              }
            ]
          },
          "vdoc:entries": [
            "selectKey",
            "selectValue"
          ]
        }
      ]
    },
    "section_context": {
      "@id": "section_context",
      "dc:title": "VDoc Core JSON-LD context term definitions",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "vdoc:lookup": "context",
          "@type": "vdoc:Table",
          "vdoc:headers": [
            {
              "vdoc:cell": "vdoc:selectKey",
              "@type": "vdoc:Header",
              "vdoc:content": [
                "Term"
              ]
            },
            {
              "vdoc:cell": "vdoc:selectValue",
              "@type": "vdoc:Header",
              "vdoc:content": [
                "Definition"
              ]
            },
            {
              "vdoc:cell": "@id",
              "@type": "vdoc:Header",
              "vdoc:content": [
                "@id"
              ]
            },
            {
              "vdoc:cell": "@type",
              "@type": "vdoc:Header",
              "vdoc:content": [
                "@type"
              ]
            },
            {
              "vdoc:cell": "@container",
              "@type": "vdoc:Header",
              "vdoc:content": [
                "@container"
              ]
            }
          ]
        }
      ]
    },
    "transformations": {
      "@id": "transformations",
      "dc:title": "VDoc Core transformations",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        "VDoc defines a single extraction transformation from a native\n      javascript source graph. To support this VDoc defines an ",
        {
          "revdoc:dfn": "#extractee_api",
          "vdoc:content": [
            {
              "vdoc:strong": true,
              "vdoc:content": [
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "extractee API"
                  ],
                  "vdoc:ref": "#extractee_api"
                }
              ]
            }
          ]
        },
        " as native javascript\n      convenience functions and libraries which construct typical\n      VDoc source graph primitives. This API can be extended by\n      extensions which make use of native source graph extractors.",
        null,
        "The extraction transformation is based around two basic\n      mechanisms: ",
        {
          "revdoc:dfn": "#array_composition",
          "vdoc:content": [
            {
              "vdoc:strong": true,
              "vdoc:content": [
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "array composition"
                  ],
                  "vdoc:ref": "#array_composition"
                }
              ]
            }
          ]
        },
        " and ",
        {
          "revdoc:dfn": "#extraction_rules",
          "vdoc:content": [
            {
              "vdoc:strong": true,
              "vdoc:content": [
                {
                  "@type": "vdoc:Reference",
                  "vdoc:content": [
                    "extraction rules"
                  ],
                  "vdoc:ref": "#extraction_rules"
                }
              ]
            }
          ]
        },
        ".",
        {
          "@id": "extraction_rules"
        },
        {
          "@id": "extractee_api"
        },
        {
          "@id": "emission_output"
        },
        {
          "@id": "emission_rules"
        }
      ]
    },
    "extraction_rules_lookup": {
      "@id": "extraction_rules_lookup",
      "": {
        "comment": "Basic Node",
        "owner": "vdoc:content",
        "body": "vdoc:content"
      },
      "chapter": {
        "range": "vdoc:Chapter",
        "owner": "vdoc:content",
        "body": "vdoc:content",
        "rest": "dc:title",
        "comment": "Numbered, titled chapter"
      },
      "c": {
        "range": "vdoc:CharacterData",
        "owner": "vdoc:content",
        "body": "vdoc:content",
        "rest": "vdoc:language",
        "comment": "Character data"
      },
      "bulleted": {
        "range": "vdoc:BulletList",
        "owner": "vdoc:content",
        "body": "vdoc:entries",
        "comment": "Bulleted list"
      },
      "numbered": {
        "range": "vdoc:NumberedList",
        "owner": "vdoc:content",
        "body": "vdoc:entries",
        "comment": "Numbered list"
      },
      "table": {
        "range": "vdoc:Table",
        "owner": "vdoc:content",
        "body": "vdoc:headers",
        "rest": "vdoc:lookup",
        "comment": "Table"
      },
      "header": {
        "range": "vdoc:Header",
        "owner": "vdoc:entries",
        "body": "vdoc:content",
        "rest": "vdoc:cell",
        "comment": "Header"
      },
      "data": {
        "range": null,
        "owner": null,
        "body": null,
        "comment": "Hidden data"
      }
    },
    "extractee_api_lookup": {
      "@id": "extractee_api_lookup"
    },
    "extraction_rules": {
      "@id": "extraction_rules",
      "dc:title": "VDoc Core extraction rules",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "vdoc:lookup": "extraction_rules_lookup",
          "@type": "vdoc:Table",
          "vdoc:headers": [
            {
              "vdoc:cell": "vdoc:selectKey",
              "@type": "vdoc:Header",
              "vdoc:content": [
                "Rule name"
              ]
            },
            {
              "vdoc:cell": "range",
              "@type": "vdoc:Header",
              "vdoc:content": [
                "Inter-node rdf:type"
              ]
            },
            {
              "vdoc:cell": "owner",
              "@type": "vdoc:Header",
              "vdoc:content": [
                "Owner property"
              ]
            },
            {
              "vdoc:cell": "body",
              "@type": "vdoc:Header",
              "vdoc:content": [
                "Body property"
              ]
            },
            {
              "vdoc:cell": "rest",
              "@type": "vdoc:Header",
              "vdoc:content": [
                "';rest' property"
              ]
            },
            {
              "vdoc:cell": "comment",
              "@type": "vdoc:Header",
              "vdoc:content": [
                "Comment"
              ]
            }
          ]
        }
      ]
    },
    "extractee_api": {
      "@id": "extractee_api",
      "dc:title": "VDoc Core extractee API",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "vdoc:lookup": "extractee_api_lookup",
          "@type": "vdoc:Table",
          "vdoc:headers": [
            {
              "vdoc:cell": "vdoc:selectKey",
              "@type": "vdoc:Header",
              "vdoc:content": [
                "API identifier"
              ]
            },
            {
              "vdoc:cell": "vdoc:selectValue",
              "@type": "vdoc:Header",
              "vdoc:content": [
                "rdf:type"
              ]
            }
          ]
        }
      ]
    },
    "emission_output": {
      "@id": "emission_output",
      "dc:title": "VDoc Core emission output",
      "@type": "vdoc:Chapter",
      "vdoc:content": []
    },
    "emission_rules": {
      "@id": "emission_rules",
      "dc:title": "VDoc Core emission rules",
      "@type": "vdoc:Chapter",
      "vdoc:content": [
        "ReVDoc provides html emission rules for ",
        {
          "vdoc:words": [
            "null",
            "string",
            "number",
            "array",
            "object",
            "vdoc:Node",
            "vdoc:Chapter",
            "vdoc:BulletList",
            "vdoc:NumberedList",
            "vdoc:Table",
            "vdoc:Reference",
            "vdoc:CharacterData"
          ]
        }
      ]
    },
    "@type": "revdoc:Document",
    "vdoc:content": [
      {
        "@id": "abstract"
      },
      {
        "@id": "sotd"
      },
      {
        "@id": "introduction"
      },
      {
        "@id": "goals_and_non_goals"
      },
      {
        "@id": "document_flow"
      },
      {
        "@id": "vdocld"
      },
      {
        "@id": "transformations_spec"
      },
      {
        "@id": "extension"
      },
      {
        "@id": "ontology"
      },
      {
        "@id": "transformations"
      }
    ]
  }
]