[
  {
    "@id": "https://valospace.org/index",
    "@context": {
      "@base": "https://valospace.org/index#",
      "sbomdoc": "https://valospace.org/sbomdoc#",
      "revdoc": "https://valospace.org/revdoc#",
      "dc": "http://purl.org/dc/elements/1.1/",
      "owl": "http://www.w3.org/2002/07/owl#",
      "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
      "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
      "vdoc": "https://valospace.org/vdoc#",
      "a": {
        "@id": "rdf:type",
        "@type": "@id"
      },
      "vdoc:content": {
        "@id": "https://valospace.org/vdoc#content",
        "@container": "@list"
      },
      "vdoc:words": {
        "@id": "https://valospace.org/vdoc#words",
        "@container": "@list"
      },
      "vdoc:entries": {
        "@id": "https://valospace.org/vdoc#entries",
        "@container": "@list"
      }
    },
    "dc:title": "@valos/kernel domain content reference",
    "vdoc:tags": [
      "PRIMARY",
      "DOMAIN",
      "ONTOLOGY"
    ],
    "revdoc:package": "@valos/kernel",
    "revdoc:prefix": "valos",
    "revdoc:prefixIRI": "https://valospace.org/#",
    "revdoc:version": "0.35.0-prerelease.8",
    "respecConfig": {
      "subtitle": "0.35.0-prerelease.8",
      "specStatus": "unofficial",
      "editors": [
        {
          "name": "Iridian Kiiskinen",
          "url": "https://valaatech.github.io/fabric/authors/iridian",
          "github": "http://github.com/valospace"
        }
      ],
      "authors": [],
      "shortName": "valosKernelDomain"
    },
    "documents": {
      "@id": "documents",
      "sbom": {
        "@id": "https://valospace.org/sbom",
        "tags": [
          "PRIMARY",
          "SBOM"
        ],
        "title": "@valos/kernel@0.35.0-prerelease.8 Software Bill of Materials",
        "abstract": {
          "rdf:type": "vdoc:Chapter",
          "vdoc:content": [
            "This document is an autogenerated",
            {
              "rdf:type": "vdoc:Reference",
              "vdoc:content": [
                "CycloneDX"
              ],
              "vdoc:ref": "https://cyclonedx.org/"
            },
            {
              "rdf:type": "vdoc:Reference",
              "vdoc:content": [
                "SBoM document"
              ],
              "vdoc:ref": "https://www.owasp.org/index.php/Component_Analysis#Software_Bill-of-Materials_.28SBOM.29"
            }
          ]
        },
        "introduction": {
          "rdf:type": "vdoc:Chapter",
          "vdoc:content": [
            "Configure @valos/type-vault-sbom.introduction section using",
            {
              "rdf:type": "vdoc:Reference",
              "vdoc:content": [
                "VDoc source graph syntax"
              ],
              "vdoc:ref": "@valos/vdoc#source_graph"
            },
            "to define the content of this section."
          ]
        },
        "package": "@valos/kernel",
        "version": "0.35.0-prerelease.8"
      },
      "raem": {
        "@id": "https://valospace.org/raem",
        "tags": [
          "PRIMARY",
          "INTRODUCTORY",
          "ONTOLOGY",
          "LIBRARY"
        ],
        "title": "ValOS Resources And Events Model (ValOS-RAEM) API, schema and ontology",
        "abstract": {
          "rdf:type": "vdoc:Chapter",
          "vdoc:content": [
            "This library provides the definitions and reference implementation\n    for the fundamental ",
            {
              "rdf:type": "vdoc:CharacterData",
              "vdoc:content": [
                "ValOS Resources"
              ]
            },
            " and ",
            {
              "rdf:type": "vdoc:CharacterData",
              "vdoc:content": [
                "ValOS Events"
              ]
            },
            " systems."
          ]
        },
        "introduction": {
          "rdf:type": "vdoc:Chapter",
          "vdoc:content": [
            "This library provides the definitions and reference implementations\n    for the fundamental ",
            {
              "rdf:type": "vdoc:CharacterData",
              "vdoc:content": [
                "ValOS Resources"
              ]
            },
            " and ",
            {
              "rdf:type": "vdoc:CharacterData",
              "vdoc:content": [
                "ValOS Events"
              ]
            },
            " systems.",
            null,
            {
              "vdoc:quote": true,
              "vdoc:content": [
                [
                  "A ValOS Resource ",
                  {
                    "rdf:type": "vdoc:CharacterData",
                    "vdoc:content": [
                      "resource"
                    ]
                  },
                  " represents a well-defined part of\n      the world. It has a well-defined state at each particular moment in time."
                ]
              ]
            },
            null,
            {
              "vdoc:quote": true,
              "vdoc:content": [
                [
                  "A ValOS Event ",
                  {
                    "rdf:type": "vdoc:CharacterData",
                    "vdoc:content": [
                      "event"
                    ]
                  },
                  " represents a dynamic change to a\n      resource by describing the change from previous to subsequent resource\n      states at a particular time."
                ]
              ]
            },
            null,
            "The interplay of these distinct yet interwoven systems forms the\n    foundation of the Valaa Open System."
          ]
        },
        "ontologyAbstract": {
          "vdoc:content": [
            "@valos/raem ontology specifies the Valospace core types and\n      properties directly to the @valos/kernel namespace. "
          ]
        },
        "package": "@valos/raem",
        "version": "0.35.0-prerelease.8"
      },
      "revdoc": {
        "@id": "https://valospace.org/revdoc",
        "tags": [
          "PRIMARY",
          "ONTOLOGY"
        ],
        "title": "ReVDoc - ReSpec document VDoc extension",
        "abstract": {
          "rdf:type": "vdoc:Chapter",
          "vdoc:content": [
            "This document specifies ReVDoc, a ",
            {
              "rdf:type": "vdoc:Reference",
              "vdoc:content": [
                "VDoc extension"
              ],
              "vdoc:ref": "@valos/vdoc#extension"
            },
            " for extracting and emitting ",
            {
              "rdf:type": "vdoc:Reference",
              "vdoc:content": [
                "ReSpec documents"
              ],
              "vdoc:ref": "https://github.com/w3c/respec"
            },
            "."
          ]
        },
        "introduction": {
          "rdf:type": "vdoc:Chapter",
          "vdoc:content": [
            "ReVDoc is a VDoc extension which can produce ReSpec documents."
          ]
        },
        "ontologyAbstract": {
          "vdoc:content": [
            "ReVDoc ontology provides vocabulary and definitions which are\n      tailored for emitting ReSpec html output documents."
          ]
        },
        "package": "@valos/revdoc",
        "version": "0.35.0-prerelease.8"
      },
      "revdoc/tutorial": {
        "@id": "https://valospace.org/revdoc/tutorial",
        "tags": [],
        "title": "ReVDoc Tutorial",
        "abstract": {
          "rdf:type": "vdoc:Chapter",
          "vdoc:content": [
            "This document is a revdoc template document 'tutorial' created by create-revdoc."
          ]
        },
        "introduction": {
          "rdf:type": "vdoc:Chapter",
          "vdoc:content": [
            "Edit me - this is the first payload chapter. Abstract and SOTD are essential",
            {
              "rdf:type": "vdoc:Reference",
              "vdoc:content": [
                "ReSpec boilerplate"
              ],
              "vdoc:ref": "https://github.com/w3c/respec/wiki/ReSpec-Editor's-Guide#essential-w3c-boilerplate"
            },
            null,
            "See ",
            {
              "rdf:type": "vdoc:Reference",
              "vdoc:content": [
                "ReVDoc tutorial"
              ],
              "vdoc:ref": "@valos/revdoc/tutorial"
            },
            " for instructions on how to write revdoc source documents.",
            null,
            "See also ",
            {
              "rdf:type": "vdoc:Reference",
              "vdoc:content": [
                "ReVdoc specification"
              ],
              "vdoc:ref": "@valos/revdoc"
            },
            " and ",
            {
              "rdf:type": "vdoc:Reference",
              "vdoc:content": [
                "VDoc specification"
              ],
              "vdoc:ref": "@valos/vdoc"
            },
            " for reference documentation."
          ]
        },
        "package": "@valos/revdoc",
        "version": "0.35.0-prerelease.8"
      },
      "sbomdoc": {
        "@id": "https://valospace.org/sbomdoc",
        "tags": [
          "PRIMARY",
          "ONTOLOGY"
        ],
        "title": "SBoMDoc - Software Bill of Materials VDoc extension",
        "abstract": {
          "rdf:type": "vdoc:Chapter",
          "vdoc:content": [
            "This document specifies SBomDoc, a ",
            {
              "rdf:type": "vdoc:Reference",
              "vdoc:content": [
                "VDoc extension"
              ],
              "vdoc:ref": "@valos/vdoc#extension"
            },
            " for extracting and emitting ",
            {
              "rdf:type": "vdoc:Reference",
              "vdoc:content": [
                "CycloneDX BOM documents"
              ],
              "vdoc:ref": "https://cyclonedx.org/"
            },
            " in various formats."
          ]
        },
        "introduction": {
          "rdf:type": "vdoc:Chapter",
          "vdoc:content": [
            "SBoMDoc is a VDoc extension which uses CycloneDX namespaces and\n    can emit BOM documents in various formats."
          ]
        },
        "ontologyAbstract": {
          "vdoc:content": [
            "SBoMDoc ontology provides vocabulary and definitions which are\n      tailored for representing CycloneDX SBoM analysis semantic\n      content."
          ]
        },
        "package": "@valos/sbomdoc",
        "version": "0.35.0-prerelease.8"
      },
      "twindoc": {
        "@id": "https://valospace.org/twindoc",
        "tags": [
          "PRIMARY",
          "ONTOLOGY"
        ],
        "title": "TwinDoc - Valospace Hypertwin VDoc extension",
        "abstract": {
          "rdf:type": "vdoc:Chapter",
          "vdoc:content": [
            "This document specifies TwinDoc, a ",
            {
              "rdf:type": "vdoc:Reference",
              "vdoc:content": [
                "VDoc extension"
              ],
              "vdoc:ref": "@valos/vdoc#extension"
            },
            " which specifies an isomorphism and synchronization\n    transformations between VDoc documents and valospace resources.",
            null,
            "More specifically TwinDoc allows for the serialization and\n    deserialization of an arbitrary selection of valospace resources\n    into a VDoc document array and back even if the source resources\n    are not a representation of a VDoc document nor use any VDoc core\n    or extension ontologies."
          ]
        },
        "introduction": {
          "rdf:type": "vdoc:Chapter",
          "vdoc:content": [
            "TwinDoc provides both full isomorphic synchronization as well as\n    incremental, additive updates between VDoc documents and valospace\n    resources.\n    The fully isomoprhic extraction and emission transformations to\n    valospace resources provide lossless roundtrips to both directions:",
            {
              "vdoc:content": [
                {
                  "rdf:type": "vdoc:NumberedList",
                  "vdoc:entries": [
                    "emit + extract: a roundtrip starting from VDocLD into valospace back into VDocLD",
                    "extract + emit: a roundtrip starting from valospace into VDocLD back into valospace"
                  ]
                }
              ]
            },
            null,
            "TwinDoc also specifies incremental transformations which are given\n    a diff base in addition to the source and which compute a diffset\n    and then merge the resulting diffset to the pre-existing\n    transformation target.\n    This not only gives performance advantages but also makes it\n    possible to have the final document be a combination of several\n    partial primary sources."
          ]
        },
        "ontologyAbstract": {
          "vdoc:content": [
            "TwinDoc ontology provides vocabulary for defining hypertwin\n      mappings and configurations; actual hypertwin content is\n      represented using the valos core ontologies and possible\n      extension content ontologies."
          ]
        },
        "package": "@valos/twindoc",
        "version": "0.35.0-prerelease.8"
      },
      "type-vault/AssortedTutorials": {
        "@id": "https://valospace.org/type-vault/AssortedTutorials",
        "tags": [
          "PRIMARY",
          "HOW_TO"
        ],
        "title": "Assorted tutorials",
        "abstract": {
          "rdf:type": "vdoc:Chapter",
          "vdoc:content": [
            "This document is a collection of tutorials and possibly other notes",
            " created by Jaradacl based on the tasks given. (During first few days at least)"
          ]
        },
        "package": "@valos/type-vault",
        "version": "0.35.0-prerelease.8"
      },
      "vdoc": {
        "@id": "https://valospace.org/vdoc",
        "tags": [
          "PRIMARY",
          "ONTOLOGY"
        ],
        "title": "VDoc - ValOS document interchange specification",
        "abstract": {
          "rdf:type": "vdoc:Chapter",
          "vdoc:content": [
            "This document specifies VDoc, a ",
            {
              "rdf:type": "vdoc:Reference",
              "vdoc:content": [
                "a JSON-LD"
              ],
              "vdoc:ref": "https://www.w3.org/TR/json-ld11/"
            },
            "-based documentation human-machine-valospace interchange format."
          ]
        },
        "introduction": {
          "dc:title": "Introduction",
          "rdf:type": "vdoc:Chapter",
          "vdoc:content": [
            {
              "revdoc:dfn": "#vdoc",
              "vdoc:content": [
                {
                  "vdoc:strong": true,
                  "vdoc:content": [
                    {
                      "rdf:type": "vdoc:Reference",
                      "vdoc:content": [
                        "VDoc"
                      ],
                      "vdoc:ref": "#vdoc"
                    }
                  ]
                },
                " is an extensible JSON-LD interchange\n      specification for extracting documents from varying sources,\n      passing the now-machine-manipulable interchange document around\n      and subsequently producing documents of specific formats such\n      as Valospace resources, markdown, ReSpec HTML and browser and\n      ansi-colored console outputs."
              ]
            },
            null,
            "Motivation for this specification is to provide the foundation\n    for document ",
            {
              "rdf:type": "vdoc:Reference",
              "vdoc:content": [
                "Valospace hypertwins"
              ],
              "vdoc:ref": "@valos/hypertwin"
            },
            " by supporting the ValOS resources as an emission target. This\n    allows all kinds of documents to be accessible from within\n    Valospace with minimal additional tooling. This is not made\n    an explicit design goal unto itself; instead the design goals are\n    chosen to be generic in a way that satisfies this goal as the\n    original author believes this leads to better design."
          ]
        },
        "ontologyAbstract": {
          "vdoc:content": [
            "VDoc core ontology specifies the vocabulary for the human facing\n      document structure by means of primitives which are sufficiently\n      common and meaningful across all types of documents.\n      These primitives include constructs such as chapters, titles,\n      lists, tables, cross-references, etc.",
            "VDoc core ontology explicitly does not specify any semantic\n      meanings outside the document structure itself."
          ]
        },
        "package": "@valos/vdoc",
        "version": "0.35.0-prerelease.8"
      },
      "@valos/kernel": {
        "@id": "https://valospace.org/index",
        "tags": [
          "PRIMARY",
          "DOMAIN",
          "ONTOLOGY"
        ],
        "title": "@valos/kernel domain content reference",
        "abstract": {
          "rdf:type": "vdoc:Chapter",
          "vdoc:content": [
            "@valos/kernel domain ",
            "includes all core infrastructure components of ValOS - the Valaa Open System.",
            null,
            "These components are hosted at the ",
            {
              "rdf:type": "vdoc:Reference",
              "vdoc:content": [
                "npmjs repository within @valos namespace"
              ],
              "vdoc:ref": "https://www.npmjs.com/search?q=%40valos"
            },
            ".",
            null,
            "These components are developed at the ",
            {
              "rdf:type": "vdoc:Reference",
              "vdoc:content": [
                "valos git repository"
              ],
              "vdoc:ref": "https://github.com/valaatech/kernel"
            },
            "."
          ]
        },
        "introduction": {
          "rdf:type": "vdoc:Chapter",
          "vdoc:content": [
            "No content yet."
          ]
        },
        "ontologyAbstract": {
          "vdoc:content": [
            "@valos/kernel ontology provides vocabulary and definitions of\n      the ValOS core concepts."
          ]
        },
        "package": "@valos/kernel",
        "version": "0.35.0-prerelease.8"
      }
    },
    "workspaces": {
      "@id": "workspaces",
      "workshop": {
        "@valos/kernel": {
          "version": "0.35.0-prerelease.8",
          "description": "@valos/kernel domain workshop",
          "license": "MIT"
        }
      },
      "toolset": {
        "valma": {
          "version": "0.35.0-prerelease.8",
          "description": "A ValOS CLI tool for discovering and executing context-dependent command scripts",
          "license": "MIT"
        },
        "@valos/toolset-domain": {
          "version": "0.35.0-prerelease.8",
          "description": "ValOS Toolset for managing ValOS workspace domains",
          "license": "MIT"
        },
        "@valos/toolset-rest-api-gateway-plugin": {
          "version": "0.35.0-prerelease.8",
          "description": "A toolset for managing Structured ValOS REST API Gateway Plugin",
          "license": "MIT"
        },
        "@valos/toolset-revealer": {
          "version": "0.35.0-prerelease.8",
          "description": "Tools for building revelations both for development and deployment purposes",
          "license": "MIT"
        },
        "@valos/type-gateway-plugin": {
          "version": "0.35.0-prerelease.8",
          "description": "The ValOS type toolset for 'gateway-plugin' workspaces",
          "license": "MIT"
        },
        "@valos/type-opspace": {
          "version": "0.35.0-prerelease.8",
          "description": "The ValOS type toolset for opspace workspaces",
          "license": "MIT"
        },
        "@valos/type-vault": {
          "version": "0.35.0-prerelease.8",
          "description": "The ValOS type toolset for vault workspaces",
          "homepage": "https://valospace.org/type-vault",
          "license": "MIT"
        },
        "@valos/type-worker": {
          "version": "0.35.0-prerelease.8",
          "description": "The ValOS type toolset for worker workspaces",
          "license": "MIT"
        }
      },
      "library": {
        "@valos/engine": {
          "version": "0.35.0-prerelease.8",
          "description": "ValOS Engine API and Schema",
          "homepage": "https://valospace.org/engine",
          "license": "MIT"
        },
        "@valos/gateway-api": {
          "version": "0.35.0-prerelease.8",
          "description": "Minimal footprint ValOS Gateway API local forwards",
          "license": "MIT"
        },
        "@valos/hypertwin": {
          "version": "0.35.0-prerelease.8",
          "description": "ValOS Hypertwin Specifications and Tools Library",
          "license": "MIT"
        },
        "@valos/inspire": {
          "version": "0.35.0-prerelease.8",
          "description": "ValOS Inspire application gateway",
          "license": "MIT"
        },
        "@valos/raem": {
          "version": "0.35.0-prerelease.8",
          "description": "ValOS Resources And Events Model (ValOS-RAEM) API, schema and ontology",
          "homepage": "https://valospace.org/raem",
          "license": "MIT"
        },
        "@valos/script": {
          "version": "0.35.0-prerelease.8",
          "description": "ValOS Script API, schema",
          "license": "MIT"
        },
        "@valos/sourcerer": {
          "version": "0.35.0-prerelease.8",
          "description": "ValOS Sourcerer API, schema",
          "license": "MIT"
        },
        "@valos/tools": {
          "version": "0.35.0-prerelease.8",
          "description": "ValOS Tools API",
          "license": "MIT"
        }
      },
      "vdoc-extension": {
        "@valos/revdoc": {
          "version": "0.35.0-prerelease.8",
          "description": "ReVDoc - ReSpec document VDoc extension",
          "homepage": "https://valospace.org/revdoc",
          "license": "MIT"
        },
        "@valos/sbomdoc": {
          "version": "0.35.0-prerelease.8",
          "description": "SBoMDoc - Software Bill of Materials VDoc extension",
          "homepage": "https://valospace.org/sbomdoc",
          "license": "MIT"
        },
        "@valos/twindoc": {
          "version": "0.35.0-prerelease.8",
          "description": "TwinDoc - Valospace Hypertwin VDoc extension",
          "homepage": "https://valospace.org/twindoc",
          "license": "MIT"
        },
        "@valos/vdoc": {
          "version": "0.35.0-prerelease.8",
          "description": "VDoc - ValOS document interchange specification",
          "homepage": "https://valospace.org/vdoc",
          "license": "MIT"
        }
      }
    },
    "types": {
      "@id": "types",
      "gateway-plugin": {
        "disabled": "DISABLED",
        "explanation": ".disabled => Workspace is not a 'gateway-plugin' (is 'vault')",
        "description": "Initialize gateway-plugin workspace",
        "package": "@valos/kernel",
        "version": "0.35.0-prerelease.8",
        "introduction": "A gateway-plugin extends inspire and perspire gateways with various\ntypes of functionalities: new resources schemas, media decoders,\nprotocol schemes, external APIs, valosheath APIs, etc."
      },
      "library": {
        "disabled": "DISABLED",
        "explanation": ".disabled => Workspace is not a 'library' (is 'vault')",
        "description": "Initialize library workspace",
        "package": "@valos/kernel",
        "version": "0.35.0-prerelease.8",
        "introduction": "A library workspace contains arbitrary ES5 source code and exposes a\nAPI via package.json .main stanza (usually index.js).\n\nA library can provide convenience valma commands but unlike toolsets\na library cannot have workspace local configurations.\n\nLibrary workspaces are almost always published as a packages and\ntypically reside in \"packages/*\" vault workspace directory."
      },
      "opspace": {
        "disabled": "DISABLED",
        "explanation": ".disabled => Workspace is not an 'opspace' (is 'vault')",
        "description": "Initialize opspace workspace",
        "package": "@valos/kernel",
        "version": "0.35.0-prerelease.8",
        "introduction": "An opspaces workspace is used to for configuring, deploying, updating,\nmonitoring and diagnosing all types of live infrastructure resources.\n\nOpspaces rely heavily on various toolsets to get their job done.\nOpspaces rarily are published and packages and typically reside in\n\"opspaces/*\" vault workspace directory"
      },
      "tool": {
        "disabled": "DISABLED",
        "explanation": ".disabled => Workspace is not a 'tool' (is 'vault')",
        "description": "Initialize tool workspace",
        "package": "@valos/kernel",
        "version": "0.35.0-prerelease.8",
        "introduction": "Tools are a toolset implementation detail. A tool is similar to\na toolset in that it can have its own workspace specific\nconfigurations. A tool differs from a toolset in that it cannot be\nstandalone; it doesn't appear in listings, its always part of one or\nmore toolsets and its toolsets.json config stanzas are placed under\nits parent toolset stanzas.\n\nThe main case for tools and toolsets separation came from the release\ndeployment system of opspaces, where the modularity and granular\nsemantic versioning of tool packages allows for more efficient and\nrobust deployments.\n\nTool workspaces allows splitting complex toolsets into separate\ntools with different deployment logic. Infrastructure code which\nchanges rarily can be placed under tool packages with naive\ndeployment logic which relies on the tool package version number only.\nFrequently changing configs can be managed by the toolset workspace\nitself but even it can then use tool workspaces to source in\ncommands and other resources to help with the deployment management.\n\nAdditionally because the tool configuration is always inside its\nparent toolset config this allows the same tool be used by several\ndifferent toolsets in a single workspace. Because of this all tool\ncommands must have an option for '--toolset=<@scope/toolsetname>' which\nuses yargs.vlm.toolset as its default value."
      },
      "toolset": {
        "disabled": "DISABLED",
        "explanation": ".disabled => Workspace is not a 'toolset' (is 'vault')",
        "description": "Initialize toolset workspace",
        "package": "@valos/kernel",
        "version": "0.35.0-prerelease.8",
        "introduction": "A toolset workspace can be 'selected' by another workspace so that:\n1. The toolset is added as a devDependency to the target workspace,\n2. A configuration section is added for the toolset in the target\n   workspace root 'toolsets.json'\n\nThis makes all valma scripts of the toolset available for the target\nworkspace and allows these commands to easily access and manipulate\ntheir local configuration in the target workspace."
      },
      "vault": {
        "description": "Initialize vault workspace",
        "package": "@valos/kernel",
        "version": "0.35.0-prerelease.8",
        "introduction": "A vault is a monorepository which contains multiple workspaces of\nvarious types. Vaults are used to group packages with high cohesion\ntogether so that typical feature development, testing and deployment\nworkflows can be done within a single repository when feasible."
      },
      "vdoc-extension": {
        "disabled": "DISABLED",
        "explanation": ".disabled => Workspace is not a 'vdoc-extension' (is 'vault')",
        "description": "Initialize vdoc-extension workspace",
        "package": "@valos/kernel",
        "version": "0.35.0-prerelease.8",
        "introduction": "A vdoc-extension workspace contains the extension specification and\nsupporting libraries for a VDoc extension. It inherits library\nworkspace characteristics but has a specific structure and initial\ntemplates which is useful for VDoc extensions in specific.\n"
      },
      "worker": {
        "disabled": "DISABLED",
        "explanation": ".disabled => Workspace is not a 'worker' (is 'vault')",
        "description": "Initialize worker workspace",
        "package": "@valos/kernel",
        "version": "0.35.0-prerelease.8",
        "introduction": "A worker workspace is used to launch and manage a particular service\nprocess. The workspace files contain configuration and data used by the\nprocess. This data can include even dynamic runtime data.\n\nA worker workspace is fully agnostic to version control solutions:\n- script-generated workers, where worker is locally spawned by scripts\n- clone-and-forget workers, where worker is cloned from a versioned\n  upstream repository, has its configuration locally customized and\n  local content potentially overridden. No further download sync is\n  expected nor will workers push updates back upstream. Each clone\n  represents its own computation.\n- synchronized workers, where the versioned repository itself\n  represents the worker process. Worker workspace shards (there can be\n  many if the computation is parallelizable) are still cloned from the\n  versioned upstream. Unlike with clone-and-forget workers the\n  synchronized worker workspaces keep themselves in sync with\n  upstream configuration and data changes and adjust their computation\n  accordingly.\n  Sync workers shards can even push results back to the versioned\n  repository if appropriate."
      },
      "workshop": {
        "disabled": "DISABLED",
        "explanation": ".disabled => Workspace is not a 'workshop' (is 'vault')",
        "description": "Initialize workshop workspace",
        "package": "@valos/kernel",
        "version": "0.35.0-prerelease.8",
        "introduction": "A workshop package provides a set of valma commands for defining and\nmanaging a ValOS domain. The workshops then:\n1. shall provide domain package (de)registration via\n   .configure/.<domain>/{,de}register-package\n2. can provide new workspace types via .configure/.type/*\n3. can provide new toolsets via\n   .configure/{,.type/.<type>/,.domain/.<domain>/}.toolset/**/*\n\nNotably the package (de)registration should provide means for any new\ndomain toolset packages to request the addition of their toolset\nconfigure command to the domain workshop.\nIdiomatic way to implement this is a workshop command which issues a PR\nagainst the source control repository of the workshop package."
      }
    },
    "toolsets": {
      "@id": "toolsets",
      "@valos/toolset-domain": {
        "description": "Select and configure 'toolset-domain' for the current vault or workshop workspace",
        "package": "@valos/kernel",
        "version": "0.35.0-prerelease.8",
        "introduction": "This workspace type provides configuration template and commands for\nmanaging a ValOS domain.\n\nThe toolset 'toolset-domain' is selectable by 'vault', 'workshop' workspaces."
      },
      "@valos/toolset-rest-api-gateway-plugin": {
        "disabled": "DISABLED",
        "explanation": ".disabled => Workspace is not a worker (is vault)",
        "description": "Select the toolset 'toolset-rest-api-gateway-plugin'",
        "package": "@valos/kernel",
        "version": "0.35.0-prerelease.8",
        "introduction": "This toolset extends a perspire worker workspaces with REST-style\nconfigurable and extensible web service plugin."
      },
      "@valos/toolset-revealer": {
        "description": "Select the toolset 'toolset-revealer'",
        "package": "@valos/kernel",
        "version": "0.35.0-prerelease.8",
        "introduction": "This toolset enables valma command 'rouse-revealer' for deploying a\nlocal dev environment for inspire gateway revelations.\n\nSets up the webpack entry and output config as webpack.config.js in\nthe workspace root, which combines shared revealer config from\n@valos/toolset-revealer/shared/webpack.config.js, local toolset config\nand any customizations in the root webpack.config.js itself."
      },
      "@valos/type-vault/enable-babel": {
        "disabled": "DISABLED",
        "explanation": ".disabled => Workspace is not a library (is vault)",
        "description": "Select the workspace to be transpiled using vault babel.config.js",
        "package": "@valos/type-vault",
        "version": "0.35.0-prerelease.8",
        "introduction": "This toolset enables babel transpilation for a library workspace\nwhen 'vlm assemble-packages' is executed in the surrounding vault\nworkspace."
      }
    },
    "tools": {
      "@id": "tools",
      "@valos/toolset-domain#summary": {
        "description": "Select domain summary revdoc generation tool for a vault workspace",
        "package": "@valos/toolset-domain",
        "version": "0.35.0-prerelease.8",
        "introduction": "This toolset-domain tool enables the (re)generation of docs/index.html\ndomain summary revdoc document."
      },
      "@valos/type-vault#docs": {
        "description": "Select vault /docs generation tool",
        "package": "@valos/type-vault",
        "version": "0.35.0-prerelease.8",
        "introduction": "This type-vault tool provides commands for (re)generating the /docs\nfolder from document sources present in the local workspaces, notably\nall revdoc documents matching pattern '*.revdoc.js'.\nAdditionally this tool can be configured to regenerate all docs on\n(pre)release time."
      }
    },
    "commands": {
      "@id": "commands",
      "generate-domain-summary": {
        "description": "Generate the domain components summary file for the domain root revdoc",
        "package": "@valos/toolset-domain",
        "version": "0.35.0-prerelease.8",
        "introduction": ""
      },
      "compose-revelation": {
        "description": "Compose revealer bundles based on the revealer toolset config",
        "package": "@valos/toolset-revealer",
        "version": "0.35.0-prerelease.8",
        "introduction": ""
      },
      "rouse-revealer": {
        "description": "Launch a webpack-dev-server at localhost serving a local revelation",
        "package": "@valos/toolset-revealer",
        "version": "0.35.0-prerelease.8",
        "introduction": "The revelation consists of two parts: webpack output and static files.\nWebpack output is configured by the project root webpack.config.js and\nthe static files are served from --content-base. If this --content-base\ndoesn't exist it is created by copying all files from the directory(s)\nprovided by --content-source."
      },
      "build-release": {
        "description": "Build all toolset sub-releases which have source modifications",
        "package": "@valos/type-opspace",
        "version": "0.35.0-prerelease.8",
        "introduction": "The sub-releases are placed under the provided dist target path.\n\nThis command is first part of the two-part deployment with\ndeploy-release making the actual deployment."
      },
      "deploy-release": {
        "description": "Deploy previously built releases to their deployment targets",
        "package": "@valos/type-opspace",
        "version": "0.35.0-prerelease.8",
        "introduction": "This command is second part of the two-part deployment with\nbuild-release building the release."
      },
      "assemble-packages": {
        "description": "Assemble all current modified vault packages (preparing for publish)",
        "package": "@valos/type-vault",
        "version": "0.35.0-prerelease.8",
        "introduction": "Uses lerna to handle the monorepo sub-packages update detection,\nversioning, and git interactions. Configuration for lerna is in\nlerna.json: notably the version increase semantics is configured there.\n\nLerna is not used for constructing the actual packages. This is done by\na flat recursive cp to the target at the moment.\n\nInvokes babel for all projects with babel.config.js in their root. If\nthe vault has a shared babel.config.js for all packages, a symlink from\nthis root to each project should be created.\n\nWhen assembling lerna will automatically update the shared version for\nall packages and their cross-dependencies and make a git commit and git\ntag for the new version.\nThis behaviour can be omitted with --no-versioning.\n\n  Iterative development with yalc and publish-packages:\n\nOnce a set of packages has been been built to the target, run:\n\n'vlm publish-packages --publisher=yalc'\n\nThis will make the package assemblies available in a local yalc\n'registry'; see https://github.com/whitecolor/yalc for more details on\nhow to use such packages by other depending packages. Reassembling\nand pushing those changes through yalc to dependents can be done with:\n\n'vlm assemble-packages --reassemble --post-execute=\"cd $ASSEMBLY_TARGET && yalc push --no-sig\"'\n\nThis allows packages to be developed iteratively locally while having\nother packages depend and be tested against them.\n"
      },
      "clean-vault": {
        "description": "Clean various more or less transient vault files and subdirectories",
        "package": "@valos/type-vault",
        "version": "0.35.0-prerelease.8",
        "introduction": "By default the three elements installed by 'yarn install' are cleaned:\n1. workspace packages by 'lerna clean --yes'\n2. yalc local dependencies by 'yalc remove --all'\n3. vault root node_modules by 'rm -rf'\n\nIn addition, dist/ can be removed with --dist in preparation for a clean slate publish/deploy ops.\nBe mindful that all of dist/ will be removed.\nyarn.lock can be removed with --yarn in preparation for persisted dependency updates."
      },
      "create-revdoc": {
        "description": "Create a revdoc source code file",
        "package": "@valos/type-vault",
        "version": "0.35.0-prerelease.8",
        "introduction": ""
      },
      "release-vault": {
        "description": "Prepare, commit and potentially publish a new release of vault packages",
        "package": "@valos/type-vault",
        "version": "0.35.0-prerelease.8",
        "introduction": "Create a new release/prerelease branch or extend an existing one\nbased on given options and current environment.\n\nPrepares the release by first running sanity checks, then cleaning and\nreinstalling intermediate files like node_modules, yarn workspaces,\nyarn.lock and dist/ and finally requires all test suites and lint to\npass without errors.\n\nOnce preparation is done creates a new release commit and tag using\n'lerna version'.\n\nIf --publish is not explicitly given then the final publish step must\nbe manually performed. In this case a pre-publish phase is done which\nprepares the manual publish command instructions in the results output.\n\nWill invoke valma command hooks between stages as per:\n1. 'vlm .release-vault/.prepared-hooks/{**/,}* --summary=<obj>' after successful preparation\n2. 'vlm .release-vault/.committed-hooks/{**/,}* --summary=<obj>' after successful commit\n3. 'vlm .release-vault/.pre-published-hooks/{**/,}* --summary=<obj>' after successful pre-publish\n4. 'vlm .release-vault/.published-hooks/{**/,}* --summary=<obj>' after successful publish\n"
      },
      "publish-packages": {
        "description": "Publish package assemblies to their registries",
        "package": "@valos/type-vault",
        "version": "0.35.0-prerelease.8",
        "introduction": ""
      },
      "regenerate-docs": {
        "description": "Regenerate all configured /docs content",
        "package": "@valos/type-vault",
        "version": "0.35.0-prerelease.8",
        "introduction": ""
      },
      "perspire": {
        "description": "Launch a headless worker gateway for persistent virtual DOM ValOS computation",
        "package": "@valos/type-worker",
        "version": "0.35.0-prerelease.8",
        "introduction": ""
      },
      "configure": {
        "description": "Configure the current ValOS workspace and its toolsets",
        "package": "valma",
        "version": "0.35.0-prerelease.8",
        "introduction": "Allows grabbing and stowing of available toolsets and their tools and\nthen invokes all in-use toolset configure commands."
      },
      "create-command": {
        "description": "Create and possibly export a new valma command script",
        "package": "valma",
        "version": "0.35.0-prerelease.8",
        "introduction": "The new command is created as a local valma.bin/ command with the\nsource file in valma/, making it the highest priority command and\nimmediately available.\nWith --import a existing exported script is copied for local editing\nand development."
      },
      "status": {
        "description": "Display the status of the current workspace",
        "package": "valma",
        "version": "0.35.0-prerelease.8",
        "introduction": "If toolsetGlob is specified the status is limited to status scripts\nmatching '.status/*{toolsetGlob}*/**/*', otherwise all status scripts\nby '.status/**/*' are used."
      },
      "$": {
        "description": "Execute a non-valma command within valma context interactively",
        "package": "valma",
        "version": "0.35.0-prerelease.8",
        "introduction": "Execute a non-valma command within valma context interactively.\n\nThis is the command line shim to valma script vlm.interact.\nLike 'npx -c' it executes a regular command exported by some package\ndependency to the node_modules/.bin/ folder.\n\nUnlike 'npx' which only searches the current directory and the global\ncache '$' prepends all available valma pools to env.PATH, innermost\npool first.\n"
      },
      "init": {
        "disabled": "DISABLED",
        "explanation": ".disabled => Already initialized (package.json:valos section exists)",
        "description": "Initialize the current directory as a ValOS workspace from scratch",
        "package": "valma",
        "version": "0.35.0-prerelease.8",
        "introduction": "This command will interactively walk through the process of creating\nand configuring a new valma workspace in the current working directory\nfrom scratch.\n\nValma init has following interactive phases:\n1. Initialization of package.json via 'yarn init'\n2. Configuration of workspace valos.type and .domain via 'vlm .configure/.valos-stanza'\n3. Addition of new known workshops via 'yarn add -W --dev'\n4. Selection of in-use toolsets from available toolsets via 'vlm .configure/.select-toolsets'\n5. Configuration of in-use toolsets and tools via 'vlm configure'"
      }
    },
    "prefixes": {
      "@id": "prefixes",
      "dc": "http://purl.org/dc/elements/1.1/",
      "owl": "http://www.w3.org/2002/07/owl#",
      "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
      "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
      "valos": "https://valospace.org/#",
      "vdoc": "https://valospace.org/vdoc#"
    },
    "vocabulary": {
      "@id": "vocabulary",
      "@context": {
        "dc": "http://purl.org/dc/elements/1.1/",
        "owl": "http://www.w3.org/2002/07/owl#",
        "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
        "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
        "a": "rdf:type",
        "valos": "https://valospace.org/#",
        "@base": "https://valospace.org/#",
        "valos:propertyRestriction": {
          "@reverse": "owl:onProperty"
        }
      },
      "Class": {
        "rdf:type": "valos:Class",
        "rdfs:subClassOf": "rdfs:Class",
        "rdfs:comment": "The class of classes which are specified by the ValOS kernel ontology."
      },
      "Property": {
        "rdf:type": "valos:Class",
        "rdfs:subClassOf": "rdf:Property",
        "rdfs:comment": "The class of properties which are specified by the ValOS kernel ontology."
      },
      "Type": {
        "rdf:type": "valos:Class",
        "rdfs:subClassOf": "rdfs:Class",
        "rdfs:comment": "The class of all valospace type classes."
      },
      "Field": {
        "rdf:type": "valos:Class",
        "rdfs:subClassOf": "rdf:Property",
        "rdfs:comment": "The class of properties with custom semantics inside valospace.\nInstances of this class are called valos fields."
      },
      "PrimaryField": {
        "rdf:type": "valos:Class",
        "rdfs:subClassOf": "valos:Field",
        "rdfs:comment": "The class of valos fields which are primary, persisted sources of\ntruth and have both a state representation inside valospace and a\nchange representation in event logs."
      },
      "TransientField": {
        "rdf:type": "valos:Class",
        "rdfs:subClassOf": "valos:Field",
        "rdfs:comment": "The class of valos fields which have primary state representations\ninside valospace but which have only inferred representation in event\nlogs."
      },
      "InferredField": {
        "rdf:type": "valos:Class",
        "rdfs:subClassOf": "valos:Field",
        "rdfs:comment": "The class of valos fields with inference semantics which specify how\nnew triples with the inferred field as a predicate can be inferred\nfrom existing triples."
      },
      "GeneratedField": {
        "rdf:type": "valos:Class",
        "rdfs:subClassOf": "valos:InferredField",
        "rdfs:comment": "The class of inferred fields where a field is associated with a\n'generator', a convergent procedural rule like taking an average or\nretrieving the partition of a valos Resource. As convergent rules a\nGeneratedField's can't have mutation semantics that could be reliably\ntranslated back to mutations of other triples."
      },
      "generator": {
        "rdf:type": "valos:Property",
        "rdfs:domain": "valos:GeneratedField",
        "rdfs:range": "rdfs:Resource",
        "rdfs:comment": "The generator algorithm specification or identifier of\na GeneratedField."
      },
      "AliasField": {
        "rdf:type": "valos:Class",
        "rdfs:subClassOf": "valos:InferredField",
        "rdfs:comment": "The class of inferred fields called alias fields where each such field\nhas an 'aliasOf' RDF property or valos Field. Alias fields are\nmutation-inference symmetric so that triples with an alias field as\npredicate are inferred from triples with aliasOf as predicate and\nmutations with an alias field as predicate are translated to use\nthe aliasOf as predicate."
      },
      "aliasOf": {
        "rdf:type": "valos:Property",
        "rdfs:domain": "valos:AliasField",
        "rdfs:range": "valos:Field",
        "rdfs:comment": "The alias target property specifies the inference source and mutation\ntarget of an alias field."
      },
      "coupledField": {
        "rdf:type": "valos:Property",
        "rdfs:domain": "valos:Field",
        "rdfs:range": "xsd:string",
        "rdfs:comment": ""
      },
      "defaultCoupledField": {
        "rdf:type": "valos:Property",
        "rdfs:domain": "valos:Field",
        "rdfs:range": "xsd:string",
        "rdfs:comment": ""
      },
      "isOwned": {
        "rdf:type": "valos:Property",
        "rdfs:domain": "valos:Field",
        "rdfs:range": "xsd:boolean",
        "rdfs:comment": "This field owns the targeted resource. If the subject of this field\nis destroyed the targeted resource will be cascade destroyed."
      },
      "isOwning": {
        "rdf:type": "valos:Property",
        "rdfs:domain": "valos:Field",
        "rdfs:range": "xsd:boolean",
        "rdfs:comment": "This field is a coupled field of an owning field. If the owning field\nis destroyed this resource will be be cascade destroyed."
      },
      "isDuplicateable": {
        "rdf:type": "valos:Property",
        "rdfs:domain": "valos:Field",
        "rdfs:range": "xsd:boolean",
        "rdfs:comment": "If set to false this field not be visible for DUPLICATED class of\nevents."
      },
      "immediateDefaultValue": {
        "rdf:type": "valos:Property",
        "rdfs:domain": "valos:Field",
        "rdfs:range": "rdfs:Resource",
        "rdfs:comment": "The immediate default value for a field when the field doesn't have\nan own value, ie. bypassing prototype lookups."
      },
      "allowTransientFieldToBeSingular": {
        "rdf:type": "valos:Property",
        "rdfs:domain": "valos:Field",
        "rdfs:range": "xsd:boolean",
        "rdfs:comment": "Bypass the default behavior which forces transient fields to be plural\nto allow for singular fields."
      },
      "Bvob": {
        "rdf:type": "valos:Type",
        "rdfs:subClassOf": "valos:Resource",
        "rdfs:comment": "Bvob (Binary ValOS OBject) specifies a class of valos resources which\nhave a valid base64-url encoded 240-bit SHAKE256 hash of some\noctet-stream content prefixed with \"hashV240:\" as their resource id."
      },
      "id": {
        "rdf:type": "valos:GeneratedField",
        "rdfs:domain": "valos:TransientFields",
        "rdfs:range": "rdfs:Resource",
        "valos:propertyRestriction": {
          "rdf:type": "owl:Restriction",
          "owl:cardinality": 1
        },
        "valos:generator": "getId",
        "rdfs:comment": "VRL of this Resource"
      },
      "contentHash": {
        "rdf:type": "valos:GeneratedField",
        "rdfs:domain": "valos:Bvob",
        "rdfs:range": "xsd:string",
        "valos:propertyRestriction": {
          "rdf:type": "owl:Restriction",
          "owl:cardinality": 1
        },
        "valos:generator": "$V.id.rawId()",
        "rdfs:comment": "The content has of this Bvob"
      },
      "contentReferrers": {
        "rdf:type": "valos:TransientField",
        "rdfs:domain": "valos:Bvob",
        "rdfs:range": "valos:Resource",
        "valos:defaultCoupledField": "valos:content",
        "rdfs:comment": "Incoming references to this Bvob"
      },
      "TransientFields": {
        "rdf:type": "valos:Type",
        "rdfs:comment": "The class of valos resources which are referenced from within this\nworld and also the domain of all transient and generated fields which\nare available even for the inactive, out-of-this-world resources."
      },
      "rawId": {
        "rdf:type": "valos:GeneratedField",
        "rdfs:domain": "valos:TransientFields",
        "rdfs:range": "xsd:string",
        "valos:propertyRestriction": {
          "rdf:type": "owl:Restriction",
          "owl:cardinality": 1
        },
        "valos:generator": "getRawId",
        "rdfs:comment": "Globally unique identifier of this Resource"
      },
      "typeName": {
        "rdf:type": "valos:GeneratedField",
        "rdfs:domain": "valos:TransientFields",
        "rdfs:range": "xsd:string",
        "valos:propertyRestriction": {
          "rdf:type": "owl:Restriction",
          "owl:cardinality": 1
        },
        "valos:generator": "getTransientTypeName",
        "rdfs:comment": "Globally unique identifier of this Resource"
      },
      "partition": {
        "rdf:type": "valos:GeneratedField",
        "rdfs:domain": "valos:TransientFields",
        "rdfs:range": "valos:Partition",
        "valos:propertyRestriction": {
          "rdf:type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos:generator": "partitionResolver",
        "rdfs:comment": "The partition root Resource of this Resource, ie. the nearest owner\n(possibly self) which is also an active partition."
      },
      "partitionIRI": {
        "rdf:type": "valos:GeneratedField",
        "rdfs:domain": "valos:TransientFields",
        "rdfs:range": "rdfs:Resource",
        "valos:propertyRestriction": {
          "rdf:type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos:generator": "partitionURIResolver",
        "rdfs:comment": "The partition IRI of the partition this Resource belongs to."
      },
      "partitionURI": {
        "rdf:type": "valos:AliasField",
        "valos:aliasOf": "valos:partitionIRI",
        "rdfs:subPropertyOf": "valos:partitionIRI",
        "rdfs:domain": "valos:TransientFields",
        "rdfs:range": "rdfs:Resource",
        "valos:propertyRestriction": {
          "rdf:type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "revdoc:deprecatedInFavorOf": "valos:authorityIRI"
      },
      "prototype": {
        "rdf:type": "valos:PrimaryField",
        "rdfs:domain": "valos:TransientFields",
        "rdfs:range": "valos:TransientFields",
        "valos:propertyRestriction": {
          "rdf:type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos:defaultCoupledField": "valos:prototypers",
        "rdfs:comment": "The prototype of this Resource. All field lookups for which there is\nno associated value set and whose field descriptors don't have\nimmediateDefaultValue are forwarded to the prototype."
      },
      "prototypeAlias": {
        "rdf:type": "valos:AliasField",
        "valos:aliasOf": "valos:prototype",
        "rdfs:subPropertyOf": "valos:prototype",
        "rdfs:domain": "valos:TransientFields",
        "rdfs:range": "valos:TransientFields",
        "valos:propertyRestriction": {
          "rdf:type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "rdfs:comment": "The prototype of this Resource.\nThis is an alias for valos:prototype to bypass conflicts with native\njavascript property 'prototype'."
      },
      "ownFields": {
        "rdf:type": "valos:GeneratedField",
        "rdfs:domain": "valos:TransientFields",
        "rdfs:range": "valos:TransientFields",
        "valos:propertyRestriction": {
          "rdf:type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos:generator": "resolveOwnFields",
        "rdfs:comment": "A transient version of this object as if prototype was undefined.\nAll property accesses will only return field values which are directly\nowned by this resource."
      },
      "prototypers": {
        "rdf:type": "valos:TransientField",
        "rdfs:domain": "valos:TransientFields",
        "rdfs:range": "valos:TransientFields",
        "valos:coupledField": "valos:prototype",
        "valos:preventsDestroy": true,
        "valos:immediateDefaultValue": [],
        "rdfs:comment": "All resources which have this Resource as valos:prototype but not as\nvalos:instancePrototype nor as valos:ghostPrototype."
      },
      "instancePrototype": {
        "rdf:type": "valos:AliasField",
        "valos:aliasOf": "valos:prototype",
        "rdfs:subPropertyOf": "valos:prototype",
        "rdfs:domain": "valos:TransientFields",
        "rdfs:range": "valos:TransientFields",
        "valos:propertyRestriction": {
          "rdf:type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos:coupledField": "valos:instances",
        "rdfs:comment": "The instance prototype of this instance Resource."
      },
      "instances": {
        "rdf:type": "valos:TransientField",
        "rdfs:domain": "valos:TransientFields",
        "rdfs:range": "valos:TransientFields",
        "valos:coupledField": "valos:prototype",
        "valos:preventsDestroy": true,
        "valos:immediateDefaultValue": [],
        "rdfs:comment": "All resources which have this Resource as their\nvalos:instancePrototype."
      },
      "ghostPrototype": {
        "rdf:type": "valos:AliasField",
        "valos:aliasOf": "valos:prototype",
        "rdfs:subPropertyOf": "valos:prototype",
        "rdfs:domain": "valos:TransientFields",
        "rdfs:range": "valos:TransientFields",
        "valos:propertyRestriction": {
          "rdf:type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos:coupledField": "valos:materializedGhosts",
        "rdfs:comment": "Ghost prototype of this ghost resource. The ghost prototype is the\nbase resource from which this ghost was created during some primary\ninstantiation.\nThis instantiation (which happens on prototype and results in an\ninstance of it) also ghost-instantiates all the direct and indirect\nownlings of the prototype as ghost ownlings in the instance. The\ninstance is called the *ghost host* of all these ghosts. Likewise, the\ninstance prototype is called the ghost host prototype, and the\n(grand-)ownlings of this ghost host prototype are the ghost prototypes\nof the corresponding ghosts (ie. this field).} ."
      },
      "materializedGhosts": {
        "rdf:type": "valos:TransientField",
        "rdfs:domain": "valos:TransientFields",
        "rdfs:range": "valos:TransientFields",
        "valos:coupledField": "valos:prototype",
        "valos:preventsDestroy": true,
        "valos:immediateDefaultValue": [],
        "rdfs:comment": "All materialized ghosts which have this Resource as their\nvalos:ghostPrototype."
      },
      "unnamedCouplings": {
        "rdf:type": "valos:TransientField",
        "rdfs:domain": "valos:TransientField",
        "rdfs:range": "valos:TransientField",
        "valos:coupledField": "",
        "valos:isOwning": true,
        "rdfs:comment": "Referrers with a missing coupledField referring this Resource"
      },
      "ghostHost": {
        "rdf:type": "valos:GeneratedField",
        "rdfs:domain": "valos:TransientFields",
        "rdfs:range": "valos:TransientFields",
        "valos:propertyRestriction": {
          "rdf:type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos:generator": "ghostHostResolver",
        "rdfs:comment": "The ghost host of this ghost Resource or null if not a ghost. The\nghost host is the innermost direct or indirect non-ghost owner of this\nghost, or in other words the instance that indirectly created this\nghost."
      },
      "ghostOwner": {
        "rdf:type": "valos:TransientField",
        "rdfs:domain": "valos:TransientFields",
        "rdfs:range": "valos:TransientFields",
        "valos:propertyRestriction": {
          "rdf:type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos:coupledField": "valos:ghostOwnlings",
        "valos:isOwned": true,
        "valos:immediateDefaultValue": null,
        "valos:allowTransientFieldToBeSingular": true,
        "rdfs:comment": "Refers to the ghost host of this ghost resource if this ghost is\nmaterialized, otherwise null.\nNote that materialized grand-ownling ghosts will have a differing owner\nand ghostOwner and that destruction of either of them will result in\nimmaterialization of the grand-ownling ghost."
      },
      "ghostOwnlings": {
        "rdf:type": "valos:TransientField",
        "rdfs:domain": "valos:TransientFields",
        "rdfs:range": "valos:TransientFields",
        "valos:isOwning": true,
        "valos:coupledField": "valos:ghostOwner",
        "valos:immediateDefaultValue": [],
        "rdfs:comment": "Materialized ghost Resource's which have this instance as their ghost\nhost."
      },
      "Resource": {
        "rdf:type": "valos:Type",
        "rdfs:subClassOf": "valos:TransientFields",
        "revdoc:brief": "resource",
        "rdfs:comment": "A first-class object with fields and properties that can be directly\ncreated and mutated using events in associated partition event logs.\nResources have an identity and can be destroyed, subsequently\ndestroying all resources which are in the ownership hierarchy of this\nResource."
      },
      "owner": {
        "rdf:type": "valos:PrimaryField",
        "rdfs:domain": "valos:Resource",
        "rdfs:range": "valos:Resource",
        "valos:propertyRestriction": {
          "rdf:type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos:isOwned": true,
        "valos:defaultCoupledField": "valos:ownlings",
        "rdfs:comment": "The owner of this Resource"
      },
      "name": {
        "rdf:type": "valos:PrimaryField",
        "rdfs:domain": "valos:Resource",
        "rdfs:range": "xsd:string",
        "valos:propertyRestriction": {
          "rdf:type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "rdfs:comment": "The primary ValOS name of this Resource. It is globally non-unique but\noften context-dependently unique."
      },
      "nameAlias": {
        "rdf:type": "valos:AliasField",
        "valos:aliasOf": "valos:name",
        "rdfs:subPropertyOf": "valos:name",
        "rdfs:domain": "valos:Resource",
        "rdfs:range": "xsd:string",
        "valos:propertyRestriction": {
          "rdf:type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "rdfs:comment": "The primary name of this Resource. It is globally non-unique but often\ncontext-dependently unique.\nThis is an alias of Resource.name for circumventing conflicts with the\nnative javascript property 'name' in some execution contexts"
      },
      "ownlings": {
        "rdf:type": "valos:PrimaryField",
        "rdfs:domain": "valos:Resource",
        "rdfs:range": "valos:Resource",
        "valos:isOwning": true,
        "valos:coupledField": "valos:owner",
        "rdfs:comment": "Collection of all the resources owned by this Resource via all\nproperties that are marked as valos:isOwning."
      },
      "unnamedOwnlings": {
        "rdf:type": "valos:PrimaryField",
        "rdfs:subPropertyOf": "valos:ownlings",
        "rdfs:domain": "valos:Resource",
        "rdfs:range": "valos:Resource",
        "valos:isOwning": true,
        "valos:coupledField": "valos:owner",
        "rdfs:comment": "All the resources owned by this Resource which are not part of another\nnamed owning property"
      },
      "isFrozen": {
        "rdf:type": "valos:PrimaryField",
        "rdfs:domain": "valos:Resource",
        "rdfs:range": "xsd:boolean",
        "valos:propertyRestriction": {
          "rdf:type": "owl:Restriction",
          "owl:cardinality": 1
        },
        "valos:isDuplicateable": false,
        "valos:immediateDefaultValue": false,
        "rdfs:comment": "Indicates whether this Resource is frozen. A frozen Resource nor any\nof its ownlings cannot have any of their primary fields be modified.\nSetting isFrozen to true is (by design) an irreversible operation.\nIf this Resource is also the root resource of a partition the whole\npartition is permanently frozen."
      },
      "InactiveResource": {
        "rdf:type": "valos:Type",
        "rdfs:subClassOf": "valos:TransientFields",
        "revdoc:brief": "inactive resource",
        "rdfs:comment": "An InactiveResource is a Resource whose partition has not yet been\nfully loaded, and has only the limited set of fields of TransientFields\navailable. The transition from InactiveResource to and from other\nconcrete Resource types is the only possible runtime type change and\nhappens dynamically based on the partition activation and inactivation."
      },
      "DestroyedResource": {
        "rdf:type": "valos:Type",
        "rdfs:subClassOf": "valos:TransientFields",
        "revdoc:brief:": "destroyed resource",
        "rdfs:comment": "A DestroyedResource is a Resource which has been destroyed and only\nprovides the external fields listed in TransientFields interface."
      },
      "Partition": {
        "rdf:type": "valos:Type",
        "rdfs:subClassOf": "valos:Resource",
        "revdoc:brief": "partition",
        "rdfs:comment": "A Partition is a subdivision of the whole ValOS object space into\nsmaller recursive wholes. The Partition implementation contains\nResource's either by direct or transitive ownership. Each such\ncontained Resource also knows their containing Partition.\n\nTODO(iridian, 2019-08): Update outdated terminology in this comment.\n\nIn addition to the few direct member fields relating to snapshotting\nand event stream synchronization, the Partition Resource's serve as\na key latching point for external services.\n\nEach Partition object is managed by an authority, which performs\nconflict resolution, authorization and recording of incoming commands,\nconverting them into the truth event log for that particular Partition.\n\nThe Partition id is used by the query routers to globally locate the\nauthority responsible for any given Partition. Also, cross-partition\nResource references are implemented as Resource stubs, ie. objects that\nonly contain the Resource id and its most recently known partition\n(which will retain the new owning Partition in a stub, enabling\nforwarding). Together these allow for any Resource to always be\nlocateable from anywhere."
      },
      "authorityIRI": {
        "rdf:type": "valos:PrimaryField",
        "rdfs:domain": "valos:Partition",
        "rdfs:range": "xsd:string",
        "valos:propertyRestriction": {
          "rdf:type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "valos:isDuplicateable": false,
        "valos:immediateDefaultValue": null,
        "rdfs:comment": "The authority IRI of this Resource. If this field is set it means that\nthis is an active partition root object. The partition IRI is generated\nas per the rules specified by the authority IRI schema."
      },
      "partitionAuthorityURI": {
        "rdf:type": "valos:AliasField",
        "valos:aliasOf": "valos:authorityIRI",
        "rdfs:subPropertyOf": "valos:authorityIRI",
        "rdfs:domain": "valos:Partition",
        "rdfs:range": "xsd:string",
        "valos:propertyRestriction": {
          "rdf:type": "owl:Restriction",
          "owl:maxCardinality": 1
        },
        "revdoc:deprecatedInFavorOf": "valos:authorityIRI"
      }
    },
    "context": {
      "@id": "context",
      "a": {
        "@id": "rdf:type",
        "@type": "@id"
      }
    },
    "abstract": {
      "@id": "abstract",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        "@valos/kernel domain ",
        "includes all core infrastructure components of ValOS - the Valaa Open System.",
        null,
        "These components are hosted at the ",
        {
          "rdf:type": "vdoc:Reference",
          "vdoc:content": [
            "npmjs repository within @valos namespace"
          ],
          "vdoc:ref": "https://www.npmjs.com/search?q=%40valos"
        },
        ".",
        null,
        "These components are developed at the ",
        {
          "rdf:type": "vdoc:Reference",
          "vdoc:content": [
            "valos git repository"
          ],
          "vdoc:ref": "https://github.com/valaatech/kernel"
        },
        "."
      ]
    },
    "sotd": {
      "@id": "sotd",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        "This document is part of the vault workspace ",
        {
          "rdf:type": "revdoc:Package",
          "vdoc:content": [
            {
              "vdoc:em": true,
              "vdoc:content": [
                "@valos/kernel"
              ]
            }
          ],
          "vdoc:ref": "@valos/kernel"
        },
        " (of domain ",
        {
          "rdf:type": "revdoc:Package",
          "vdoc:content": [
            {
              "vdoc:em": true,
              "vdoc:content": [
                "@valos/kernel"
              ]
            }
          ],
          "vdoc:ref": "@valos/kernel"
        },
        ") which is ",
        "ValOS common infrastructure tools and libraries monorepo."
      ]
    },
    "introduction": {
      "@id": "introduction",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        "No content yet."
      ]
    },
    "section_documentation": {
      "@id": "section_documentation",
      "dc:title": "Documentation",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        "This domain provides the following primary documents:",
        {
          "@id": "section_introduction_documents"
        },
        {
          "@id": "section_api_reference_documents"
        },
        {
          "@id": "section_ontology_documents"
        },
        {
          "@id": "section_other_primary_documents"
        }
      ]
    },
    "section_introduction_documents": {
      "@id": "section_introduction_documents",
      "dc:title": "Introduction documents",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "vdoc:lookup": "documents",
          "rdf:type": "vdoc:Table",
          "vdoc:headers": {
            "vdoc:entries": [
              {
                "rdf:type": "vdoc:Header",
                "vdoc:cell": {
                  "vdoc:strong": true,
                  "vdoc:content": [
                    {
                      "rdf:type": "vdoc:Reference",
                      "vdoc:content": [
                        "vdoc:selectKey"
                      ],
                      "vdoc:ref": "vdoc:selectKey"
                    }
                  ]
                },
                "vdoc:content": [
                  "Name"
                ]
              },
              {
                "vdoc:cell": "package",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "Package"
                ]
              },
              {
                "vdoc:cell": "version",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "Version"
                ]
              },
              {
                "rdf:type": "vdoc:Header",
                "vdoc:cell": {
                  "vdoc:words": {
                    "vdoc:selectField": "tags"
                  }
                },
                "vdoc:content": [
                  "Tags"
                ]
              },
              {
                "vdoc:cell": "title",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "Title:"
                ],
                "vdoc:wide": true
              },
              {
                "vdoc:cell": "introduction",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "Introduction:"
                ],
                "vdoc:wide": true,
                "vdoc:tall": true
              }
            ]
          },
          "vdoc:entries": [
            "raem"
          ]
        }
      ]
    },
    "section_api_reference_documents": {
      "@id": "section_api_reference_documents",
      "dc:title": "API reference documents",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "vdoc:lookup": "documents",
          "rdf:type": "vdoc:Table",
          "vdoc:headers": {
            "vdoc:entries": [
              {
                "rdf:type": "vdoc:Header",
                "vdoc:cell": {
                  "vdoc:strong": true,
                  "vdoc:content": [
                    {
                      "rdf:type": "vdoc:Reference",
                      "vdoc:content": [
                        "vdoc:selectKey"
                      ],
                      "vdoc:ref": "vdoc:selectKey"
                    }
                  ]
                },
                "vdoc:content": [
                  "Name"
                ]
              },
              {
                "vdoc:cell": "package",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "Package"
                ]
              },
              {
                "vdoc:cell": "version",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "Version"
                ]
              },
              {
                "rdf:type": "vdoc:Header",
                "vdoc:cell": {
                  "vdoc:words": {
                    "vdoc:selectField": "tags"
                  }
                },
                "vdoc:content": [
                  "Tags"
                ]
              },
              {
                "vdoc:cell": "title",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "Title:"
                ],
                "vdoc:wide": true
              },
              {
                "vdoc:cell": "apiAbstract",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "API abstract:"
                ],
                "vdoc:wide": true,
                "vdoc:tall": true
              }
            ]
          },
          "vdoc:entries": []
        }
      ]
    },
    "section_ontology_documents": {
      "@id": "section_ontology_documents",
      "dc:title": "Ontology documents",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "vdoc:lookup": "documents",
          "rdf:type": "vdoc:Table",
          "vdoc:headers": {
            "vdoc:entries": [
              {
                "rdf:type": "vdoc:Header",
                "vdoc:cell": {
                  "vdoc:strong": true,
                  "vdoc:content": [
                    {
                      "rdf:type": "vdoc:Reference",
                      "vdoc:content": [
                        "vdoc:selectKey"
                      ],
                      "vdoc:ref": "vdoc:selectKey"
                    }
                  ]
                },
                "vdoc:content": [
                  "Name"
                ]
              },
              {
                "vdoc:cell": "package",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "Package"
                ]
              },
              {
                "vdoc:cell": "version",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "Version"
                ]
              },
              {
                "rdf:type": "vdoc:Header",
                "vdoc:cell": {
                  "vdoc:words": {
                    "vdoc:selectField": "tags"
                  }
                },
                "vdoc:content": [
                  "Tags"
                ]
              },
              {
                "vdoc:cell": "title",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "Title:"
                ],
                "vdoc:wide": true
              },
              {
                "vdoc:cell": "ontologyAbstract",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "Ontology abstract:"
                ],
                "vdoc:wide": true,
                "vdoc:tall": true
              }
            ]
          },
          "vdoc:entries": [
            "raem",
            "revdoc",
            "sbomdoc",
            "twindoc",
            "vdoc",
            "@valos/kernel"
          ]
        }
      ]
    },
    "section_other_primary_documents": {
      "@id": "section_other_primary_documents",
      "dc:title": "Other primary documents",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "vdoc:lookup": "documents",
          "rdf:type": "vdoc:Table",
          "vdoc:headers": {
            "vdoc:entries": [
              {
                "rdf:type": "vdoc:Header",
                "vdoc:cell": {
                  "vdoc:strong": true,
                  "vdoc:content": [
                    {
                      "rdf:type": "vdoc:Reference",
                      "vdoc:content": [
                        "vdoc:selectKey"
                      ],
                      "vdoc:ref": "vdoc:selectKey"
                    }
                  ]
                },
                "vdoc:content": [
                  "Name"
                ]
              },
              {
                "vdoc:cell": "package",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "Package"
                ]
              },
              {
                "vdoc:cell": "version",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "Version"
                ]
              },
              {
                "rdf:type": "vdoc:Header",
                "vdoc:cell": {
                  "vdoc:words": {
                    "vdoc:selectField": "tags"
                  }
                },
                "vdoc:content": [
                  "Tags"
                ]
              },
              {
                "vdoc:cell": "title",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "Title:"
                ],
                "vdoc:wide": true
              },
              {
                "vdoc:cell": "abstract",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "Abstract:"
                ],
                "vdoc:wide": true,
                "vdoc:tall": true
              }
            ]
          },
          "vdoc:entries": [
            "sbom",
            "type-vault/AssortedTutorials"
          ]
        }
      ]
    },
    "section_workspaces": {
      "@id": "section_workspaces",
      "dc:title": "Workspaces",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        "This domain introduces the following ",
        {
          "rdf:type": "vdoc:Reference",
          "vdoc:content": [
            "workspaces"
          ],
          "vdoc:ref": "@/valma#workspace"
        },
        " and workspace infrastructure components.",
        {
          "@id": "section_new_types"
        },
        {
          "@id": "section_new_toolsets"
        },
        {
          "@id": "section_new_tools"
        },
        {
          "@id": "section_new_commands"
        },
        {
          "@id": "section_new_workshop_workspaces"
        },
        {
          "@id": "section_new_toolset_workspaces"
        },
        {
          "@id": "section_new_library_workspaces"
        },
        {
          "@id": "section_new_vdoc_extension_workspaces"
        }
      ]
    },
    "section_new_types": {
      "@id": "section_new_types",
      "dc:title": "Workspace types, 9 new",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        "This domain introduces the following ",
        {
          "rdf:type": "vdoc:Reference",
          "vdoc:content": [
            "workspace types"
          ],
          "vdoc:ref": "@/valma#type"
        },
        ".",
        {
          "vdoc:lookup": "types",
          "rdf:type": "vdoc:Table",
          "vdoc:headers": [
            {
              "rdf:type": "vdoc:Header",
              "vdoc:cell": {
                "vdoc:strong": true,
                "vdoc:content": [
                  {
                    "rdf:type": "vdoc:Reference",
                    "vdoc:content": [
                      "vdoc:selectKey"
                    ],
                    "vdoc:ref": "vdoc:selectKey"
                  }
                ]
              },
              "vdoc:content": [
                "Name"
              ]
            },
            {
              "vdoc:cell": "introduction",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "Introduction:"
              ],
              "vdoc:wide": true
            }
          ]
        }
      ]
    },
    "section_new_toolsets": {
      "@id": "section_new_toolsets",
      "dc:title": "Workspace toolsets, 4 new",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        "This domain introduces the following ",
        {
          "rdf:type": "vdoc:Reference",
          "vdoc:content": [
            "workspace toolsets"
          ],
          "vdoc:ref": "@/valma#toolset"
        },
        ":",
        {
          "vdoc:lookup": "toolsets",
          "rdf:type": "vdoc:Table",
          "vdoc:headers": [
            {
              "rdf:type": "vdoc:Header",
              "vdoc:cell": {
                "vdoc:strong": true,
                "vdoc:content": [
                  {
                    "rdf:type": "vdoc:Reference",
                    "vdoc:content": [
                      "vdoc:selectKey"
                    ],
                    "vdoc:ref": "vdoc:selectKey"
                  }
                ]
              },
              "vdoc:content": [
                "Name"
              ]
            },
            {
              "vdoc:cell": "introduction",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "Introduction:"
              ],
              "vdoc:wide": true
            }
          ]
        }
      ]
    },
    "section_new_tools": {
      "@id": "section_new_tools",
      "dc:title": "Workspace tools, 2 new",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        "This domain introduces the following ",
        {
          "rdf:type": "vdoc:Reference",
          "vdoc:content": [
            "workspace tools"
          ],
          "vdoc:ref": "@/valma#tool"
        },
        ":",
        {
          "vdoc:lookup": "tools",
          "rdf:type": "vdoc:Table",
          "vdoc:headers": [
            {
              "rdf:type": "vdoc:Header",
              "vdoc:cell": {
                "vdoc:strong": true,
                "vdoc:content": [
                  {
                    "rdf:type": "vdoc:Reference",
                    "vdoc:content": [
                      "vdoc:selectKey"
                    ],
                    "vdoc:ref": "vdoc:selectKey"
                  }
                ]
              },
              "vdoc:content": [
                "Name"
              ]
            },
            {
              "vdoc:cell": "introduction",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "Introduction:"
              ],
              "vdoc:wide": true
            }
          ]
        }
      ]
    },
    "section_new_commands": {
      "@id": "section_new_commands",
      "dc:title": "Valma commands, 17 new",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        "This domain introduces the following top-level ",
        {
          "rdf:type": "vdoc:Reference",
          "vdoc:content": [
            "valma commands"
          ],
          "vdoc:ref": "@/valma#command"
        },
        ":",
        {
          "vdoc:lookup": "commands",
          "rdf:type": "vdoc:Table",
          "vdoc:headers": [
            {
              "rdf:type": "vdoc:Header",
              "vdoc:cell": {
                "vdoc:strong": true,
                "vdoc:content": [
                  {
                    "rdf:type": "vdoc:Reference",
                    "vdoc:content": [
                      "vdoc:selectKey"
                    ],
                    "vdoc:ref": "vdoc:selectKey"
                  }
                ]
              },
              "vdoc:content": [
                "Name"
              ]
            },
            {
              "vdoc:cell": "description",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "Description:"
              ],
              "vdoc:wide": true
            },
            {
              "vdoc:cell": "introduction",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "Introduction:"
              ],
              "vdoc:wide": true
            }
          ]
        }
      ]
    },
    "section_new_workshop_workspaces": {
      "@id": "section_new_workshop_workspaces",
      "dc:title": "Type 'workshop' workspaces, 1 new",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        "A workshop package provides a set of valma commands for defining and\nmanaging a ValOS domain. The workshops then:\n1. shall provide domain package (de)registration via\n   .configure/.<domain>/{,de}register-package\n2. can provide new workspace types via .configure/.type/*\n3. can provide new toolsets via\n   .configure/{,.type/.<type>/,.domain/.<domain>/}.toolset/**/*\n\nNotably the package (de)registration should provide means for any new\ndomain toolset packages to request the addition of their toolset\nconfigure command to the domain workshop.\nIdiomatic way to implement this is a workshop command which issues a PR\nagainst the source control repository of the workshop package.",
        null,
        "This domain introduces the following ",
        "workshop",
        " ",
        {
          "rdf:type": "vdoc:Reference",
          "vdoc:content": [
            "workspaces"
          ],
          "vdoc:ref": "@/valma#workspace"
        },
        ".",
        {
          "vdoc:lookup": "workshop_workspaces",
          "rdf:type": "vdoc:Table",
          "vdoc:headers": [
            {
              "rdf:type": "vdoc:Header",
              "vdoc:cell": {
                "vdoc:strong": true,
                "vdoc:content": [
                  {
                    "rdf:type": "vdoc:Reference",
                    "vdoc:content": [
                      "vdoc:selectKey"
                    ],
                    "vdoc:ref": "vdoc:selectKey"
                  }
                ]
              },
              "vdoc:content": [
                "Name"
              ]
            },
            {
              "vdoc:cell": "version",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "Version"
              ]
            },
            {
              "vdoc:cell": "license",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "License"
              ]
            },
            {
              "vdoc:cell": "description",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "Description:"
              ],
              "vdoc:wide": true
            },
            {
              "vdoc:cell": "introduction",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "Introduction:"
              ],
              "vdoc:wide": true
            }
          ]
        }
      ]
    },
    "workshop_workspaces": {
      "@id": "workshop_workspaces",
      "@valos/kernel": {
        "version": "0.35.0-prerelease.8",
        "description": "@valos/kernel domain workshop",
        "license": "MIT"
      }
    },
    "section_new_toolset_workspaces": {
      "@id": "section_new_toolset_workspaces",
      "dc:title": "Type 'toolset' workspaces, 8 new",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        "A toolset workspace can be 'selected' by another workspace so that:\n1. The toolset is added as a devDependency to the target workspace,\n2. A configuration section is added for the toolset in the target\n   workspace root 'toolsets.json'\n\nThis makes all valma scripts of the toolset available for the target\nworkspace and allows these commands to easily access and manipulate\ntheir local configuration in the target workspace.",
        null,
        "This domain introduces the following ",
        "toolset",
        " ",
        {
          "rdf:type": "vdoc:Reference",
          "vdoc:content": [
            "workspaces"
          ],
          "vdoc:ref": "@/valma#workspace"
        },
        ".",
        {
          "vdoc:lookup": "toolset_workspaces",
          "rdf:type": "vdoc:Table",
          "vdoc:headers": [
            {
              "rdf:type": "vdoc:Header",
              "vdoc:cell": {
                "vdoc:strong": true,
                "vdoc:content": [
                  {
                    "rdf:type": "vdoc:Reference",
                    "vdoc:content": [
                      "vdoc:selectKey"
                    ],
                    "vdoc:ref": "vdoc:selectKey"
                  }
                ]
              },
              "vdoc:content": [
                "Name"
              ]
            },
            {
              "vdoc:cell": "version",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "Version"
              ]
            },
            {
              "vdoc:cell": "license",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "License"
              ]
            },
            {
              "vdoc:cell": "description",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "Description:"
              ],
              "vdoc:wide": true
            },
            {
              "vdoc:cell": "introduction",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "Introduction:"
              ],
              "vdoc:wide": true
            }
          ]
        }
      ]
    },
    "toolset_workspaces": {
      "@id": "toolset_workspaces",
      "valma": {
        "version": "0.35.0-prerelease.8",
        "description": "A ValOS CLI tool for discovering and executing context-dependent command scripts",
        "license": "MIT"
      },
      "@valos/toolset-domain": {
        "version": "0.35.0-prerelease.8",
        "description": "ValOS Toolset for managing ValOS workspace domains",
        "license": "MIT"
      },
      "@valos/toolset-rest-api-gateway-plugin": {
        "version": "0.35.0-prerelease.8",
        "description": "A toolset for managing Structured ValOS REST API Gateway Plugin",
        "license": "MIT"
      },
      "@valos/toolset-revealer": {
        "version": "0.35.0-prerelease.8",
        "description": "Tools for building revelations both for development and deployment purposes",
        "license": "MIT"
      },
      "@valos/type-gateway-plugin": {
        "version": "0.35.0-prerelease.8",
        "description": "The ValOS type toolset for 'gateway-plugin' workspaces",
        "license": "MIT"
      },
      "@valos/type-opspace": {
        "version": "0.35.0-prerelease.8",
        "description": "The ValOS type toolset for opspace workspaces",
        "license": "MIT"
      },
      "@valos/type-vault": {
        "version": "0.35.0-prerelease.8",
        "description": "The ValOS type toolset for vault workspaces",
        "homepage": "https://valospace.org/type-vault",
        "license": "MIT"
      },
      "@valos/type-worker": {
        "version": "0.35.0-prerelease.8",
        "description": "The ValOS type toolset for worker workspaces",
        "license": "MIT"
      }
    },
    "section_new_library_workspaces": {
      "@id": "section_new_library_workspaces",
      "dc:title": "Type 'library' workspaces, 8 new",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        "A library workspace contains arbitrary ES5 source code and exposes a\nAPI via package.json .main stanza (usually index.js).\n\nA library can provide convenience valma commands but unlike toolsets\na library cannot have workspace local configurations.\n\nLibrary workspaces are almost always published as a packages and\ntypically reside in \"packages/*\" vault workspace directory.",
        null,
        "This domain introduces the following ",
        "library",
        " ",
        {
          "rdf:type": "vdoc:Reference",
          "vdoc:content": [
            "workspaces"
          ],
          "vdoc:ref": "@/valma#workspace"
        },
        ".",
        {
          "vdoc:lookup": "library_workspaces",
          "rdf:type": "vdoc:Table",
          "vdoc:headers": [
            {
              "rdf:type": "vdoc:Header",
              "vdoc:cell": {
                "vdoc:strong": true,
                "vdoc:content": [
                  {
                    "rdf:type": "vdoc:Reference",
                    "vdoc:content": [
                      "vdoc:selectKey"
                    ],
                    "vdoc:ref": "vdoc:selectKey"
                  }
                ]
              },
              "vdoc:content": [
                "Name"
              ]
            },
            {
              "vdoc:cell": "version",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "Version"
              ]
            },
            {
              "vdoc:cell": "license",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "License"
              ]
            },
            {
              "vdoc:cell": "description",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "Description:"
              ],
              "vdoc:wide": true
            },
            {
              "vdoc:cell": "introduction",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "Introduction:"
              ],
              "vdoc:wide": true
            }
          ]
        }
      ]
    },
    "library_workspaces": {
      "@id": "library_workspaces",
      "@valos/engine": {
        "version": "0.35.0-prerelease.8",
        "description": "ValOS Engine API and Schema",
        "homepage": "https://valospace.org/engine",
        "license": "MIT"
      },
      "@valos/gateway-api": {
        "version": "0.35.0-prerelease.8",
        "description": "Minimal footprint ValOS Gateway API local forwards",
        "license": "MIT"
      },
      "@valos/hypertwin": {
        "version": "0.35.0-prerelease.8",
        "description": "ValOS Hypertwin Specifications and Tools Library",
        "license": "MIT"
      },
      "@valos/inspire": {
        "version": "0.35.0-prerelease.8",
        "description": "ValOS Inspire application gateway",
        "license": "MIT"
      },
      "@valos/raem": {
        "version": "0.35.0-prerelease.8",
        "description": "ValOS Resources And Events Model (ValOS-RAEM) API, schema and ontology",
        "homepage": "https://valospace.org/raem",
        "license": "MIT"
      },
      "@valos/script": {
        "version": "0.35.0-prerelease.8",
        "description": "ValOS Script API, schema",
        "license": "MIT"
      },
      "@valos/sourcerer": {
        "version": "0.35.0-prerelease.8",
        "description": "ValOS Sourcerer API, schema",
        "license": "MIT"
      },
      "@valos/tools": {
        "version": "0.35.0-prerelease.8",
        "description": "ValOS Tools API",
        "license": "MIT"
      }
    },
    "section_new_vdoc_extension_workspaces": {
      "@id": "section_new_vdoc_extension_workspaces",
      "dc:title": "Type 'vdoc-extension' workspaces, 4 new",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        "A vdoc-extension workspace contains the extension specification and\nsupporting libraries for a VDoc extension. It inherits library\nworkspace characteristics but has a specific structure and initial\ntemplates which is useful for VDoc extensions in specific.\n",
        null,
        "This domain introduces the following ",
        "vdoc-extension",
        " ",
        {
          "rdf:type": "vdoc:Reference",
          "vdoc:content": [
            "workspaces"
          ],
          "vdoc:ref": "@/valma#workspace"
        },
        ".",
        {
          "vdoc:lookup": "vdoc_extension_workspaces",
          "rdf:type": "vdoc:Table",
          "vdoc:headers": [
            {
              "rdf:type": "vdoc:Header",
              "vdoc:cell": {
                "vdoc:strong": true,
                "vdoc:content": [
                  {
                    "rdf:type": "vdoc:Reference",
                    "vdoc:content": [
                      "vdoc:selectKey"
                    ],
                    "vdoc:ref": "vdoc:selectKey"
                  }
                ]
              },
              "vdoc:content": [
                "Name"
              ]
            },
            {
              "vdoc:cell": "version",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "Version"
              ]
            },
            {
              "vdoc:cell": "license",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "License"
              ]
            },
            {
              "vdoc:cell": "description",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "Description:"
              ],
              "vdoc:wide": true
            },
            {
              "vdoc:cell": "introduction",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "Introduction:"
              ],
              "vdoc:wide": true
            }
          ]
        }
      ]
    },
    "vdoc_extension_workspaces": {
      "@id": "vdoc_extension_workspaces",
      "@valos/revdoc": {
        "version": "0.35.0-prerelease.8",
        "description": "ReVDoc - ReSpec document VDoc extension",
        "homepage": "https://valospace.org/revdoc",
        "license": "MIT"
      },
      "@valos/sbomdoc": {
        "version": "0.35.0-prerelease.8",
        "description": "SBoMDoc - Software Bill of Materials VDoc extension",
        "homepage": "https://valospace.org/sbomdoc",
        "license": "MIT"
      },
      "@valos/twindoc": {
        "version": "0.35.0-prerelease.8",
        "description": "TwinDoc - Valospace Hypertwin VDoc extension",
        "homepage": "https://valospace.org/twindoc",
        "license": "MIT"
      },
      "@valos/vdoc": {
        "version": "0.35.0-prerelease.8",
        "description": "VDoc - ValOS document interchange specification",
        "homepage": "https://valospace.org/vdoc",
        "license": "MIT"
      }
    },
    "ontology": {
      "@id": "ontology",
      "dc:title": "@valos/kernel domain root ontology",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        "All labels have implicit prefix IRI \"https://valospace.org/#\" (typically\n      abbreviated as prefix \"valos:\")",
        {
          "@id": "section_ontology_abstract"
        },
        {
          "@id": "section_prefixes"
        },
        {
          "@id": "section_classes"
        },
        {
          "@id": "section_properties"
        },
        {
          "@id": "section_types"
        },
        {
          "@id": "section_fields"
        },
        {
          "@id": "section_vocabulary_other"
        },
        {
          "@id": "section_context"
        }
      ]
    },
    "section_ontology_abstract": {
      "@id": "section_ontology_abstract",
      "vdoc:content": [
        "@valos/kernel ontology provides vocabulary and definitions of\n      the ValOS core concepts."
      ]
    },
    "section_prefixes": {
      "@id": "section_prefixes",
      "dc:title": "IRI prefixes",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "vdoc:lookup": "prefixes",
          "rdf:type": "vdoc:Table",
          "vdoc:headers": [
            {
              "vdoc:cell": "vdoc:selectKey",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "Prefix"
              ]
            },
            {
              "vdoc:cell": "vdoc:selectValue",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "IRI"
              ]
            }
          ]
        }
      ]
    },
    "section_classes": {
      "@id": "section_classes",
      "dc:title": "<em>valos:* a valos:Class</em> vocabulary",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "vdoc:lookup": "vocabulary",
          "rdf:type": "vdoc:Table",
          "vdoc:headers": {
            "vdoc:entries": [
              {
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:label"
                ],
                "vdoc:cell": {
                  "vdoc:resourceId": "vdoc:selectKey",
                  "rdf:type": "vdoc:Reference",
                  "vdoc:content": [
                    {
                      "vdoc:em": true,
                      "vdoc:content": [
                        "vdoc:selectKey"
                      ]
                    }
                  ],
                  "vdoc:ref": [
                    "#",
                    "vdoc:selectKey"
                  ]
                }
              },
              {
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:subClassOf"
                ],
                "vdoc:cell": {
                  "vdoc:words": {
                    "vdoc:selectField": "rdfs:subClassOf"
                  }
                }
              },
              {
                "vdoc:cell": "rdfs:comment",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:comment"
                ],
                "vdoc:wide": true
              }
            ]
          },
          "vdoc:entries": [
            "Class",
            "Property",
            "Type",
            "Field",
            "PrimaryField",
            "TransientField",
            "InferredField",
            "GeneratedField",
            "AliasField"
          ]
        }
      ]
    },
    "section_properties": {
      "@id": "section_properties",
      "dc:title": "<em>valos:* a valos:Property</em> vocabulary",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "vdoc:lookup": "vocabulary",
          "rdf:type": "vdoc:Table",
          "vdoc:headers": {
            "vdoc:entries": [
              {
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:label"
                ],
                "vdoc:cell": {
                  "vdoc:resourceId": "vdoc:selectKey",
                  "rdf:type": "vdoc:Reference",
                  "vdoc:content": [
                    {
                      "vdoc:em": true,
                      "vdoc:content": [
                        "vdoc:selectKey"
                      ]
                    }
                  ],
                  "vdoc:ref": [
                    "#",
                    "vdoc:selectKey"
                  ]
                }
              },
              {
                "vdoc:cell": "rdfs:subPropertyOf",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:subPropertyOf"
                ]
              },
              {
                "vdoc:cell": "rdfs:domain",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:domain"
                ]
              },
              {
                "vdoc:cell": "rdfs:range",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:range"
                ]
              },
              {
                "vdoc:cell": "rdfs:comment",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:comment"
                ],
                "vdoc:wide": true
              }
            ]
          },
          "vdoc:entries": [
            "generator",
            "aliasOf",
            "coupledField",
            "defaultCoupledField",
            "isOwned",
            "isOwning",
            "isDuplicateable",
            "immediateDefaultValue",
            "allowTransientFieldToBeSingular"
          ]
        }
      ]
    },
    "section_types": {
      "@id": "section_types",
      "dc:title": "<em>valos:* a valos:Type</em> vocabulary",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "vdoc:lookup": "vocabulary",
          "rdf:type": "vdoc:Table",
          "vdoc:headers": {
            "vdoc:entries": [
              {
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:label"
                ],
                "vdoc:cell": {
                  "vdoc:resourceId": "vdoc:selectKey",
                  "rdf:type": "vdoc:Reference",
                  "vdoc:content": [
                    {
                      "vdoc:em": true,
                      "vdoc:content": [
                        "vdoc:selectKey"
                      ]
                    }
                  ],
                  "vdoc:ref": [
                    "#",
                    "vdoc:selectKey"
                  ]
                }
              },
              {
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:subClassOf"
                ],
                "vdoc:cell": {
                  "vdoc:words": {
                    "vdoc:selectField": "rdfs:subClassOf"
                  }
                }
              },
              {
                "vdoc:cell": "rdfs:comment",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:comment"
                ],
                "vdoc:wide": true
              }
            ]
          },
          "vdoc:entries": [
            "Bvob",
            "TransientFields",
            "Resource",
            "InactiveResource",
            "DestroyedResource",
            "Partition"
          ]
        }
      ]
    },
    "section_fields": {
      "@id": "section_fields",
      "dc:title": "<em>valos:* a valos:Field</em> vocabulary",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "vdoc:lookup": "vocabulary",
          "rdf:type": "vdoc:Table",
          "vdoc:headers": {
            "vdoc:entries": [
              {
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:label"
                ],
                "vdoc:cell": {
                  "vdoc:resourceId": "vdoc:selectKey",
                  "rdf:type": "vdoc:Reference",
                  "vdoc:content": [
                    {
                      "vdoc:em": true,
                      "vdoc:content": [
                        "vdoc:selectKey"
                      ]
                    }
                  ],
                  "vdoc:ref": [
                    "#",
                    "vdoc:selectKey"
                  ]
                }
              },
              {
                "vdoc:cell": "rdfs:domain",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:domain"
                ]
              },
              {
                "vdoc:cell": "rdf:type",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "rdf:type"
                ]
              },
              {
                "vdoc:cell": "rdfs:subPropertyOf",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:subPropertyOf"
                ]
              },
              {
                "vdoc:cell": "rdfs:range",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:range"
                ]
              },
              {
                "vdoc:cell": "valos:coupledField",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "valos:coupledField"
                ]
              },
              {
                "vdoc:cell": "rdfs:comment",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:comment"
                ],
                "vdoc:wide": true
              }
            ]
          },
          "vdoc:entries": [
            "id",
            "contentHash",
            "contentReferrers",
            "rawId",
            "typeName",
            "partition",
            "partitionIRI",
            "partitionURI",
            "prototype",
            "prototypeAlias",
            "ownFields",
            "prototypers",
            "instancePrototype",
            "instances",
            "ghostPrototype",
            "materializedGhosts",
            "unnamedCouplings",
            "ghostHost",
            "ghostOwner",
            "ghostOwnlings",
            "owner",
            "name",
            "nameAlias",
            "ownlings",
            "unnamedOwnlings",
            "isFrozen",
            "authorityIRI",
            "partitionAuthorityURI"
          ]
        }
      ]
    },
    "section_vocabulary_other": {
      "@id": "section_vocabulary_other",
      "dc:title": "<em>valos:</em> other vocabulary",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "vdoc:lookup": "vocabulary",
          "rdf:type": "vdoc:Table",
          "vdoc:headers": {
            "vdoc:entries": [
              {
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:label"
                ],
                "vdoc:cell": {
                  "vdoc:resourceId": "vdoc:selectKey",
                  "rdf:type": "vdoc:Reference",
                  "vdoc:content": [
                    {
                      "vdoc:em": true,
                      "vdoc:content": [
                        "vdoc:selectKey"
                      ]
                    }
                  ],
                  "vdoc:ref": [
                    "#",
                    "vdoc:selectKey"
                  ]
                }
              },
              {
                "vdoc:cell": "rdf:type",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "rdf:type"
                ]
              },
              {
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:subClassOf"
                ],
                "vdoc:cell": {
                  "vdoc:words": {
                    "vdoc:selectField": "rdfs:subClassOf"
                  }
                }
              },
              {
                "vdoc:cell": "rdfs:comment",
                "rdf:type": "vdoc:Header",
                "vdoc:content": [
                  "rdfs:comment"
                ],
                "vdoc:wide": true
              }
            ]
          },
          "vdoc:entries": [
            "@context"
          ]
        }
      ]
    },
    "section_context": {
      "@id": "section_context",
      "dc:title": "JSON-LD context term definitions",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        {
          "vdoc:lookup": "context",
          "rdf:type": "vdoc:Table",
          "vdoc:headers": [
            {
              "vdoc:cell": "vdoc:selectKey",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "Term"
              ]
            },
            {
              "vdoc:cell": "vdoc:selectValue",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "Definition"
              ]
            },
            {
              "vdoc:cell": "@id",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "@id"
              ]
            },
            {
              "vdoc:cell": "@type",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "@type"
              ]
            },
            {
              "vdoc:cell": "@container",
              "rdf:type": "vdoc:Header",
              "vdoc:content": [
                "@container"
              ]
            }
          ]
        }
      ]
    },
    "section_hierarchy": {
      "@id": "section_hierarchy",
      "dc:title": "Component hierarchy",
      "rdf:type": "vdoc:Chapter",
      "vdoc:content": [
        "This section will contain hierarchical presentation of all above\n      components (and more)."
      ]
    },
    "rdf:type": "revdoc:Document",
    "vdoc:content": [
      {
        "@id": "abstract"
      },
      {
        "@id": "sotd"
      },
      {
        "@id": "introduction"
      },
      {
        "@id": "section_documentation"
      },
      {
        "@id": "section_workspaces"
      },
      {
        "@id": "ontology"
      },
      {
        "@id": "section_hierarchy"
      }
    ]
  }
]