[
  {
    "@id": "https://valospace.org/technician",
    "@context": {
      "@base": "https://valospace.org/vdoc/0#",
      "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
      "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
      "xsd": "http://www.w3.org/2001/XMLSchema#",
      "owl": "http://www.w3.org/2002/07/owl#",
      "dc": "http://purl.org/dc/elements/1.1/",
      "VSbomdoc": "https://valospace.org/sbomdoc/0#",
      "VKernel": "https://valospace.org/kernel/0#",
      "VDoc": "https://valospace.org/vdoc/0#",
      "VRevdoc": "https://valospace.org/revdoc/0#",
      "restriction": {
        "@reverse": "owl:onProperty"
      },
      "VRevdoc:tooltipContent": {
        "@id": "#tooltipContent",
        "@type": "@id"
      },
      "VDoc:content": {
        "@id": "#content",
        "@container": "@list",
        "@type": "@id"
      },
      "VDoc:entries": {
        "@id": "#entries",
        "@container": "@list",
        "@type": "@id"
      },
      "VDoc:words": {
        "@id": "#words",
        "@container": "@list",
        "@type": "@id"
      },
      "VDoc:lines": {
        "@id": "#lines",
        "@container": "@list",
        "@type": "@id"
      },
      "VDoc:columns": {
        "@id": "#columns",
        "@container": "@list",
        "@type": "@id"
      },
      "VDoc:map": {
        "@id": "#map",
        "@type": "@id"
      },
      "VDoc:cell": {
        "@id": "#cell",
        "@type": "@id"
      }
    },
    "dc:title": [
      {
        "VDoc:strong": true,
        "VDoc:content": [
          "Technicians"
        ]
      },
      " deploy and maintain the valos fabric infrastructure"
    ],
    "VDoc:tags": [
      "PRIMARY",
      "ROLE"
    ],
    "subProfiles": [
      "contributor",
      "developer",
      "administrator",
      "devops",
      "hacker",
      "etc"
    ],
    "respecConfig": {
      "specStatus": "unofficial",
      "editors": [
        {
          "name": "Iridian Kiiskinen",
          "url": "https://valaatech.github.io/fabric/authors/iridian",
          "github": "http://github.com/valospace"
        }
      ],
      "authors": [],
      "shortName": "technician"
    },
    "abstract": {
      "@id": "abstract",
      "@type": "VDoc:Chapter",
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "This document is the first introduction for ValOS technicians -\nthe primary infrastructure developers and operators - to the ValOS\necosystem and its infrastructure toolchains and workflows."
          ]
        }
      ]
    },
    "sotd": {
      "@id": "sotd",
      "@type": "VDoc:Chapter",
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "This document is part of the vault workspace ",
            {
              "@type": "VRevdoc:Package",
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "@valos/kernel"
                  ]
                }
              ],
              "VDoc:ref": "@valos/kernel"
            },
            "\n(of domain ",
            {
              "@type": "VRevdoc:Package",
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "@valos/kernel"
                  ]
                }
              ],
              "VDoc:ref": "@valos/kernel"
            },
            ") which has the description:\n`ValOS common infrastructure tools and libraries monorepository`."
          ]
        },
        {
          "@type": "VRevdoc:Example",
          "VDoc:content": [
            "\nNOTE(2019-08): This document is severely `OUTDATED and SEMANTICALLY UNRELIABLE`.\nThis content is what used to be in DEVOPS.md, is relatively old and\nneeds to be revised. The specification needs to be extracted to be\na separate document from the devops workflows."
          ]
        }
      ]
    },
    "introduction": {
      "@id": "introduction",
      "dc:title": "How do I enable valonauts and expand the Valospace?",
      "@type": "VDoc:Chapter",
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "As a technician you develop and operate the ",
            {
              "VRevdoc:dfn": "#fabric",
              "VDoc:content": [
                {
                  "VDoc:strong": true,
                  "VDoc:content": [
                    {
                      "@type": "VDoc:Reference",
                      "VDoc:content": [
                        "ValOS fabric"
                      ],
                      "VDoc:ref": "#fabric"
                    }
                  ]
                },
                ", ",
                "the globally distributed web-like infrastructure of servers,\n    services and components which underlies the Valospace"
              ]
            },
            "."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "You use ",
            {
              "@type": "VDoc:Reference",
              "VDoc:content": [
                "vlm"
              ],
              "VDoc:ref": "@/valma"
            },
            " and employ your existing,\nlikely professional knowledge of JavaScript, Node.js, DevOps,\nbackend, library and other software development skills."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "You create new open source and/or proprietary node packages. These\npermanently create new fabric functionalities and ",
            {
              "@type": "VDoc:Reference",
              "VDoc:content": [
                "expand"
              ],
              "VDoc:ref": "expand"
            },
            " the Valospace by integrating it to old world systems."
          ]
        }
      ]
    },
    "section_profiles": {
      "@id": "section_profiles",
      "dc:title": "Technician role sub-profiles",
      "@type": "VDoc:Chapter",
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "Technician sub-profiles detail the typical stages of software\ndevelopment and operations workflows within ValOS ecosystem.\nA technician should read the detail docs of their own profiles\nbut also understand the at least the abstract principles of all\nother profiles, which are expanded below."
          ]
        },
        {
          "@id": "developer"
        },
        {
          "@id": "contributor"
        },
        {
          "@id": "tester"
        },
        {
          "@id": "administrator"
        },
        {
          "@id": "devops"
        },
        {
          "@id": "hacker"
        },
        {
          "@id": "etc"
        }
      ]
    },
    "developer": {
      "@id": "developer",
      "dc:title": "How developers set up their development environments",
      "@type": "VDoc:Chapter",
      "VDoc:content": []
    },
    "contributor": {
      "@id": "contributor",
      "dc:title": "How contributors produce git PR's and new fabric packages",
      "@type": "VDoc:Chapter",
      "VDoc:content": []
    },
    "tester": {
      "@id": "tester",
      "dc:title": "How testers assure quality before releases",
      "@type": "VDoc:Chapter",
      "VDoc:content": []
    },
    "administrator": {
      "@id": "administrator",
      "dc:title": "How administrators manage infrastructure resources",
      "@type": "VDoc:Chapter",
      "VDoc:content": []
    },
    "devops": {
      "@id": "devops",
      "dc:title": "How DevOps workflows are implemented using valma",
      "@type": "VDoc:Chapter",
      "VDoc:content": []
    },
    "hacker": {
      "@id": "hacker",
      "dc:title": "How hackers have fun whilst avoiding pain",
      "@type": "VDoc:Chapter",
      "VDoc:content": []
    },
    "etc": {
      "@id": "etc",
      "dc:title": "How to add new profiles",
      "@type": "VDoc:Chapter",
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "Create a ",
            {
              "@type": "VDoc:Reference",
              "VDoc:content": [
                "PR in github"
              ],
              "VDoc:ref": "https://help.github.com/en/articles/about-pull-requests"
            },
            " against @valos/kernel/revdocs/technician.revdoc.js"
          ]
        }
      ]
    },
    "preface": {
      "@id": "preface",
      "dc:title": "*IMPORTANT",
      "@type": "VDoc:Chapter",
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "This document, like most of the more principled and less pragmatic\ndocuments must be understood as strong speculation and as an\narchitectural exercise (although a very serious one) on\nwhat-could-be."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "This rings especially true for the primary focus of this document,\nie. for ",
            {
              "VDoc:em": true,
              "VDoc:content": [
                "ValOS Core"
              ]
            },
            " as the fully functional open source\ncore around which the often proprietary ValOS ecosystem would expand.\nThis is an ambitious, even presumptuous attempt to facilitate the\nfruitful side-by-side living of open source communities as well as\nprivate enterprises as a combination of technical and social\narchitecture."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "(The technical part is the ambitious part and the social part is\nthe presumptuous part. :D)"
          ]
        }
      ]
    },
    "specification": {
      "@id": "specification",
      "dc:title": "ValOS specification",
      "@type": "VDoc:Chapter",
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "This document has two purposes. Firstly it provides the initial\nspecification of Valaa Open System (",
            {
              "VDoc:em": true,
              "VDoc:content": [
                "ValOS"
              ]
            },
            ") and secondly\nit serves as the introduction for ",
            {
              "@type": "VDoc:Reference",
              "VDoc:content": [
                "Development Operations"
              ],
              "VDoc:ref": "https://en.wikipedia.org/wiki/DevOps"
            },
            "."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "ValOS specification is provided as quoted and numbered ValOS rules.",
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-1.1"
                  ]
                },
                ": ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "ValOS packages"
                  ]
                },
                " are\n    all the npmjs.com packages with ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "@valos"
                  ]
                },
                " scope which\n    don't have cyclic dependencies with other ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "@valos"
                  ]
                },
                "\n    scope packages."
              ]
            },
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-1.2"
                  ]
                },
                ": Valaa Open System (",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "ValOS"
                  ]
                },
                " is defined to be the contents of all ValOS\n    packages and nothing else."
              ]
            },
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-1.3"
                  ]
                },
                ": ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "ValOS specification"
                  ]
                },
                "\n    consists of all files in all ValOS packages whose path in the\n    package matches the JS regex ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "/^specifications\\/\\w*.md$/"
                  ]
                },
                "\n    and nothing else."
              ]
            },
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-1.4"
                  ]
                },
                ": Rules in a package are considered\n    to be more specific than the rules in its package dependency tree.\n    More specific rules take precedence."
              ]
            },
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-1.5"
                  ]
                },
                ": All packages which conform to\n    ValOS specification are called ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "ValOS packages"
                  ]
                },
                ". These\n    packages are inclusively considered part of the ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "ValOS ecosystem"
                  ]
                },
                "."
              ]
            }
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "The system is structured into purpose-oriented vertical ",
            {
              "VDoc:em": true,
              "VDoc:content": [
                "domains"
              ]
            },
            "\nand into four content oriented horizontal ",
            {
              "VDoc:em": true,
              "VDoc:content": [
                "utility layers"
              ]
            },
            "."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "Each utility layer is named by the content or service is provides\nand builds or depends on the previous layers.",
            {
              "VDoc:content": [
                {
                  "@type": "VDoc:BulletList",
                  "VDoc:lines": [
                    [
                      {
                        "VDoc:em": true,
                        "VDoc:content": [
                          "files"
                        ]
                      },
                      " layer provides files via git repositories."
                    ],
                    {
                      "@type": "VDoc:Paragraph",
                      "VDoc:content": [
                        {
                          "VDoc:em": true,
                          "VDoc:content": [
                            "packages"
                          ]
                        },
                        " layer provides npm packages via npm registry.\n  These packages are created by git repositories called ",
                        {
                          "VDoc:em": true,
                          "VDoc:content": [
                            "vaults"
                          ]
                        },
                        "."
                      ]
                    },
                    {
                      "@type": "VDoc:Paragraph",
                      "VDoc:content": [
                        {
                          "VDoc:em": true,
                          "VDoc:content": [
                            "authorities"
                          ]
                        },
                        " layer provides the ValOS live authority\n  service APIs. Authorities are deployed and managed with ",
                        {
                          "VDoc:em": true,
                          "VDoc:content": [
                            "opspace"
                          ]
                        },
                        " workspaces."
                      ]
                    },
                    {
                      "@type": "VDoc:Paragraph",
                      "VDoc:content": [
                        {
                          "VDoc:em": true,
                          "VDoc:content": [
                            "chronicles"
                          ]
                        },
                        " layer provides the resource content as\n  chronicle events and bvobs. These are served via authority\n  service APIs."
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "TODO(iridian): Figure out and describe the concrete role of domains.\nNOTE(iridian, 2019-08): Domains are now mostly figured out; they\nare administrative, organisational units and namespaces."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "A DevOp manages these layers by scripts that are delivered inside\nthe packages alongside their main content. A command line tool called\nValOS Medium or ",
            {
              "@type": "VRevdoc:Command",
              "VDoc:content": [
                "vlm"
              ]
            },
            " is used to discover and ",
            {
              "VDoc:em": true,
              "VDoc:content": [
                "invoke"
              ]
            },
            "\nthese scripts as ",
            {
              "VDoc:em": true,
              "VDoc:content": [
                "valma commands"
              ]
            },
            "."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "From a DevOps perspective ",
            {
              "VDoc:em": true,
              "VDoc:content": [
                "valma"
              ]
            },
            ", ",
            {
              "VDoc:em": true,
              "VDoc:content": [
                "vault"
              ]
            },
            " and ",
            {
              "VDoc:em": true,
              "VDoc:content": [
                "opspace"
              ]
            },
            " are the three concrete core mechanisms that everything\nelse ties into."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "Valma and specific domains are specified in other documents and as such\nare only briefly described here."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "The utility layers are common to everything form the bulk of this\ndocument. They are fully specified at the last part of this document\nafter all the brief descriptions."
          ]
        }
      ]
    },
    "domains": {
      "@id": "domains",
      "dc:title": "ValOS `domains` are cross-stack slices, each with a well-defined purpose",
      "@type": "VDoc:Chapter",
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-2.1"
                  ]
                },
                ": A ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "domain"
                  ]
                },
                " is the\n    collection of all the systems, interactions and dynamics which\n    exclusively serve a particular purpose."
              ]
            },
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-2.2"
                  ]
                },
                ": A domain must define the\n    purpose, describe its producers and consumers and should\n    provide a direction for technical and operational structure as\n    well."
              ]
            },
            "For example the ",
            {
              "@type": "VRevdoc:Package",
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "@valos/kernel"
                  ]
                }
              ],
              "VDoc:ref": "@valos/kernel"
            },
            " domain provides the\nessential central ValOS code for developing new ValOS\ninfrastructure software. Its main producers are the kernel software\ndevelopers and its consumers are the infrastructure software\ndevelopers. It revolves around developing code as library packages."
          ]
        }
      ]
    },
    "valma": {
      "@id": "valma",
      "dc:title": "`valma` - a convenience CLI to context-dependent command scripts",
      "@type": "VDoc:Chapter",
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "valma (",
            {
              "@type": "VRevdoc:Command",
              "VDoc:content": [
                "vlm"
              ]
            },
            " in CLI) is a convenience tool for executing\ncommand scripts exported by packages in valos workspace contexts.\nIt is a generalization of 'npx -c' behaviour, adding\ndiscoverability, ability to invoke global scripts and the ability\nto invoke multiple scripts at once using glob matching.",
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-3.1"
                  ]
                },
                ": valma is installed with ",
                {
                  "@type": "VRevdoc:Command",
                  "VDoc:content": [
                    "npm install -g valma"
                  ]
                },
                " or as a package dependency"
              ]
            },
            "This installs the global CLI command ",
            {
              "@type": "VRevdoc:Command",
              "VDoc:content": [
                "vlm"
              ]
            },
            ". At its core\nvalma is a command dispatcher to ",
            {
              "VDoc:em": true,
              "VDoc:content": [
                "valma scripts"
              ]
            },
            " in\nvarious ",
            {
              "VDoc:em": true,
              "VDoc:content": [
                "command pools"
              ]
            },
            ".",
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-3.2"
                  ]
                },
                ": valma searches the scripts\n    first from the package.json ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "scripts"
                  ]
                },
                " pool, then from ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "./node_modules/.bin/"
                  ]
                },
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "depends"
                  ]
                },
                " pool and lastly from\n    the OS-specific variant of ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "/usr/bin"
                  ]
                },
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "global"
                  ]
                },
                " pool."
              ]
            },
            "As an example typing ",
            {
              "@type": "VRevdoc:Command",
              "VDoc:content": [
                "vlm status"
              ]
            },
            " in some directory\ncontext would forward the command to ",
            {
              "@type": "VRevdoc:Command",
              "VDoc:content": [
                "valma.bin/valma-status"
              ]
            },
            " first if one exists and falling back to the more generic versions\nif not. The call eventually resolves at the global ",
            {
              "@type": "VRevdoc:Command",
              "VDoc:content": [
                "/usr/bin/valma-status"
              ]
            },
            ". Its implementation then calls ",
            {
              "@type": "VRevdoc:Command",
              "VDoc:content": [
                "vlm .status/**/*"
              ]
            },
            " which calls all scripts which match\nthe glob ",
            {
              "@type": "VRevdoc:Command",
              "VDoc:content": [
                ".status/**/*"
              ]
            },
            " and are visible on the\nexecution context pools (the scripts called by ",
            {
              "@type": "VRevdoc:Command",
              "VDoc:content": [
                "vlm status"
              ]
            },
            " are known as ",
            {
              "VDoc:em": true,
              "VDoc:content": [
                "valma status scripts"
              ]
            },
            ").",
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-3.3"
                  ]
                },
                ": A package can export valma scripts using npm package.json ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "bin"
                  ]
                },
                " section and by prefixing the exported name with ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "_vlm_"
                  ]
                },
                " as usual. These scripts will be available for\n    all packages depending on this package in their ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "depends"
                  ]
                },
                " pool."
              ]
            },
            "Running ",
            {
              "@type": "VRevdoc:Command",
              "VDoc:content": [
                "vlm"
              ]
            },
            " with no arguments lists all available\ncommands grouped by pool in current directory context.",
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-3.5"
                  ]
                },
                ": valma can be used in programmatic contexts to run valma\n    scripts. When done so, valma must be added as a dependency."
              ]
            },
            "This happens just like with the CLI by using ",
            {
              "@type": "VRevdoc:Command",
              "VDoc:content": [
                "vlm <command> [<args>]"
              ]
            },
            ".\n(\"npx -c\" would be the alternative but it's slow and limited).",
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-3.5.1"
                  ]
                },
                ": valma ensures that node environment is loaded"
              ]
            },
            "The environment is loaded only once even for recursive script\ninvokations.",
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-3.5.2"
                  ]
                },
                ": valma ensures that 'vlm' is always found in path"
              ]
            },
            "This is so that valma scripts can call 'vlm' even valma is not\nglobally installed as long as valma has been installed as a dependency.",
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-3.5.3"
                  ]
                },
                ": valma ensures that the most specific 'vlm' version is used\n    to evaluate a command, preferring scripts over depended over global."
              ]
            },
            "This is so that toolkits can precisely control the whole toolchain\nin their dependencies."
          ]
        }
      ]
    },
    "utility_layer": {
      "@id": "utility_layer",
      "dc:title": "ValOS `utility` layers provide operational services",
      "@type": "VDoc:Chapter",
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "ValOS has four main utility layers: ",
            {
              "VDoc:em": true,
              "VDoc:content": [
                "files"
              ]
            },
            ", ",
            {
              "VDoc:em": true,
              "VDoc:content": [
                "packages"
              ]
            },
            ",\n",
            {
              "VDoc:em": true,
              "VDoc:content": [
                "authorities"
              ]
            },
            " and ",
            {
              "VDoc:em": true,
              "VDoc:content": [
                "chronicles"
              ]
            },
            ". These layers form\nthe core operational infrastructure of ValOS."
          ]
        },
        {
          "@id": "utility_layer_overview"
        },
        {
          "@id": "files_layer"
        },
        {
          "@id": "packages_layer"
        },
        {
          "@id": "authorities_layer"
        },
        {
          "@id": "chronicles_layer"
        }
      ]
    },
    "utility_layer_overview": {
      "@id": "utility_layer_overview",
      "dc:title": "Overview of utility layers",
      "@type": "VDoc:Chapter",
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-4.1.1"
                  ]
                },
                ": An ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "utility"
                  ]
                },
                " is a domain\n    with a well-defined operational purpose."
              ]
            },
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-4.1.2"
                  ]
                },
                ": utility must explicitly define\n    the ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "payload"
                  ]
                },
                " it provides to its consumers as well as the\n    providers, tools and workflows used to manage that payload."
              ]
            },
            "Below is a rough correlation of similar concepts across utilities."
          ]
        },
        {
          "@type": "VDoc:Table",
          "VDoc:columns": [
            "Utility",
            "Tool",
            "Payload",
            "Providers",
            "Consumed via",
            "Upstream",
            "Configuration",
            "Modified via",
            "Produced via",
            "Authority",
            "Distributed via"
          ],
          "VDoc:entries": [
            [
              "files",
              "`git`",
              "files in `./*`",
              "github.com",
              "`git clone`",
              "N/A",
              "`.git/*`",
              "`branch` `commit`",
              "`git push` & PR",
              "human",
              "merge PR to & `git push master`"
            ],
            [
              "packages",
              "`vlm`, `yarn`",
              "files in `/node_modules/..`",
              "npmjs.com",
              "`depend` `require`",
              "`files`",
              "`package.json`",
              "ups. `src/*` `bin/*`",
              "upstream",
              "hybrid",
              "`assemble-packages` `publish-packages`"
            ],
            [
              "authorities",
              "`vlm`",
              "APIs, site & gateway files",
              "IaaS, custom",
              "browsers, various",
              "`files`",
              "upstream *",
              "upstream *",
              "upstream",
              "hybrid",
              "`build-release` `deploy-release`"
            ],
            [
              "chronicles",
              "`vlm`, gateway",
              "event logs, bvobs",
              "authorities",
              "event & bvob APIs",
              "N/A",
              "N/A",
              "gateway",
              "command & bvob APIs",
              "authorities",
              "automatic, custom"
            ]
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            {
              "VDoc:content": [
                {
                  "@type": "VDoc:BulletList",
                  "VDoc:lines": [
                    [
                      {
                        "VDoc:em": true,
                        "VDoc:content": [
                          "Utility"
                        ]
                      },
                      "- the utility layer which is being described"
                    ],
                    {
                      "@type": "VDoc:Paragraph",
                      "VDoc:content": [
                        {
                          "VDoc:em": true,
                          "VDoc:content": [
                            "Tool"
                          ]
                        },
                        " - the name of the tool used to manipulate the payload and/or metadata"
                      ]
                    },
                    {
                      "@type": "VDoc:Paragraph",
                      "VDoc:content": [
                        {
                          "VDoc:em": true,
                          "VDoc:content": [
                            "Payload"
                          ]
                        },
                        " - the content or the service the utility delivers to consumers"
                      ]
                    },
                    {
                      "@type": "VDoc:Paragraph",
                      "VDoc:content": [
                        {
                          "VDoc:em": true,
                          "VDoc:content": [
                            "Providers"
                          ]
                        },
                        " - the authoritative source for the payload"
                      ]
                    },
                    {
                      "@type": "VDoc:Paragraph",
                      "VDoc:content": [
                        {
                          "VDoc:em": true,
                          "VDoc:content": [
                            "Consumed via"
                          ]
                        },
                        " - the mechanism used by a consumer to access the payload"
                      ]
                    },
                    {
                      "@type": "VDoc:Paragraph",
                      "VDoc:content": [
                        {
                          "VDoc:em": true,
                          "VDoc:content": [
                            "Upstream"
                          ]
                        },
                        " - the possible external source of payload updates"
                      ]
                    },
                    {
                      "@type": "VDoc:Paragraph",
                      "VDoc:content": [
                        {
                          "VDoc:em": true,
                          "VDoc:content": [
                            "Configuration"
                          ]
                        },
                        " - where the configuration of the utility itself is specified"
                      ]
                    },
                    {
                      "@type": "VDoc:Paragraph",
                      "VDoc:content": [
                        {
                          "VDoc:em": true,
                          "VDoc:content": [
                            "Modifed via"
                          ]
                        },
                        " - how to make local changes to the payload"
                      ]
                    },
                    {
                      "@type": "VDoc:Paragraph",
                      "VDoc:content": [
                        {
                          "VDoc:em": true,
                          "VDoc:content": [
                            "Produced via"
                          ]
                        },
                        " - how to request for a set of local changes to be distributed"
                      ]
                    },
                    {
                      "@type": "VDoc:Paragraph",
                      "VDoc:content": [
                        {
                          "VDoc:em": true,
                          "VDoc:content": [
                            "Authority"
                          ]
                        },
                        " - who accepts and distributes a change request"
                      ]
                    },
                    {
                      "@type": "VDoc:Paragraph",
                      "VDoc:content": [
                        {
                          "VDoc:em": true,
                          "VDoc:content": [
                            "Distributed via"
                          ]
                        },
                        " - how changes are made live to all consumers"
                      ]
                    }
                  ]
                }
              ]
            },
            "Note that ",
            {
              "VDoc:em": true,
              "VDoc:content": [
                "files"
              ]
            },
            " and ",
            {
              "VDoc:em": true,
              "VDoc:content": [
                "chronicles"
              ]
            },
            " don't have\nan external upstream and thus these bands are the defining\nauthority of all of their payload."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "On the other hand ",
            {
              "VDoc:em": true,
              "VDoc:content": [
                "packages"
              ]
            },
            " and ",
            {
              "VDoc:em": true,
              "VDoc:content": [
                "authorities"
              ]
            },
            " use\nthe ",
            {
              "VDoc:em": true,
              "VDoc:content": [
                "files"
              ]
            },
            " as their external upstream: their payload is\ngenerated from the content in git repositories. Making updates to\nsuch utility content thus requires:",
            {
              "VDoc:content": [
                {
                  "@type": "VDoc:NumberedList",
                  "VDoc:lines": [
                    [
                      "modifying the corresponding upstream git repository"
                    ],
                    {
                      "@type": "VDoc:Paragraph",
                      "VDoc:content": [
                        "distributing the git changes (a PR followed with ",
                        {
                          "@type": "VRevdoc:Command",
                          "VDoc:content": [
                            "git push master"
                          ]
                        },
                        ")"
                      ]
                    },
                    {
                      "@type": "VDoc:Paragraph",
                      "VDoc:content": [
                        "distributing the utility update (",
                        {
                          "@type": "VRevdoc:Command",
                          "VDoc:content": [
                            "publish-packages"
                          ]
                        },
                        " or ",
                        {
                          "@type": "VRevdoc:Command",
                          "VDoc:content": [
                            "deploy-release"
                          ]
                        },
                        ")."
                      ]
                    }
                  ]
                }
              ]
            },
            "\nStep 3 can be automated by tooling in particular domains as a response\nto particularily formed git repository updates."
          ]
        }
      ]
    },
    "files_layer": {
      "@id": "files_layer",
      "dc:title": "Files utility layer has files committed in git repositories",
      "@type": "VDoc:Chapter",
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            {
              "@type": "VDoc:Reference",
              "VDoc:content": [
                "git"
              ],
              "VDoc:ref": "https://git-scm.com/"
            },
            " is the industry standard\nfor version managing sets of files in a non-centralized ecosystem.\nNo additional tools are provided because there is no need.",
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-4.2.1"
                  ]
                },
                ": ValOS tools should use git as the files provider."
              ]
            },
            "While github.com is the de facto standard provider and\nthe typical choice it must *not* be _required_.",
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-4.2.2"
                  ]
                },
                ": All git providers must be fully supported by all ValOS tools and\n    libraries."
              ]
            }
          ]
        }
      ]
    },
    "packages_layer": {
      "@id": "packages_layer",
      "dc:title": "Packages utility layer has shared, versioned, dependable sets of files published as npmjs.com packages",
      "@type": "VDoc:Chapter",
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-4.3.1"
                  ]
                },
                ": The packages utility payload is ",
                {
                  "@type": "VDoc:Reference",
                  "VDoc:content": [
                    "npmjs.com packages"
                  ],
                  "VDoc:ref": "https://docs.npmjs.com/getting-started/packages"
                }
              ]
            },
            "These packages can be libraries, toolsets or prebuilt release runtimes\n- any sets of files really. The raison d'être for packages is when\nseveral different consumers depend on the same set of files which are\nalso expected to undergo periodic development. The files thus need\nversioning, dependency management and automated distribution - this all\nis provided by npm."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "Note: npmjs.com is a javascript repository - this should not be\na problem as long as ValOS remains mostly javascript and config files.\nIf a need to diversity the languages arises a ",
            {
              "@type": "VDoc:Reference",
              "VDoc:content": [
                "private npm registry"
              ],
              "VDoc:ref": "https://docs.npmjs.com/misc/registry#can-i-run-my-own-private-registry"
            },
            "can be set up for that purpose."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "valma package commands: ",
            {
              "@type": "VRevdoc:Command",
              "VDoc:content": [
                "vlm assemble-packages"
              ]
            },
            " ",
            {
              "@type": "VRevdoc:Command",
              "VDoc:content": [
                "vlm publish-packages"
              ]
            }
          ]
        }
      ]
    },
    "authorities_layer": {
      "@id": "authorities_layer",
      "dc:title": "Authorities utility layer has the authority deployments on infrastructure services",
      "@type": "VDoc:Chapter",
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-4.4.1"
                  ]
                },
                ": A ValOS ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "authority"
                  ]
                },
                " is uniquely identified by an\n    authority URI."
              ]
            },
            {
              "@type": "VDoc:Reference",
              "VDoc:content": [
                "Read more about valos URIs"
              ],
              "VDoc:ref": "packages/raem/README.md"
            },
            "."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-4.4.2"
                  ]
                },
                ": A ValOS ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "authority"
                  ]
                },
                " can contain ValOS ",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "chronicles"
                  ]
                },
                " and must provide a mechanism for\n    accessing event logs and bvob content as well as for\n    accepting and authorizing incoming commands into authorized\n    chronicle events."
              ]
            },
            "Authorities are usually live deployments on some\ninfrastructure and they provide service APIs as the required\nmechanisms."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "Stateless or in some way non-infrastructural authorities also exist but\nare specified elsewhere (they are considered degenerate, without\nupstream and with empty payload)."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            {
              "@type": "VDoc:Reference",
              "VDoc:content": [
                "Read more about authorities"
              ],
              "VDoc:ref": "packages/sourcerer/README.md"
            },
            "."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-4.4.3"
                  ]
                },
                ": Authorities utility layer payload (",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "authority payload"
                  ]
                },
                ")\n    is a set of deployed authority service APIs and any associated\n    static content."
              ]
            },
            "The payload here refers to the service deployments and their live APIs\nthemselves and not any dynamic content delivered through them. Such\ndynamic content belongs to other domains (notably valospace content\nresides in the ",
            {
              "VDoc:em": true,
              "VDoc:content": [
                "chronicles"
              ]
            },
            " utility layer, see below)."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "The static content includes HTTP landing pages, site routes and their\nconfigurations, ValOS gateway and spindle runtimes and any other similar\nstatically configured files."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-4.4.4"
                  ]
                },
                ": An authority may have\n    an operations workspace (",
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "opspace"
                  ]
                },
                ") as its upstream for\n    managing its payload."
              ]
            }
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "Particular authorities are naturally free to implement their\noperational architectures in any way they like. This said opspaces\nhave a well-defined structure which valma authority tools make use of."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "Updates to the authority payloads are primarily done as modifications\nto the corresponding opspace and then distributing those via release\ndeployments."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-4.4.5"
                  ]
                },
                ": An opspace should not\n    be published as a package."
              ]
            }
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "While opspaces make use of package.json and the npm dependency\nmanagement this provides, they can also contain considerable amounts of\nstatic content. Also, there should be no reason to depend on an opspace.\nAutomatic release deployment systems should have access to a opspace\ndirectly for building the release."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            {
              "VDoc:blockquote": true,
              "VDoc:content": [
                {
                  "VDoc:em": true,
                  "VDoc:content": [
                    "valos-vault-4.4.6"
                  ]
                },
                ": Information must not move\n    from deployed authorities back to authority utility layer\n    upstream."
              ]
            }
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "Information flowing back upstream increases complexity, prevents\ndecentralized and manual upstreams (there is a definite upstream which\nmust be always accessible), and are a security concern (for\nprogrammatic access the downstream must have the upstream credentials)."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "If a use case necessitating this arises, still seriously consider\nkeeping the mutateable content separate from the upstream itself and\ninstead have upstream only contain the necessary code and credentials\nto access this content."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "Note: this applies to architectural decisions and automations only.\nInteractive content in valospace is not limited from using an opspace\nto update authorities (although it is still recommended to keep such\nvalospace applications deployments separate from the authorities they\nare used to control)."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "valma opspace commands: ",
            {
              "@type": "VRevdoc:Command",
              "VDoc:content": [
                "vlm build-release"
              ]
            },
            " ",
            {
              "@type": "VRevdoc:Command",
              "VDoc:content": [
                "vlm deploy-release"
              ]
            }
          ]
        },
        {
          "dc:title": "ValOS core vs. auxiliary authorities",
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "ValOS authorities and any chronicle content they provide do not need\nto be public. A ValOS core authority is an authority which can be\naccessed using only ValOS core spindles (including no spindles at all)."
              ]
            },
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "A ValOS auxiliary authority is an authority which requires a conforming\nbut non-core ValOS gateway spindle in order to be accessed."
              ]
            },
            {
              "@type": "VRevdoc:Example",
              "VDoc:content": [
                "Design Note 2019-03: the spindle conformance requirements are\nunspecified. When they are specified they must be lenient enough to\nenable sophisticated protocols but constrained/sandboxed enough that\nsuch spindles cannot interfere with other reasonably written spindles."
              ]
            }
          ]
        }
      ]
    },
    "chronicles_layer": {
      "@id": "chronicles_layer",
      "dc:title": "Chronicles utility layer - the foundation of valospace",
      "@type": "VDoc:Chapter",
      "VDoc:content": [
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "Event logs and bvob content are the chronicles payload and are\nconsumed by ValOS gateways. It is more extensively covered elsewhere\nand is mentioned here for completeness; precious little infrastructural\ntooling is provided for them yet."
          ]
        },
        {
          "@type": "VDoc:Paragraph",
          "VDoc:content": [
            "Eventually various chronicle diagnostics tools will come in handy:",
            {
              "VDoc:content": [
                {
                  "@type": "VDoc:BulletList",
                  "VDoc:lines": [
                    [
                      "Media content import/export tools"
                    ],
                    {
                      "@type": "VDoc:Paragraph",
                      "VDoc:content": [
                        "Complete chronicle to file system hierarchy save/load tools"
                      ]
                    },
                    {
                      "@type": "VDoc:Paragraph",
                      "VDoc:content": [
                        "Event log introspection and manipulation tools"
                      ]
                    },
                    {
                      "@type": "VDoc:Paragraph",
                      "VDoc:content": [
                        "etc."
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "dc:title": "ValOS public vs protected chronicles",
          "@type": "VDoc:Chapter",
          "VDoc:content": [
            {
              "@type": "VDoc:Paragraph",
              "VDoc:content": [
                "All chronicles provided by ValOS authorities are ValOS chronicles.\nAdditionally ValOS public chronicles are chronicles which are both",
                {
                  "VDoc:content": [
                    {
                      "@type": "VDoc:NumberedList",
                      "VDoc:lines": [
                        [
                          "provided by ValOS core authorities, and"
                        ],
                        {
                          "@type": "VDoc:Paragraph",
                          "VDoc:content": [
                            "are available for an anonymous consumer with nothing but a client\n  capable of running the ValOS gateway runtime which the authority\n  itself provides (with reasonable concessions for the authority to\n  prevent DDOS attacks)"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "@type": "VRevdoc:Example",
              "VDoc:content": [
                "TODO(iridian): Figure out whether this is actually the most meaningful\nplace to assign this semantic border. A specific term for\nnon-authenticated chronicles capable of running only on standard\nruntime is useful, but how useful actually?"
              ]
            }
          ]
        }
      ]
    },
    "@type": "VRevdoc:Document",
    "VDoc:content": [
      {
        "@id": "abstract"
      },
      {
        "@id": "sotd"
      },
      {
        "@id": "introduction"
      },
      {
        "@id": "section_profiles"
      },
      {
        "@id": "preface"
      },
      {
        "@id": "specification"
      },
      {
        "@id": "domains"
      },
      {
        "@id": "valma"
      },
      {
        "@id": "utility_layer"
      },
      {
        "dc:title": "Kernel domain provides the ValOS primary libraries",
        "@type": "VDoc:Chapter",
        "VDoc:content": [
          {
            "@type": "VDoc:Paragraph",
            "VDoc:content": [
              "It does, indeed (this section pending better understanding on how to\nwrite domain specifications)."
            ]
          }
        ]
      }
    ]
  }
]